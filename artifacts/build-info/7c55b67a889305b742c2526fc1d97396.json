{"id":"7c55b67a889305b742c2526fc1d97396","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n    \n    /**\n     * @dev mint和transfer的区别：\n     * mint是 _balances[to]+=value\n     * transfer是 _balances[to]+=value , _balances[from]-=value \n     */\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     * \n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     * \n     * admin => manager\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        // 只执行转账操作\n        _update(from, to, ids, values);\n\n        // 检查有没有实现 Receiver\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n\n        // 检查有没有实现 IERC1155Receiver\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/Tokens/Token.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.14;\n\nimport {ERC1155} from \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\n\ncontract Token is ERC1155{\n    constructor(string memory uri) ERC1155(uri){}\n    \n    // 给用户冲币\n    function recharge(\n        uint256 bin,\n        uint256 amount,    // X96\n        bytes memory data\n    ) public{\n        _mint(msg.sender,bin,amount,data);\n    }\n    \n    // 给用户多区间冲币\n    function rechargeBatch(\n        uint256[] memory bin,\n        uint256[] memory amount,  // X96\n        bytes memory data\n    ) public{\n        _mintBatch(msg.sender,bin,amount,data);\n    }\n\n}"}},"settings":{"viaIR":true,"optimizer":{"enabled":true,"runs":200,"details":{"yulDetails":{"optimizerSteps":"u"}}},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[136],"IERC20Errors":[41],"IERC721Errors":[89]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"138:139:0","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":41,"linearizedBaseContracts":[41],"name":"IERC20Errors","nameLocation":"288:12:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"307:309:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":11,"name":"ERC20InsufficientBalance","nameLocation":"627:24:0","nodeType":"ErrorDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"sender","nameLocation":"660:6:0","nodeType":"VariableDeclaration","scope":11,"src":"652:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"balance","nameLocation":"676:7:0","nodeType":"VariableDeclaration","scope":11,"src":"668:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"needed","nameLocation":"693:6:0","nodeType":"VariableDeclaration","scope":11,"src":"685:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:0"},"src":"621:80:0"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"707:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":16,"name":"ERC20InvalidSender","nameLocation":"870:18:0","nodeType":"ErrorDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"sender","nameLocation":"897:6:0","nodeType":"VariableDeclaration","scope":16,"src":"889:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:0"},"src":"864:41:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"911:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":21,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:0","nodeType":"ErrorDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:0","nodeType":"VariableDeclaration","scope":21,"src":"1102:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:0"},"src":"1075:45:0"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1126:345:0","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":30,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"spender","nameLocation":"1517:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1509:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:0","nodeType":"VariableDeclaration","scope":30,"src":"1526:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"needed","nameLocation":"1553:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1545:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:0"},"src":"1476:85:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1567:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":35,"name":"ERC20InvalidApprover","nameLocation":"1752:20:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"approver","nameLocation":"1781:8:0","nodeType":"VariableDeclaration","scope":35,"src":"1773:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:0"},"src":"1746:45:0"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1797:195:0","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":40,"name":"ERC20InvalidSpender","nameLocation":"2003:19:0","nodeType":"ErrorDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"spender","nameLocation":"2031:7:0","nodeType":"VariableDeclaration","scope":40,"src":"2023:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:0"},"src":"1997:43:0"}],"scope":137,"src":"278:1764:0","usedErrors":[11,16,21,30,35,40],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2044:141:0","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":89,"linearizedBaseContracts":[89],"name":"IERC721Errors","nameLocation":"2196:13:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2216:219:0","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":47,"name":"ERC721InvalidOwner","nameLocation":"2446:18:0","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"owner","nameLocation":"2473:5:0","nodeType":"VariableDeclaration","scope":47,"src":"2465:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:0"},"src":"2440:40:0"},{"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"2486:132:0","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":52,"name":"ERC721NonexistentToken","nameLocation":"2629:22:0","nodeType":"ErrorDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:0","nodeType":"VariableDeclaration","scope":52,"src":"2652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:0"},"src":"2623:46:0"},{"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2675:289:0","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":61,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:0","nodeType":"ErrorDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"sender","nameLocation":"3004:6:0","nodeType":"VariableDeclaration","scope":61,"src":"2996:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:0","nodeType":"VariableDeclaration","scope":61,"src":"3012:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"owner","nameLocation":"3037:5:0","nodeType":"VariableDeclaration","scope":61,"src":"3029:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:0"},"src":"2969:75:0"},{"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"3050:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":66,"name":"ERC721InvalidSender","nameLocation":"3213:19:0","nodeType":"ErrorDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"sender","nameLocation":"3241:6:0","nodeType":"VariableDeclaration","scope":66,"src":"3233:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:0"},"src":"3207:42:0"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"3255:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":71,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:0","nodeType":"ErrorDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3447:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:0"},"src":"3419:46:0"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3471:247:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":78,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:0","nodeType":"ErrorDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"operator","nameLocation":"3764:8:0","nodeType":"VariableDeclaration","scope":78,"src":"3756:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:0","nodeType":"VariableDeclaration","scope":78,"src":"3774:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:0"},"src":"3723:68:0"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"3797:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":83,"name":"ERC721InvalidApprover","nameLocation":"3982:21:0","nodeType":"ErrorDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"approver","nameLocation":"4012:8:0","nodeType":"VariableDeclaration","scope":83,"src":"4004:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:0"},"src":"3976:46:0"},{"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"4028:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":88,"name":"ERC721InvalidOperator","nameLocation":"4236:21:0","nodeType":"ErrorDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"operator","nameLocation":"4266:8:0","nodeType":"VariableDeclaration","scope":88,"src":"4258:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:0"},"src":"4230:46:0"}],"scope":137,"src":"2186:2092:0","usedErrors":[47,52,61,66,71,78,83,88],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"4280:143:0","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":136,"linearizedBaseContracts":[136],"name":"IERC1155Errors","nameLocation":"4434:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"4455:361:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":101,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:0","nodeType":"ErrorDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"sender","nameLocation":"4862:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4854:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"balance","nameLocation":"4878:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4870:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"needed","nameLocation":"4895:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4887:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4903:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:0"},"src":"4821:99:0"},{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"4926:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":106,"name":"ERC1155InvalidSender","nameLocation":"5089:20:0","nodeType":"ErrorDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"sender","nameLocation":"5118:6:0","nodeType":"VariableDeclaration","scope":106,"src":"5110:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:0"},"src":"5083:43:0"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"5132:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":111,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:0","nodeType":"ErrorDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:0","nodeType":"VariableDeclaration","scope":111,"src":"5325:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:0"},"src":"5296:47:0"},{"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"5349:256:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":118,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:0","nodeType":"ErrorDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"operator","nameLocation":"5653:8:0","nodeType":"VariableDeclaration","scope":118,"src":"5645:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"owner","nameLocation":"5671:5:0","nodeType":"VariableDeclaration","scope":118,"src":"5663:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:0"},"src":"5610:68:0"},{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"5684:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":123,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:0","nodeType":"ErrorDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"approver","nameLocation":"5900:8:0","nodeType":"VariableDeclaration","scope":123,"src":"5892:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:0"},"src":"5863:47:0"},{"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"5916:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":128,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:0","nodeType":"ErrorDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"operator","nameLocation":"6155:8:0","nodeType":"VariableDeclaration","scope":128,"src":"6147:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:0"},"src":"6118:47:0"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"6171:280:0","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":135,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:0","nodeType":"ErrorDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:0","nodeType":"VariableDeclaration","scope":135,"src":"6488:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:0","nodeType":"VariableDeclaration","scope":135,"src":"6507:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:0"},"src":"6456:73:0"}],"scope":137,"src":"4424:2107:0","usedErrors":[101,106,111,118,123,128,135],"usedEvents":[]}],"src":"112:6420:0"},"id":0},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[1552],"Context":[1582],"ERC1155":[1188],"ERC165":[1716],"IERC1155":[1311],"IERC1155Errors":[136],"IERC1155MetadataURI":[1369],"IERC1155Receiver":[1353],"IERC165":[1728]},"id":1189,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1189,"sourceUnit":1312,"src":"135:40:1","symbolAliases":[{"foreign":{"id":139,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"143:8:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"./IERC1155Receiver.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1189,"sourceUnit":1354,"src":"176:56:1","symbolAliases":[{"foreign":{"id":141,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"184:16:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1189,"sourceUnit":1370,"src":"233:73:1","symbolAliases":[{"foreign":{"id":143,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"241:19:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1189,"sourceUnit":1583,"src":"307:48:1","symbolAliases":[{"foreign":{"id":145,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"315:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":149,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1189,"sourceUnit":1717,"src":"356:69:1","symbolAliases":[{"foreign":{"id":147,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"364:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":148,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"373:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1189,"sourceUnit":1553,"src":"426:46:1","symbolAliases":[{"foreign":{"id":150,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"434:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1189,"sourceUnit":137,"src":"473:67:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"481:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":155,"name":"Context","nameLocations":["756:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1582,"src":"756:7:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"756:7:1"},{"baseName":{"id":157,"name":"ERC165","nameLocations":["765:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"765:6:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"765:6:1"},{"baseName":{"id":159,"name":"IERC1155","nameLocations":["773:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":1311,"src":"773:8:1"},"id":160,"nodeType":"InheritanceSpecifier","src":"773:8:1"},{"baseName":{"id":161,"name":"IERC1155MetadataURI","nameLocations":["783:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":1369,"src":"783:19:1"},"id":162,"nodeType":"InheritanceSpecifier","src":"783:19:1"},{"baseName":{"id":163,"name":"IERC1155Errors","nameLocations":["804:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":136,"src":"804:14:1"},"id":164,"nodeType":"InheritanceSpecifier","src":"804:14:1"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"542:184:1","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1188,"linearizedBaseContracts":[1188,136,1369,1311,1716,1728,1582],"name":"ERC1155","nameLocation":"745:7:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":168,"libraryName":{"id":165,"name":"Arrays","nameLocations":["831:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":1552,"src":"831:6:1"},"nodeType":"UsingForDirective","src":"825:27:1","typeName":{"baseType":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"842:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":167,"nodeType":"ArrayTypeName","src":"842:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":172,"libraryName":{"id":169,"name":"Arrays","nameLocations":["863:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":1552,"src":"863:6:1"},"nodeType":"UsingForDirective","src":"857:27:1","typeName":{"baseType":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"874:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":171,"nodeType":"ArrayTypeName","src":"874:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"documentation":{"id":173,"nodeType":"StructuredDocumentation","src":"894:153:1","text":" @dev mint和transfer的区别：\n mint是 _balances[to]+=value\n transfer是 _balances[to]+=value , _balances[from]-=value "},"id":179,"mutability":"mutable","name":"_balances","nameLocation":"1119:9:1","nodeType":"VariableDeclaration","scope":1188,"src":"1052:76:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":178,"keyName":"id","keyNameLocation":"1068:2:1","keyType":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1052:58:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":177,"keyName":"account","keyNameLocation":"1090:7:1","keyType":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1074:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":176,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":185,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1205:18:1","nodeType":"VariableDeclaration","scope":1188,"src":"1135:88:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":184,"keyName":"account","keyNameLocation":"1151:7:1","keyType":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1135:61:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":183,"keyName":"operator","keyNameLocation":"1178:8:1","keyType":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"1170:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1162:33:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":182,"name":"bool","nodeType":"ElementaryTypeName","src":"1190:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":187,"mutability":"mutable","name":"_uri","nameLocation":"1359:4:1","nodeType":"VariableDeclaration","scope":1188,"src":"1344:19:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":186,"name":"string","nodeType":"ElementaryTypeName","src":"1344:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":197,"nodeType":"Block","src":"1445:30:1","statements":[{"expression":{"arguments":[{"id":194,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"1463:4:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":193,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"1455:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":196,"nodeType":"ExpressionStatement","src":"1455:13:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"1370:38:1","text":" @dev See {_setURI}."},"id":198,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"uri_","nameLocation":"1439:4:1","nodeType":"VariableDeclaration","scope":198,"src":"1425:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":189,"name":"string","nodeType":"ElementaryTypeName","src":"1425:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1424:20:1"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"1445:0:1"},"scope":1188,"src":"1413:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1715,1727],"body":{"id":228,"nodeType":"Block","src":"1650:197:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":209,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"1679:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":211,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"1699:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1311_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1311_$","typeString":"type(contract IERC1155)"}],"id":210,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1694:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1694:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1311","typeString":"type(contract IERC1155)"}},"id":213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1709:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1694:26:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1679:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":215,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"1736:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":217,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"1756:19:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1369_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1369_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":216,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1751:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1751:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1369","typeString":"type(contract IERC1155MetadataURI)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1777:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1751:37:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1736:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1679:109:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":224,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"1828:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":222,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1804:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1188_$","typeString":"type(contract super ERC1155)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1810:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1715,"src":"1804:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1804:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1679:161:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":208,"id":227,"nodeType":"Return","src":"1660:180:1"}]},"documentation":{"id":199,"nodeType":"StructuredDocumentation","src":"1481:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":229,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1551:17:1","nodeType":"FunctionDefinition","overrides":{"id":205,"nodeType":"OverrideSpecifier","overrides":[{"id":203,"name":"ERC165","nameLocations":["1618:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"1618:6:1"},{"id":204,"name":"IERC165","nameLocations":["1626:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1728,"src":"1626:7:1"}],"src":"1609:25:1"},"parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"interfaceId","nameLocation":"1576:11:1","nodeType":"VariableDeclaration","scope":229,"src":"1569:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":200,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1569:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1568:20:1"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":229,"src":"1644:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":206,"name":"bool","nodeType":"ElementaryTypeName","src":"1644:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1643:6:1"},"scope":1188,"src":"1542:305:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1368],"body":{"id":239,"nodeType":"Block","src":"2321:28:1","statements":[{"expression":{"id":237,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"2338:4:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":236,"id":238,"nodeType":"Return","src":"2331:11:1"}]},"documentation":{"id":230,"nodeType":"StructuredDocumentation","src":"1853:388:1","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":240,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2255:3:1","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":240,"src":"2259:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"2259:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2258:18:1"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":240,"src":"2306:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":234,"name":"string","nodeType":"ElementaryTypeName","src":"2306:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2305:15:1"},"scope":1188,"src":"2246:103:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1249],"body":{"id":256,"nodeType":"Block","src":"2495:46:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":250,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"2512:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":252,"indexExpression":{"id":251,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"2522:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2512:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":254,"indexExpression":{"id":253,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"2526:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2512:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":249,"id":255,"nodeType":"Return","src":"2505:29:1"}]},"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"2355:49:1","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":257,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2418:9:1","nodeType":"FunctionDefinition","parameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"account","nameLocation":"2436:7:1","nodeType":"VariableDeclaration","scope":257,"src":"2428:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"id","nameLocation":"2453:2:1","nodeType":"VariableDeclaration","scope":257,"src":"2445:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"2445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2427:29:1"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":257,"src":"2486:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2486:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2485:9:1"},"scope":1188,"src":"2409:132:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1262],"body":{"id":326,"nodeType":"Block","src":"2840:410:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":270,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2854:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2863:6:1","memberName":"length","nodeType":"MemberAccess","src":"2854:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":272,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2873:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2877:6:1","memberName":"length","nodeType":"MemberAccess","src":"2873:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2854:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":283,"nodeType":"IfStatement","src":"2850:121:1","trueBody":{"id":282,"nodeType":"Block","src":"2885:86:1","statements":[{"errorCall":{"arguments":[{"expression":{"id":276,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2932:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2936:6:1","memberName":"length","nodeType":"MemberAccess","src":"2932:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":278,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2944:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2953:6:1","memberName":"length","nodeType":"MemberAccess","src":"2944:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":275,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2906:25:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2906:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":281,"nodeType":"RevertStatement","src":"2899:61:1"}]}},{"assignments":[288],"declarations":[{"constant":false,"id":288,"mutability":"mutable","name":"batchBalances","nameLocation":"2998:13:1","nodeType":"VariableDeclaration","scope":326,"src":"2981:30:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":286,"name":"uint256","nodeType":"ElementaryTypeName","src":"2981:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":287,"nodeType":"ArrayTypeName","src":"2981:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":295,"initialValue":{"arguments":[{"expression":{"id":292,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"3028:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:1","memberName":"length","nodeType":"MemberAccess","src":"3028:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3014:13:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"3018:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":290,"nodeType":"ArrayTypeName","src":"3018:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3014:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2981:63:1"},{"body":{"id":322,"nodeType":"Block","src":"3101:112:1","statements":[{"expression":{"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":307,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"3115:13:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":309,"indexExpression":{"id":308,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"3129:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3115:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":313,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"3172:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":311,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"3144:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3153:18:1","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1551,"src":"3144:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3144:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":317,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"3199:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":315,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3176:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3180:18:1","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1538,"src":"3176:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3176:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":310,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3134:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3134:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3115:87:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":321,"nodeType":"ExpressionStatement","src":"3115:87:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":300,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"3075:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":301,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"3079:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3088:6:1","memberName":"length","nodeType":"MemberAccess","src":"3079:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3075:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":323,"initializationExpression":{"assignments":[297],"declarations":[{"constant":false,"id":297,"mutability":"mutable","name":"i","nameLocation":"3068:1:1","nodeType":"VariableDeclaration","scope":323,"src":"3060:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"3060:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":299,"initialValue":{"hexValue":"30","id":298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3072:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3060:13:1"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3096:3:1","subExpression":{"id":304,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"3098:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":306,"nodeType":"ExpressionStatement","src":"3096:3:1"},"nodeType":"ForStatement","src":"3055:158:1"},{"expression":{"id":324,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"3230:13:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":269,"id":325,"nodeType":"Return","src":"3223:20:1"}]},"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"2547:146:1","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":327,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2707:14:1","nodeType":"FunctionDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"accounts","nameLocation":"2748:8:1","nodeType":"VariableDeclaration","scope":327,"src":"2731:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"2731:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":260,"nodeType":"ArrayTypeName","src":"2731:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"ids","nameLocation":"2783:3:1","nodeType":"VariableDeclaration","scope":327,"src":"2766:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2766:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":263,"nodeType":"ArrayTypeName","src":"2766:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2721:71:1"},"returnParameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":327,"src":"2822:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"2822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":267,"nodeType":"ArrayTypeName","src":"2822:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2821:18:1"},"scope":1188,"src":"2698:552:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1270],"body":{"id":342,"nodeType":"Block","src":"3401:69:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":336,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"3430:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3430:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":338,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3444:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":339,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3454:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":335,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"3411:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":341,"nodeType":"ExpressionStatement","src":"3411:52:1"}]},"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"3256:65:1","text":" @dev See {IERC1155-setApprovalForAll}.\n "},"functionSelector":"a22cb465","id":343,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3335:17:1","nodeType":"FunctionDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"operator","nameLocation":"3361:8:1","nodeType":"VariableDeclaration","scope":343,"src":"3353:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"3353:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"approved","nameLocation":"3376:8:1","nodeType":"VariableDeclaration","scope":343,"src":"3371:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":331,"name":"bool","nodeType":"ElementaryTypeName","src":"3371:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3352:33:1"},"returnParameters":{"id":334,"nodeType":"ParameterList","parameters":[],"src":"3401:0:1"},"scope":1188,"src":"3326:144:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1280],"body":{"id":359,"nodeType":"Block","src":"3665:61:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":353,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3682:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":355,"indexExpression":{"id":354,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"3701:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3682:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":357,"indexExpression":{"id":356,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"3710:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3682:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":352,"id":358,"nodeType":"Return","src":"3675:44:1"}]},"documentation":{"id":344,"nodeType":"StructuredDocumentation","src":"3476:88:1","text":" @dev See {IERC1155-isApprovedForAll}.\n \n admin => manager"},"functionSelector":"e985e9c5","id":360,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3578:16:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"account","nameLocation":"3603:7:1","nodeType":"VariableDeclaration","scope":360,"src":"3595:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"3595:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":348,"mutability":"mutable","name":"operator","nameLocation":"3620:8:1","nodeType":"VariableDeclaration","scope":360,"src":"3612:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"3612:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3594:35:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":360,"src":"3659:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":350,"name":"bool","nodeType":"ElementaryTypeName","src":"3659:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3658:6:1"},"scope":1188,"src":"3569:157:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1294],"body":{"id":403,"nodeType":"Block","src":"3906:238:1","statements":[{"assignments":[375],"declarations":[{"constant":false,"id":375,"mutability":"mutable","name":"sender","nameLocation":"3924:6:1","nodeType":"VariableDeclaration","scope":403,"src":"3916:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3916:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":378,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":376,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"3933:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3933:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3916:29:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":379,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"3959:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":380,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3967:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3959:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3977:31:1","subExpression":{"arguments":[{"id":383,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"3995:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":384,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"4001:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":382,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"3978:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3978:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3959:49:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":394,"nodeType":"IfStatement","src":"3955:129:1","trueBody":{"id":393,"nodeType":"Block","src":"4010:74:1","statements":[{"errorCall":{"arguments":[{"id":389,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"4060:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":390,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"4068:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":388,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"4031:28:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4031:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"RevertStatement","src":"4024:49:1"}]}},{"expression":{"arguments":[{"id":396,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"4111:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":397,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"4117:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":398,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"4121:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"4125:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":400,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"4132:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":395,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"4093:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4093:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":402,"nodeType":"ExpressionStatement","src":"4093:44:1"}]},"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"3732:56:1","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":404,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3802:16:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"from","nameLocation":"3827:4:1","nodeType":"VariableDeclaration","scope":404,"src":"3819:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"3819:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"to","nameLocation":"3841:2:1","nodeType":"VariableDeclaration","scope":404,"src":"3833:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"3833:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"id","nameLocation":"3853:2:1","nodeType":"VariableDeclaration","scope":404,"src":"3845:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"3845:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":369,"mutability":"mutable","name":"value","nameLocation":"3865:5:1","nodeType":"VariableDeclaration","scope":404,"src":"3857:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":368,"name":"uint256","nodeType":"ElementaryTypeName","src":"3857:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"data","nameLocation":"3885:4:1","nodeType":"VariableDeclaration","scope":404,"src":"3872:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":370,"name":"bytes","nodeType":"ElementaryTypeName","src":"3872:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3818:72:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"3906:0:1"},"scope":1188,"src":"3793:351:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1310],"body":{"id":449,"nodeType":"Block","src":"4400:245:1","statements":[{"assignments":[421],"declarations":[{"constant":false,"id":421,"mutability":"mutable","name":"sender","nameLocation":"4418:6:1","nodeType":"VariableDeclaration","scope":449,"src":"4410:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"4410:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":424,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"4427:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4427:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4410:29:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"4453:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":426,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"4461:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4453:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4471:31:1","subExpression":{"arguments":[{"id":429,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"4489:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":430,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"4495:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":428,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"4472:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4472:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4453:49:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":440,"nodeType":"IfStatement","src":"4449:129:1","trueBody":{"id":439,"nodeType":"Block","src":"4504:74:1","statements":[{"errorCall":{"arguments":[{"id":435,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"4554:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":436,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"4562:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":434,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"4525:28:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4525:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":438,"nodeType":"RevertStatement","src":"4518:49:1"}]}},{"expression":{"arguments":[{"id":442,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"4610:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"4616:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"4620:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":445,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"4625:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":446,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"4633:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":441,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"4587:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4587:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":448,"nodeType":"ExpressionStatement","src":"4587:51:1"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"4150:61:1","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4225:21:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"from","nameLocation":"4264:4:1","nodeType":"VariableDeclaration","scope":450,"src":"4256:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"4256:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"to","nameLocation":"4286:2:1","nodeType":"VariableDeclaration","scope":450,"src":"4278:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"4278:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"ids","nameLocation":"4315:3:1","nodeType":"VariableDeclaration","scope":450,"src":"4298:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":410,"name":"uint256","nodeType":"ElementaryTypeName","src":"4298:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":411,"nodeType":"ArrayTypeName","src":"4298:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"values","nameLocation":"4345:6:1","nodeType":"VariableDeclaration","scope":450,"src":"4328:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"4328:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":414,"nodeType":"ArrayTypeName","src":"4328:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"data","nameLocation":"4374:4:1","nodeType":"VariableDeclaration","scope":450,"src":"4361:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":416,"name":"bytes","nodeType":"ElementaryTypeName","src":"4361:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4246:138:1"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[],"src":"4400:0:1"},"scope":1188,"src":"4216:429:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":602,"nodeType":"Block","src":"5453:1174:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":464,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5467:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5471:6:1","memberName":"length","nodeType":"MemberAccess","src":"5467:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":466,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"5481:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5488:6:1","memberName":"length","nodeType":"MemberAccess","src":"5481:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5467:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":477,"nodeType":"IfStatement","src":"5463:117:1","trueBody":{"id":476,"nodeType":"Block","src":"5496:84:1","statements":[{"errorCall":{"arguments":[{"expression":{"id":470,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5543:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5547:6:1","memberName":"length","nodeType":"MemberAccess","src":"5543:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":472,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"5555:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5562:6:1","memberName":"length","nodeType":"MemberAccess","src":"5555:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":469,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"5517:25:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"RevertStatement","src":"5510:59:1"}]}},{"assignments":[479],"declarations":[{"constant":false,"id":479,"mutability":"mutable","name":"operator","nameLocation":"5598:8:1","nodeType":"VariableDeclaration","scope":602,"src":"5590:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"5590:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":482,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":480,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"5609:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5609:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5590:31:1"},{"body":{"id":563,"nodeType":"Block","src":"5673:650:1","statements":[{"assignments":[495],"declarations":[{"constant":false,"id":495,"mutability":"mutable","name":"id","nameLocation":"5695:2:1","nodeType":"VariableDeclaration","scope":563,"src":"5687:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":494,"name":"uint256","nodeType":"ElementaryTypeName","src":"5687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":500,"initialValue":{"arguments":[{"id":498,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"5723:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":496,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5700:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5704:18:1","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1538,"src":"5700:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5687:38:1"},{"assignments":[502],"declarations":[{"constant":false,"id":502,"mutability":"mutable","name":"value","nameLocation":"5747:5:1","nodeType":"VariableDeclaration","scope":563,"src":"5739:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"5739:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":507,"initialValue":{"arguments":[{"id":505,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"5781:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":503,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"5755:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5762:18:1","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1538,"src":"5755:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5755:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5739:44:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":508,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"5802:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5818:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"5810:7:1","typeDescriptions":{}}},"id":512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5810:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5802:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"5798:420:1","trueBody":{"id":545,"nodeType":"Block","src":"5822:396:1","statements":[{"assignments":[515],"declarations":[{"constant":false,"id":515,"mutability":"mutable","name":"fromBalance","nameLocation":"5848:11:1","nodeType":"VariableDeclaration","scope":545,"src":"5840:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":514,"name":"uint256","nodeType":"ElementaryTypeName","src":"5840:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":521,"initialValue":{"baseExpression":{"baseExpression":{"id":516,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"5862:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":518,"indexExpression":{"id":517,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"5872:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5862:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":520,"indexExpression":{"id":519,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"5876:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5862:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5840:41:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":522,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"5903:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"5917:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5903:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":533,"nodeType":"IfStatement","src":"5899:129:1","trueBody":{"id":532,"nodeType":"Block","src":"5924:104:1","statements":[{"errorCall":{"arguments":[{"id":526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"5980:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":527,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"5986:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"5999:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":529,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"6006:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":525,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"5953:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5953:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":531,"nodeType":"RevertStatement","src":"5946:63:1"}]}},{"id":544,"nodeType":"UncheckedBlock","src":"6045:159:1","statements":[{"expression":{"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":534,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"6144:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":537,"indexExpression":{"id":535,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"6154:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6144:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":538,"indexExpression":{"id":536,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"6158:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6144:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"6166:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"6180:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6166:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6144:41:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":543,"nodeType":"ExpressionStatement","src":"6144:41:1"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":547,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"6236:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6250:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6242:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"6242:7:1","typeDescriptions":{}}},"id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6242:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6236:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":562,"nodeType":"IfStatement","src":"6232:81:1","trueBody":{"id":561,"nodeType":"Block","src":"6254:59:1","statements":[{"expression":{"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":553,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"6272:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":556,"indexExpression":{"id":554,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"6282:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6272:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":557,"indexExpression":{"id":555,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"6286:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6272:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"6293:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6272:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":560,"nodeType":"ExpressionStatement","src":"6272:26:1"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"5652:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":488,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5656:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5660:6:1","memberName":"length","nodeType":"MemberAccess","src":"5656:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5652:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":564,"initializationExpression":{"assignments":[484],"declarations":[{"constant":false,"id":484,"mutability":"mutable","name":"i","nameLocation":"5645:1:1","nodeType":"VariableDeclaration","scope":564,"src":"5637:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"5637:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":486,"initialValue":{"hexValue":"30","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5649:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5637:13:1"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5668:3:1","subExpression":{"id":491,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"5670:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":493,"nodeType":"ExpressionStatement","src":"5668:3:1"},"nodeType":"ForStatement","src":"5632:691:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":565,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"6337:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6341:6:1","memberName":"length","nodeType":"MemberAccess","src":"6337:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6351:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6337:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":600,"nodeType":"Block","src":"6545:76:1","statements":[{"eventCall":{"arguments":[{"id":593,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6578:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":594,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"6588:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"6594:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":596,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"6598:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":597,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6603:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":592,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"6564:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6564:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":599,"nodeType":"EmitStatement","src":"6559:51:1"}]},"id":601,"nodeType":"IfStatement","src":"6333:288:1","trueBody":{"id":591,"nodeType":"Block","src":"6354:185:1","statements":[{"assignments":[570],"declarations":[{"constant":false,"id":570,"mutability":"mutable","name":"id","nameLocation":"6376:2:1","nodeType":"VariableDeclaration","scope":591,"src":"6368:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"6368:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":575,"initialValue":{"arguments":[{"hexValue":"30","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6404:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":571,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"6381:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6385:18:1","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1538,"src":"6381:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6381:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6368:38:1"},{"assignments":[577],"declarations":[{"constant":false,"id":577,"mutability":"mutable","name":"value","nameLocation":"6428:5:1","nodeType":"VariableDeclaration","scope":591,"src":"6420:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"6420:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":582,"initialValue":{"arguments":[{"hexValue":"30","id":580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6462:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":578,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6436:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6443:18:1","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1538,"src":"6436:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6436:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6420:44:1"},{"eventCall":{"arguments":[{"id":584,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6498:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":585,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"6508:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"6514:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":587,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"6518:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"6522:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":583,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"6483:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6483:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"EmitStatement","src":"6478:50:1"}]}}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"4651:690:1","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":603,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5355:7:1","nodeType":"FunctionDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"from","nameLocation":"5371:4:1","nodeType":"VariableDeclaration","scope":603,"src":"5363:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"5363:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"to","nameLocation":"5385:2:1","nodeType":"VariableDeclaration","scope":603,"src":"5377:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"5377:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"ids","nameLocation":"5406:3:1","nodeType":"VariableDeclaration","scope":603,"src":"5389:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"5389:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":457,"nodeType":"ArrayTypeName","src":"5389:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":461,"mutability":"mutable","name":"values","nameLocation":"5428:6:1","nodeType":"VariableDeclaration","scope":603,"src":"5411:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":459,"name":"uint256","nodeType":"ElementaryTypeName","src":"5411:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":460,"nodeType":"ArrayTypeName","src":"5411:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5362:73:1"},"returnParameters":{"id":463,"nodeType":"ParameterList","parameters":[],"src":"5453:0:1"},"scope":1188,"src":"5346:1281:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":678,"nodeType":"Block","src":"7397:575:1","statements":[{"expression":{"arguments":[{"id":620,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7448:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":621,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7454:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":622,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"7458:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":623,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"7463:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":619,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7440:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7440:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":625,"nodeType":"ExpressionStatement","src":"7440:30:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7527:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7541:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7533:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"7533:7:1","typeDescriptions":{}}},"id":630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7527:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":677,"nodeType":"IfStatement","src":"7523:443:1","trueBody":{"id":676,"nodeType":"Block","src":"7545:421:1","statements":[{"assignments":[633],"declarations":[{"constant":false,"id":633,"mutability":"mutable","name":"operator","nameLocation":"7567:8:1","nodeType":"VariableDeclaration","scope":676,"src":"7559:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"7559:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":636,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":634,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"7578:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7559:31:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":637,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"7608:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7612:6:1","memberName":"length","nodeType":"MemberAccess","src":"7608:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7622:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7608:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":674,"nodeType":"Block","src":"7849:107:1","statements":[{"expression":{"arguments":[{"id":666,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"7903:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":667,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7913:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7919:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":669,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"7923:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":670,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"7928:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":671,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"7936:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":665,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"7867:35:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7867:74:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":673,"nodeType":"ExpressionStatement","src":"7867:74:1"}]},"id":675,"nodeType":"IfStatement","src":"7604:352:1","trueBody":{"id":664,"nodeType":"Block","src":"7625:218:1","statements":[{"assignments":[642],"declarations":[{"constant":false,"id":642,"mutability":"mutable","name":"id","nameLocation":"7651:2:1","nodeType":"VariableDeclaration","scope":664,"src":"7643:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"7643:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":647,"initialValue":{"arguments":[{"hexValue":"30","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7679:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":643,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"7656:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7660:18:1","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1538,"src":"7656:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7656:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7643:38:1"},{"assignments":[649],"declarations":[{"constant":false,"id":649,"mutability":"mutable","name":"value","nameLocation":"7707:5:1","nodeType":"VariableDeclaration","scope":664,"src":"7699:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"7699:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":654,"initialValue":{"arguments":[{"hexValue":"30","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":650,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"7715:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7722:18:1","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1538,"src":"7715:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7715:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7699:44:1"},{"expression":{"arguments":[{"id":656,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"7792:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":657,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7802:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":658,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7808:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"7812:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"7816:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":661,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"7823:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":655,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"7761:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7761:67:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"7761:67:1"}]}}]}}]},"documentation":{"id":604,"nodeType":"StructuredDocumentation","src":"6633:568:1","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":679,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"7215:26:1","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"from","nameLocation":"7259:4:1","nodeType":"VariableDeclaration","scope":679,"src":"7251:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"7251:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"to","nameLocation":"7281:2:1","nodeType":"VariableDeclaration","scope":679,"src":"7273:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"7273:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"ids","nameLocation":"7310:3:1","nodeType":"VariableDeclaration","scope":679,"src":"7293:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"7293:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":610,"nodeType":"ArrayTypeName","src":"7293:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":614,"mutability":"mutable","name":"values","nameLocation":"7340:6:1","nodeType":"VariableDeclaration","scope":679,"src":"7323:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"7323:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":613,"nodeType":"ArrayTypeName","src":"7323:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"data","nameLocation":"7369:4:1","nodeType":"VariableDeclaration","scope":679,"src":"7356:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":615,"name":"bytes","nodeType":"ElementaryTypeName","src":"7356:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7241:138:1"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[],"src":"7397:0:1"},"scope":1188,"src":"7206:766:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":744,"nodeType":"Block","src":"8537:406:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":693,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"8551:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8565:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8557:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"8557:7:1","typeDescriptions":{}}},"id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8557:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8551:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":707,"nodeType":"IfStatement","src":"8547:88:1","trueBody":{"id":706,"nodeType":"Block","src":"8569:66:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8621:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8613:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"8613:7:1","typeDescriptions":{}}},"id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8613:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":699,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"8590:22:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8590:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":705,"nodeType":"RevertStatement","src":"8583:41:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":708,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8648:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8664:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8656:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"8656:7:1","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8656:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8648:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":722,"nodeType":"IfStatement","src":"8644:88:1","trueBody":{"id":721,"nodeType":"Block","src":"8668:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8718:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8710:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"8710:7:1","typeDescriptions":{}}},"id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8710:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":714,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"8689:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8689:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":720,"nodeType":"RevertStatement","src":"8682:39:1"}]}},{"assignments":[727,730],"declarations":[{"constant":false,"id":727,"mutability":"mutable","name":"ids","nameLocation":"8759:3:1","nodeType":"VariableDeclaration","scope":744,"src":"8742:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"8742:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":726,"nodeType":"ArrayTypeName","src":"8742:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"values","nameLocation":"8781:6:1","nodeType":"VariableDeclaration","scope":744,"src":"8764:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"8764:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":729,"nodeType":"ArrayTypeName","src":"8764:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":735,"initialValue":{"arguments":[{"id":732,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"8810:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"8814:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":731,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"8791:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8791:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8741:79:1"},{"expression":{"arguments":[{"id":737,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8908:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":738,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"8914:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":739,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"8918:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":740,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"8923:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":741,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"8931:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":736,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"8881:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8881:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"ExpressionStatement","src":"8881:55:1"}]},"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"7978:446:1","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":745,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"8438:17:1","nodeType":"FunctionDefinition","parameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"from","nameLocation":"8464:4:1","nodeType":"VariableDeclaration","scope":745,"src":"8456:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"8456:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"to","nameLocation":"8478:2:1","nodeType":"VariableDeclaration","scope":745,"src":"8470:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"8470:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":686,"mutability":"mutable","name":"id","nameLocation":"8490:2:1","nodeType":"VariableDeclaration","scope":745,"src":"8482:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":685,"name":"uint256","nodeType":"ElementaryTypeName","src":"8482:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":688,"mutability":"mutable","name":"value","nameLocation":"8502:5:1","nodeType":"VariableDeclaration","scope":745,"src":"8494:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":687,"name":"uint256","nodeType":"ElementaryTypeName","src":"8494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":690,"mutability":"mutable","name":"data","nameLocation":"8522:4:1","nodeType":"VariableDeclaration","scope":745,"src":"8509:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":689,"name":"bytes","nodeType":"ElementaryTypeName","src":"8509:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8455:72:1"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[],"src":"8537:0:1"},"scope":1188,"src":"8429:514:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":799,"nodeType":"Block","src":"9523:266:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":761,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"9537:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9551:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9543:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"9543:7:1","typeDescriptions":{}}},"id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9543:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9537:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":775,"nodeType":"IfStatement","src":"9533:88:1","trueBody":{"id":774,"nodeType":"Block","src":"9555:66:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9607:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9599:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"9599:7:1","typeDescriptions":{}}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9599:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":767,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"9576:22:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9576:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"RevertStatement","src":"9569:41:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":776,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"9634:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9650:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9642:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"9642:7:1","typeDescriptions":{}}},"id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9642:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9634:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":790,"nodeType":"IfStatement","src":"9630:88:1","trueBody":{"id":789,"nodeType":"Block","src":"9654:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9704:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9696:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"9696:7:1","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9696:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":782,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"9675:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9675:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":788,"nodeType":"RevertStatement","src":"9668:39:1"}]}},{"expression":{"arguments":[{"id":792,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"9754:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":793,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"9760:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":794,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"9764:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":795,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"9769:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":796,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"9777:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":791,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"9727:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9727:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":798,"nodeType":"ExpressionStatement","src":"9727:55:1"}]},"documentation":{"id":746,"nodeType":"StructuredDocumentation","src":"8949:390:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":800,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"9353:22:1","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"mutability":"mutable","name":"from","nameLocation":"9393:4:1","nodeType":"VariableDeclaration","scope":800,"src":"9385:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"9385:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":750,"mutability":"mutable","name":"to","nameLocation":"9415:2:1","nodeType":"VariableDeclaration","scope":800,"src":"9407:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"9407:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"ids","nameLocation":"9444:3:1","nodeType":"VariableDeclaration","scope":800,"src":"9427:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"9427:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":752,"nodeType":"ArrayTypeName","src":"9427:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":756,"mutability":"mutable","name":"values","nameLocation":"9474:6:1","nodeType":"VariableDeclaration","scope":800,"src":"9457:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"9457:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":755,"nodeType":"ArrayTypeName","src":"9457:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"data","nameLocation":"9503:4:1","nodeType":"VariableDeclaration","scope":800,"src":"9490:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":757,"name":"bytes","nodeType":"ElementaryTypeName","src":"9490:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9375:138:1"},"returnParameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"9523:0:1"},"scope":1188,"src":"9344:445:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":810,"nodeType":"Block","src":"10667:30:1","statements":[{"expression":{"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":806,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"10677:4:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":807,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10684:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10677:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":809,"nodeType":"ExpressionStatement","src":"10677:13:1"}]},"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"9795:811:1","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":811,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10620:7:1","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"newuri","nameLocation":"10642:6:1","nodeType":"VariableDeclaration","scope":811,"src":"10628:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":802,"name":"string","nodeType":"ElementaryTypeName","src":"10628:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10627:22:1"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[],"src":"10667:0:1"},"scope":1188,"src":"10611:86:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":862,"nodeType":"Block","src":"11157:264:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":823,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"11171:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11185:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11177:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"11177:7:1","typeDescriptions":{}}},"id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11177:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11171:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":837,"nodeType":"IfStatement","src":"11167:88:1","trueBody":{"id":836,"nodeType":"Block","src":"11189:66:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11241:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11233:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"11233:7:1","typeDescriptions":{}}},"id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11233:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":829,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"11210:22:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11210:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":835,"nodeType":"RevertStatement","src":"11203:41:1"}]}},{"assignments":[842,845],"declarations":[{"constant":false,"id":842,"mutability":"mutable","name":"ids","nameLocation":"11282:3:1","nodeType":"VariableDeclaration","scope":862,"src":"11265:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"11265:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":841,"nodeType":"ArrayTypeName","src":"11265:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"values","nameLocation":"11304:6:1","nodeType":"VariableDeclaration","scope":862,"src":"11287:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":843,"name":"uint256","nodeType":"ElementaryTypeName","src":"11287:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":844,"nodeType":"ArrayTypeName","src":"11287:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":850,"initialValue":{"arguments":[{"id":847,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"11333:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"11337:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":846,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"11314:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11314:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"11264:79:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11388:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11380:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"11380:7:1","typeDescriptions":{}}},"id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11380:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":856,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"11392:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":857,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"11396:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":858,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"11401:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":859,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"11409:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":851,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"11353:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11353:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"ExpressionStatement","src":"11353:61:1"}]},"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"10703:367:1","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":863,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"11084:5:1","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"to","nameLocation":"11098:2:1","nodeType":"VariableDeclaration","scope":863,"src":"11090:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"11090:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"mutability":"mutable","name":"id","nameLocation":"11110:2:1","nodeType":"VariableDeclaration","scope":863,"src":"11102:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"11102:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"value","nameLocation":"11122:5:1","nodeType":"VariableDeclaration","scope":863,"src":"11114:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"11114:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"data","nameLocation":"11142:4:1","nodeType":"VariableDeclaration","scope":863,"src":"11129:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":819,"name":"bytes","nodeType":"ElementaryTypeName","src":"11129:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11089:58:1"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"11157:0:1"},"scope":1188,"src":"11075:346:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":903,"nodeType":"Block","src":"11959:175:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":877,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"11973:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11979:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"11979:7:1","typeDescriptions":{}}},"id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11979:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11973:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":891,"nodeType":"IfStatement","src":"11969:88:1","trueBody":{"id":890,"nodeType":"Block","src":"11991:66:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12043:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12035:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"12035:7:1","typeDescriptions":{}}},"id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12035:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":883,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"12012:22:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12012:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":889,"nodeType":"RevertStatement","src":"12005:41:1"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"12093:7:1","typeDescriptions":{}}},"id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":897,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"12105:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":898,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"12109:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":899,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"12114:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":900,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"12122:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":892,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"12066:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12066:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"ExpressionStatement","src":"12066:61:1"}]},"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"11427:420:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":904,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11861:10:1","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"to","nameLocation":"11880:2:1","nodeType":"VariableDeclaration","scope":904,"src":"11872:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"11872:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"ids","nameLocation":"11901:3:1","nodeType":"VariableDeclaration","scope":904,"src":"11884:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"11884:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":868,"nodeType":"ArrayTypeName","src":"11884:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"values","nameLocation":"11923:6:1","nodeType":"VariableDeclaration","scope":904,"src":"11906:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":871,"nodeType":"ArrayTypeName","src":"11906:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"data","nameLocation":"11944:4:1","nodeType":"VariableDeclaration","scope":904,"src":"11931:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":873,"name":"bytes","nodeType":"ElementaryTypeName","src":"11931:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11871:78:1"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"11959:0:1"},"scope":1188,"src":"11852:282:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":953,"nodeType":"Block","src":"12493:264:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":914,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"12507:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12523:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12515:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"12515:7:1","typeDescriptions":{}}},"id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12515:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12507:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":928,"nodeType":"IfStatement","src":"12503:88:1","trueBody":{"id":927,"nodeType":"Block","src":"12527:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12577:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12569:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"12569:7:1","typeDescriptions":{}}},"id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12569:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":920,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"12548:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12548:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"RevertStatement","src":"12541:39:1"}]}},{"assignments":[933,936],"declarations":[{"constant":false,"id":933,"mutability":"mutable","name":"ids","nameLocation":"12618:3:1","nodeType":"VariableDeclaration","scope":953,"src":"12601:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":931,"name":"uint256","nodeType":"ElementaryTypeName","src":"12601:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":932,"nodeType":"ArrayTypeName","src":"12601:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":936,"mutability":"mutable","name":"values","nameLocation":"12640:6:1","nodeType":"VariableDeclaration","scope":953,"src":"12623:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":934,"name":"uint256","nodeType":"ElementaryTypeName","src":"12623:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":935,"nodeType":"ArrayTypeName","src":"12623:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":941,"initialValue":{"arguments":[{"id":938,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"12669:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"12673:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":937,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"12650:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12650:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12600:79:1"},{"expression":{"arguments":[{"id":943,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"12716:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12722:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"12722:7:1","typeDescriptions":{}}},"id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12722:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":948,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"12734:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":949,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"12739:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12747:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":942,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"12689:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12689:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"ExpressionStatement","src":"12689:61:1"}]},"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"12140:283:1","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":954,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12437:5:1","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"from","nameLocation":"12451:4:1","nodeType":"VariableDeclaration","scope":954,"src":"12443:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"12443:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"id","nameLocation":"12465:2:1","nodeType":"VariableDeclaration","scope":954,"src":"12457:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"12457:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":911,"mutability":"mutable","name":"value","nameLocation":"12477:5:1","nodeType":"VariableDeclaration","scope":954,"src":"12469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"12469:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12442:41:1"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[],"src":"12493:0:1"},"scope":1188,"src":"12428:329:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":992,"nodeType":"Block","src":"13203:175:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":966,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"13217:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13233:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13225:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"13225:7:1","typeDescriptions":{}}},"id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13225:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13217:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":980,"nodeType":"IfStatement","src":"13213:88:1","trueBody":{"id":979,"nodeType":"Block","src":"13237:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13287:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13279:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"13279:7:1","typeDescriptions":{}}},"id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13279:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":972,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"13258:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13258:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"RevertStatement","src":"13251:39:1"}]}},{"expression":{"arguments":[{"id":982,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"13337:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13351:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13343:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"13343:7:1","typeDescriptions":{}}},"id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13343:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"13355:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":988,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"13360:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13368:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":981,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"13310:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13310:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":991,"nodeType":"ExpressionStatement","src":"13310:61:1"}]},"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"12763:345:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":993,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"13122:10:1","nodeType":"FunctionDefinition","parameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"from","nameLocation":"13141:4:1","nodeType":"VariableDeclaration","scope":993,"src":"13133:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"13133:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"ids","nameLocation":"13164:3:1","nodeType":"VariableDeclaration","scope":993,"src":"13147:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"13147:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":959,"nodeType":"ArrayTypeName","src":"13147:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"values","nameLocation":"13186:6:1","nodeType":"VariableDeclaration","scope":993,"src":"13169:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"13169:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":962,"nodeType":"ArrayTypeName","src":"13169:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13132:61:1"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[],"src":"13203:0:1"},"scope":1188,"src":"13113:265:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1032,"nodeType":"Block","src":"13690:222:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1003,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"13704:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13724:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13716:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"13716:7:1","typeDescriptions":{}}},"id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13716:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13704:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1017,"nodeType":"IfStatement","src":"13700:94:1","trueBody":{"id":1016,"nodeType":"Block","src":"13728:66:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13780:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13772:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"13772:7:1","typeDescriptions":{}}},"id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13772:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1009,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"13749:22:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13749:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1015,"nodeType":"RevertStatement","src":"13742:41:1"}]}},{"expression":{"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1018,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"13803:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1021,"indexExpression":{"id":1019,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"13822:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13803:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1022,"indexExpression":{"id":1020,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"13829:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13803:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1023,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"13841:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13803:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1025,"nodeType":"ExpressionStatement","src":"13803:46:1"},{"eventCall":{"arguments":[{"id":1027,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"13879:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1028,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"13886:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1029,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"13896:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1026,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"13864:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13864:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1031,"nodeType":"EmitStatement","src":"13859:46:1"}]},"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"13384:208:1","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1033,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13606:18:1","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"owner","nameLocation":"13633:5:1","nodeType":"VariableDeclaration","scope":1033,"src":"13625:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"13625:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"operator","nameLocation":"13648:8:1","nodeType":"VariableDeclaration","scope":1033,"src":"13640:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"13640:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"approved","nameLocation":"13663:8:1","nodeType":"VariableDeclaration","scope":1033,"src":"13658:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":999,"name":"bool","nodeType":"ElementaryTypeName","src":"13658:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13624:48:1"},"returnParameters":{"id":1002,"nodeType":"ParameterList","parameters":[],"src":"13690:0:1"},"scope":1188,"src":"13597:315:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1100,"nodeType":"Block","src":"14282:782:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1049,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"14296:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14299:4:1","memberName":"code","nodeType":"MemberAccess","src":"14296:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14304:6:1","memberName":"length","nodeType":"MemberAccess","src":"14296:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14313:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14296:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1099,"nodeType":"IfStatement","src":"14292:766:1","trueBody":{"id":1098,"nodeType":"Block","src":"14316:742:1","statements":[{"clauses":[{"block":{"id":1078,"nodeType":"Block","src":"14432:206:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1067,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"14454:8:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1068,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"14466:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1353_$","typeString":"type(contract IERC1155Receiver)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14483:17:1","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1334,"src":"14466:34:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14501:8:1","memberName":"selector","nodeType":"MemberAccess","src":"14466:43:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14454:55:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1077,"nodeType":"IfStatement","src":"14450:174:1","trueBody":{"id":1076,"nodeType":"Block","src":"14511:113:1","statements":[{"errorCall":{"arguments":[{"id":1073,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"14602:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1072,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"14579:22:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1075,"nodeType":"RevertStatement","src":"14572:33:1"}]}}]},"errorName":"","id":1079,"nodeType":"TryCatchClause","parameters":{"id":1066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"response","nameLocation":"14422:8:1","nodeType":"VariableDeclaration","scope":1079,"src":"14415:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1064,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14415:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14414:17:1"},"src":"14406:232:1"},{"block":{"id":1095,"nodeType":"Block","src":"14667:381:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1083,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"14689:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14696:6:1","memberName":"length","nodeType":"MemberAccess","src":"14689:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14706:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14689:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1093,"nodeType":"Block","src":"14844:190:1","statements":[{"AST":{"nativeSrc":"14930:86:1","nodeType":"YulBlock","src":"14930:86:1","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14967:2:1","nodeType":"YulLiteral","src":"14967:2:1","type":"","value":"32"},{"name":"reason","nativeSrc":"14971:6:1","nodeType":"YulIdentifier","src":"14971:6:1"}],"functionName":{"name":"add","nativeSrc":"14963:3:1","nodeType":"YulIdentifier","src":"14963:3:1"},"nativeSrc":"14963:15:1","nodeType":"YulFunctionCall","src":"14963:15:1"},{"arguments":[{"name":"reason","nativeSrc":"14986:6:1","nodeType":"YulIdentifier","src":"14986:6:1"}],"functionName":{"name":"mload","nativeSrc":"14980:5:1","nodeType":"YulIdentifier","src":"14980:5:1"},"nativeSrc":"14980:13:1","nodeType":"YulFunctionCall","src":"14980:13:1"}],"functionName":{"name":"revert","nativeSrc":"14956:6:1","nodeType":"YulIdentifier","src":"14956:6:1"},"nativeSrc":"14956:38:1","nodeType":"YulFunctionCall","src":"14956:38:1"},"nativeSrc":"14956:38:1","nodeType":"YulExpressionStatement","src":"14956:38:1"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1081,"isOffset":false,"isSlot":false,"src":"14971:6:1","valueSize":1},{"declaration":1081,"isOffset":false,"isSlot":false,"src":"14986:6:1","valueSize":1}],"id":1092,"nodeType":"InlineAssembly","src":"14921:95:1"}]},"id":1094,"nodeType":"IfStatement","src":"14685:349:1","trueBody":{"id":1091,"nodeType":"Block","src":"14709:129:1","statements":[{"errorCall":{"arguments":[{"id":1088,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"14816:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1087,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"14793:22:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14793:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1090,"nodeType":"RevertStatement","src":"14786:33:1"}]}}]},"errorName":"","id":1096,"nodeType":"TryCatchClause","parameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"reason","nameLocation":"14659:6:1","nodeType":"VariableDeclaration","scope":1096,"src":"14646:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1080,"name":"bytes","nodeType":"ElementaryTypeName","src":"14646:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14645:21:1"},"src":"14639:409:1"}],"externalCall":{"arguments":[{"id":1058,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"14373:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1059,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"14383:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1060,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"14389:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"14393:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1062,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"14400:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1055,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"14351:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1054,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"14334:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1353_$","typeString":"type(contract IERC1155Receiver)"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1353","typeString":"contract IERC1155Receiver"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14355:17:1","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1334,"src":"14334:38:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:71:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1097,"nodeType":"TryStatement","src":"14330:718:1"}]}}]},"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"13918:167:1","text":" @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."},"id":1101,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeTransferAcceptanceCheck","nameLocation":"14099:30:1","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"operator","nameLocation":"14147:8:1","nodeType":"VariableDeclaration","scope":1101,"src":"14139:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"14139:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"from","nameLocation":"14173:4:1","nodeType":"VariableDeclaration","scope":1101,"src":"14165:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"14165:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"to","nameLocation":"14195:2:1","nodeType":"VariableDeclaration","scope":1101,"src":"14187:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"14187:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"id","nameLocation":"14215:2:1","nodeType":"VariableDeclaration","scope":1101,"src":"14207:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"14207:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"value","nameLocation":"14235:5:1","nodeType":"VariableDeclaration","scope":1101,"src":"14227:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"14227:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"data","nameLocation":"14263:4:1","nodeType":"VariableDeclaration","scope":1101,"src":"14250:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1045,"name":"bytes","nodeType":"ElementaryTypeName","src":"14250:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14129:144:1"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[],"src":"14282:0:1"},"scope":1188,"src":"14090:974:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1170,"nodeType":"Block","src":"15469:824:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1119,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"15483:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15486:4:1","memberName":"code","nodeType":"MemberAccess","src":"15483:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15491:6:1","memberName":"length","nodeType":"MemberAccess","src":"15483:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15500:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15483:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1169,"nodeType":"IfStatement","src":"15479:808:1","trueBody":{"id":1168,"nodeType":"Block","src":"15503:784:1","statements":[{"clauses":[{"block":{"id":1148,"nodeType":"Block","src":"15656:211:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1137,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"15678:8:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1138,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"15690:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1353_$","typeString":"type(contract IERC1155Receiver)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15707:22:1","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1352,"src":"15690:39:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15730:8:1","memberName":"selector","nodeType":"MemberAccess","src":"15690:48:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"15678:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1147,"nodeType":"IfStatement","src":"15674:179:1","trueBody":{"id":1146,"nodeType":"Block","src":"15740:113:1","statements":[{"errorCall":{"arguments":[{"id":1143,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"15831:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1142,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"15808:22:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15808:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1145,"nodeType":"RevertStatement","src":"15801:33:1"}]}}]},"errorName":"","id":1149,"nodeType":"TryCatchClause","parameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"response","nameLocation":"15633:8:1","nodeType":"VariableDeclaration","scope":1149,"src":"15626:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1134,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15626:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"15608:47:1"},"src":"15600:267:1"},{"block":{"id":1165,"nodeType":"Block","src":"15896:381:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1153,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"15918:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15925:6:1","memberName":"length","nodeType":"MemberAccess","src":"15918:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15935:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15918:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1163,"nodeType":"Block","src":"16073:190:1","statements":[{"AST":{"nativeSrc":"16159:86:1","nodeType":"YulBlock","src":"16159:86:1","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"16196:2:1","nodeType":"YulLiteral","src":"16196:2:1","type":"","value":"32"},{"name":"reason","nativeSrc":"16200:6:1","nodeType":"YulIdentifier","src":"16200:6:1"}],"functionName":{"name":"add","nativeSrc":"16192:3:1","nodeType":"YulIdentifier","src":"16192:3:1"},"nativeSrc":"16192:15:1","nodeType":"YulFunctionCall","src":"16192:15:1"},{"arguments":[{"name":"reason","nativeSrc":"16215:6:1","nodeType":"YulIdentifier","src":"16215:6:1"}],"functionName":{"name":"mload","nativeSrc":"16209:5:1","nodeType":"YulIdentifier","src":"16209:5:1"},"nativeSrc":"16209:13:1","nodeType":"YulFunctionCall","src":"16209:13:1"}],"functionName":{"name":"revert","nativeSrc":"16185:6:1","nodeType":"YulIdentifier","src":"16185:6:1"},"nativeSrc":"16185:38:1","nodeType":"YulFunctionCall","src":"16185:38:1"},"nativeSrc":"16185:38:1","nodeType":"YulExpressionStatement","src":"16185:38:1"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1151,"isOffset":false,"isSlot":false,"src":"16200:6:1","valueSize":1},{"declaration":1151,"isOffset":false,"isSlot":false,"src":"16215:6:1","valueSize":1}],"id":1162,"nodeType":"InlineAssembly","src":"16150:95:1"}]},"id":1164,"nodeType":"IfStatement","src":"15914:349:1","trueBody":{"id":1161,"nodeType":"Block","src":"15938:129:1","statements":[{"errorCall":{"arguments":[{"id":1158,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"16045:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1157,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"16022:22:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16022:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1160,"nodeType":"RevertStatement","src":"16015:33:1"}]}}]},"errorName":"","id":1166,"nodeType":"TryCatchClause","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"reason","nameLocation":"15888:6:1","nodeType":"VariableDeclaration","scope":1166,"src":"15875:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1150,"name":"bytes","nodeType":"ElementaryTypeName","src":"15875:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15874:21:1"},"src":"15868:409:1"}],"externalCall":{"arguments":[{"id":1128,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"15565:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1129,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"15575:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1130,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"15581:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1131,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"15586:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1132,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"15594:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1125,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"15538:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1124,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"15521:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1353_$","typeString":"type(contract IERC1155Receiver)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15521:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1353","typeString":"contract IERC1155Receiver"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15542:22:1","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1352,"src":"15521:43:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15521:78:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1167,"nodeType":"TryStatement","src":"15517:760:1"}]}}]},"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"15070:177:1","text":" @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."},"id":1171,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeBatchTransferAcceptanceCheck","nameLocation":"15261:35:1","nodeType":"FunctionDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"operator","nameLocation":"15314:8:1","nodeType":"VariableDeclaration","scope":1171,"src":"15306:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"15306:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"from","nameLocation":"15340:4:1","nodeType":"VariableDeclaration","scope":1171,"src":"15332:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"15332:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"to","nameLocation":"15362:2:1","nodeType":"VariableDeclaration","scope":1171,"src":"15354:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"ids","nameLocation":"15391:3:1","nodeType":"VariableDeclaration","scope":1171,"src":"15374:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"15374:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1110,"nodeType":"ArrayTypeName","src":"15374:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1114,"mutability":"mutable","name":"values","nameLocation":"15421:6:1","nodeType":"VariableDeclaration","scope":1171,"src":"15404:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"15404:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1113,"nodeType":"ArrayTypeName","src":"15404:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1116,"mutability":"mutable","name":"data","nameLocation":"15450:4:1","nodeType":"VariableDeclaration","scope":1171,"src":"15437:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1115,"name":"bytes","nodeType":"ElementaryTypeName","src":"15437:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15296:164:1"},"returnParameters":{"id":1118,"nodeType":"ParameterList","parameters":[],"src":"15469:0:1"},"scope":1188,"src":"15252:1041:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1186,"nodeType":"Block","src":"16567:691:1","statements":[{"AST":{"nativeSrc":"16629:623:1","nodeType":"YulBlock","src":"16629:623:1","statements":[{"nativeSrc":"16687:21:1","nodeType":"YulAssignment","src":"16687:21:1","value":{"arguments":[{"kind":"number","nativeSrc":"16703:4:1","nodeType":"YulLiteral","src":"16703:4:1","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"16697:5:1","nodeType":"YulIdentifier","src":"16697:5:1"},"nativeSrc":"16697:11:1","nodeType":"YulFunctionCall","src":"16697:11:1"},"variableNames":[{"name":"array1","nativeSrc":"16687:6:1","nodeType":"YulIdentifier","src":"16687:6:1"}]},{"expression":{"arguments":[{"name":"array1","nativeSrc":"16765:6:1","nodeType":"YulIdentifier","src":"16765:6:1"},{"kind":"number","nativeSrc":"16773:1:1","nodeType":"YulLiteral","src":"16773:1:1","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"16758:6:1","nodeType":"YulIdentifier","src":"16758:6:1"},"nativeSrc":"16758:17:1","nodeType":"YulFunctionCall","src":"16758:17:1"},"nativeSrc":"16758:17:1","nodeType":"YulExpressionStatement","src":"16758:17:1"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nativeSrc":"16896:6:1","nodeType":"YulIdentifier","src":"16896:6:1"},{"kind":"number","nativeSrc":"16904:4:1","nodeType":"YulLiteral","src":"16904:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16892:3:1","nodeType":"YulIdentifier","src":"16892:3:1"},"nativeSrc":"16892:17:1","nodeType":"YulFunctionCall","src":"16892:17:1"},{"name":"element1","nativeSrc":"16911:8:1","nodeType":"YulIdentifier","src":"16911:8:1"}],"functionName":{"name":"mstore","nativeSrc":"16885:6:1","nodeType":"YulIdentifier","src":"16885:6:1"},"nativeSrc":"16885:35:1","nodeType":"YulFunctionCall","src":"16885:35:1"},"nativeSrc":"16885:35:1","nodeType":"YulExpressionStatement","src":"16885:35:1"},{"nativeSrc":"17011:27:1","nodeType":"YulAssignment","src":"17011:27:1","value":{"arguments":[{"name":"array1","nativeSrc":"17025:6:1","nodeType":"YulIdentifier","src":"17025:6:1"},{"kind":"number","nativeSrc":"17033:4:1","nodeType":"YulLiteral","src":"17033:4:1","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"17021:3:1","nodeType":"YulIdentifier","src":"17021:3:1"},"nativeSrc":"17021:17:1","nodeType":"YulFunctionCall","src":"17021:17:1"},"variableNames":[{"name":"array2","nativeSrc":"17011:6:1","nodeType":"YulIdentifier","src":"17011:6:1"}]},{"expression":{"arguments":[{"name":"array2","nativeSrc":"17058:6:1","nodeType":"YulIdentifier","src":"17058:6:1"},{"kind":"number","nativeSrc":"17066:1:1","nodeType":"YulLiteral","src":"17066:1:1","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"17051:6:1","nodeType":"YulIdentifier","src":"17051:6:1"},"nativeSrc":"17051:17:1","nodeType":"YulFunctionCall","src":"17051:17:1"},"nativeSrc":"17051:17:1","nodeType":"YulExpressionStatement","src":"17051:17:1"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nativeSrc":"17092:6:1","nodeType":"YulIdentifier","src":"17092:6:1"},{"kind":"number","nativeSrc":"17100:4:1","nodeType":"YulLiteral","src":"17100:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17088:3:1","nodeType":"YulIdentifier","src":"17088:3:1"},"nativeSrc":"17088:17:1","nodeType":"YulFunctionCall","src":"17088:17:1"},{"name":"element2","nativeSrc":"17107:8:1","nodeType":"YulIdentifier","src":"17107:8:1"}],"functionName":{"name":"mstore","nativeSrc":"17081:6:1","nodeType":"YulIdentifier","src":"17081:6:1"},"nativeSrc":"17081:35:1","nodeType":"YulFunctionCall","src":"17081:35:1"},"nativeSrc":"17081:35:1","nodeType":"YulExpressionStatement","src":"17081:35:1"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17218:4:1","nodeType":"YulLiteral","src":"17218:4:1","type":"","value":"0x40"},{"arguments":[{"name":"array2","nativeSrc":"17228:6:1","nodeType":"YulIdentifier","src":"17228:6:1"},{"kind":"number","nativeSrc":"17236:4:1","nodeType":"YulLiteral","src":"17236:4:1","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"17224:3:1","nodeType":"YulIdentifier","src":"17224:3:1"},"nativeSrc":"17224:17:1","nodeType":"YulFunctionCall","src":"17224:17:1"}],"functionName":{"name":"mstore","nativeSrc":"17211:6:1","nodeType":"YulIdentifier","src":"17211:6:1"},"nativeSrc":"17211:31:1","nodeType":"YulFunctionCall","src":"17211:31:1"},"nativeSrc":"17211:31:1","nodeType":"YulExpressionStatement","src":"17211:31:1"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1180,"isOffset":false,"isSlot":false,"src":"16687:6:1","valueSize":1},{"declaration":1180,"isOffset":false,"isSlot":false,"src":"16765:6:1","valueSize":1},{"declaration":1180,"isOffset":false,"isSlot":false,"src":"16896:6:1","valueSize":1},{"declaration":1180,"isOffset":false,"isSlot":false,"src":"17025:6:1","valueSize":1},{"declaration":1183,"isOffset":false,"isSlot":false,"src":"17011:6:1","valueSize":1},{"declaration":1183,"isOffset":false,"isSlot":false,"src":"17058:6:1","valueSize":1},{"declaration":1183,"isOffset":false,"isSlot":false,"src":"17092:6:1","valueSize":1},{"declaration":1183,"isOffset":false,"isSlot":false,"src":"17228:6:1","valueSize":1},{"declaration":1174,"isOffset":false,"isSlot":false,"src":"16911:8:1","valueSize":1},{"declaration":1176,"isOffset":false,"isSlot":false,"src":"17107:8:1","valueSize":1}],"id":1185,"nodeType":"InlineAssembly","src":"16620:632:1"}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"16299:105:1","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1187,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"16418:18:1","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"element1","nameLocation":"16454:8:1","nodeType":"VariableDeclaration","scope":1187,"src":"16446:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"16446:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"element2","nameLocation":"16480:8:1","nodeType":"VariableDeclaration","scope":1187,"src":"16472:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"16472:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16436:58:1"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"array1","nameLocation":"16534:6:1","nodeType":"VariableDeclaration","scope":1187,"src":"16517:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"16517:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1179,"nodeType":"ArrayTypeName","src":"16517:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"array2","nameLocation":"16559:6:1","nodeType":"VariableDeclaration","scope":1187,"src":"16542:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"16542:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1182,"nodeType":"ArrayTypeName","src":"16542:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16516:50:1"},"scope":1188,"src":"16409:849:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1189,"src":"727:16533:1","usedErrors":[101,106,111,118,123,128,135],"usedEvents":[1208,1223,1232,1239]}],"src":"109:17152:1"},"id":1},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1311],"IERC165":[1728]},"id":1312,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1190,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1192,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1312,"sourceUnit":1729,"src":"136:62:2","symbolAliases":[{"foreign":{"id":1191,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"144:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1194,"name":"IERC165","nameLocations":["358:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1728,"src":"358:7:2"},"id":1195,"nodeType":"InheritanceSpecifier","src":"358:7:2"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1193,"nodeType":"StructuredDocumentation","src":"200:135:2","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."},"fullyImplemented":false,"id":1311,"linearizedBaseContracts":[1311,1728],"name":"IERC1155","nameLocation":"346:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1196,"nodeType":"StructuredDocumentation","src":"372:125:2","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1208,"name":"TransferSingle","nameLocation":"508:14:2","nodeType":"EventDefinition","parameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"539:8:2","nodeType":"VariableDeclaration","scope":1208,"src":"523:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"523:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1200,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"565:4:2","nodeType":"VariableDeclaration","scope":1208,"src":"549:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"549:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1202,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"587:2:2","nodeType":"VariableDeclaration","scope":1208,"src":"571:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1201,"name":"address","nodeType":"ElementaryTypeName","src":"571:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1204,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"599:2:2","nodeType":"VariableDeclaration","scope":1208,"src":"591:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"591:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1206,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"611:5:2","nodeType":"VariableDeclaration","scope":1208,"src":"603:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"522:95:2"},"src":"502:116:2"},{"anonymous":false,"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"624:144:2","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1223,"name":"TransferBatch","nameLocation":"779:13:2","nodeType":"EventDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"818:8:2","nodeType":"VariableDeclaration","scope":1223,"src":"802:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"802:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"852:4:2","nodeType":"VariableDeclaration","scope":1223,"src":"836:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1215,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"882:2:2","nodeType":"VariableDeclaration","scope":1223,"src":"866:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"866:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1218,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"904:3:2","nodeType":"VariableDeclaration","scope":1223,"src":"894:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"894:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1217,"nodeType":"ArrayTypeName","src":"894:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1221,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"927:6:2","nodeType":"VariableDeclaration","scope":1223,"src":"917:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1220,"nodeType":"ArrayTypeName","src":"917:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"792:147:2"},"src":"773:167:2"},{"anonymous":false,"documentation":{"id":1224,"nodeType":"StructuredDocumentation","src":"946:147:2","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1232,"name":"ApprovalForAll","nameLocation":"1104:14:2","nodeType":"EventDefinition","parameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1135:7:2","nodeType":"VariableDeclaration","scope":1232,"src":"1119:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"1119:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1228,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1160:8:2","nodeType":"VariableDeclaration","scope":1232,"src":"1144:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1230,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1175:8:2","nodeType":"VariableDeclaration","scope":1232,"src":"1170:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1229,"name":"bool","nodeType":"ElementaryTypeName","src":"1170:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1118:66:2"},"src":"1098:87:2"},{"anonymous":false,"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"1191:343:2","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1239,"name":"URI","nameLocation":"1545:3:2","nodeType":"EventDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1556:5:2","nodeType":"VariableDeclaration","scope":1239,"src":"1549:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1234,"name":"string","nodeType":"ElementaryTypeName","src":"1549:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1237,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1579:2:2","nodeType":"VariableDeclaration","scope":1239,"src":"1563:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1548:34:2"},"src":"1539:44:2"},{"documentation":{"id":1240,"nodeType":"StructuredDocumentation","src":"1589:172:2","text":" @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":1249,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1775:9:2","nodeType":"FunctionDefinition","parameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"mutability":"mutable","name":"account","nameLocation":"1793:7:2","nodeType":"VariableDeclaration","scope":1249,"src":"1785:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"id","nameLocation":"1810:2:2","nodeType":"VariableDeclaration","scope":1249,"src":"1802:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"1802:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1784:29:2"},"returnParameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1249,"src":"1837:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"1837:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1836:9:2"},"scope":1311,"src":"1766:80:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1250,"nodeType":"StructuredDocumentation","src":"1852:188:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1262,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2054:14:2","nodeType":"FunctionDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"accounts","nameLocation":"2097:8:2","nodeType":"VariableDeclaration","scope":1262,"src":"2078:27:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"2078:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1252,"nodeType":"ArrayTypeName","src":"2078:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"ids","nameLocation":"2134:3:2","nodeType":"VariableDeclaration","scope":1262,"src":"2115:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"2115:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1255,"nodeType":"ArrayTypeName","src":"2115:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2068:75:2"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1262,"src":"2167:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"2167:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1259,"nodeType":"ArrayTypeName","src":"2167:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2166:18:2"},"scope":1311,"src":"2045:140:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"2191:248:2","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","id":1270,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2453:17:2","nodeType":"FunctionDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"operator","nameLocation":"2479:8:2","nodeType":"VariableDeclaration","scope":1270,"src":"2471:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"2471:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"approved","nameLocation":"2494:8:2","nodeType":"VariableDeclaration","scope":1270,"src":"2489:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1266,"name":"bool","nodeType":"ElementaryTypeName","src":"2489:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2470:33:2"},"returnParameters":{"id":1269,"nodeType":"ParameterList","parameters":[],"src":"2512:0:2"},"scope":1311,"src":"2444:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"2519:135:2","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1280,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2668:16:2","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"account","nameLocation":"2693:7:2","nodeType":"VariableDeclaration","scope":1280,"src":"2685:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"2685:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"operator","nameLocation":"2710:8:2","nodeType":"VariableDeclaration","scope":1280,"src":"2702:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"2702:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2684:35:2"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1280,"src":"2743:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1277,"name":"bool","nodeType":"ElementaryTypeName","src":"2743:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2742:6:2"},"scope":1311,"src":"2659:90:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1281,"nodeType":"StructuredDocumentation","src":"2755:910:2","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1294,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3679:16:2","nodeType":"FunctionDefinition","parameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"from","nameLocation":"3704:4:2","nodeType":"VariableDeclaration","scope":1294,"src":"3696:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1282,"name":"address","nodeType":"ElementaryTypeName","src":"3696:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1285,"mutability":"mutable","name":"to","nameLocation":"3718:2:2","nodeType":"VariableDeclaration","scope":1294,"src":"3710:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"3710:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1287,"mutability":"mutable","name":"id","nameLocation":"3730:2:2","nodeType":"VariableDeclaration","scope":1294,"src":"3722:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"3722:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"value","nameLocation":"3742:5:2","nodeType":"VariableDeclaration","scope":1294,"src":"3734:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"3734:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"data","nameLocation":"3764:4:2","nodeType":"VariableDeclaration","scope":1294,"src":"3749:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1290,"name":"bytes","nodeType":"ElementaryTypeName","src":"3749:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3695:74:2"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[],"src":"3778:0:2"},"scope":1311,"src":"3670:109:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1295,"nodeType":"StructuredDocumentation","src":"3785:814:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1310,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4613:21:2","nodeType":"FunctionDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"from","nameLocation":"4652:4:2","nodeType":"VariableDeclaration","scope":1310,"src":"4644:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"4644:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"to","nameLocation":"4674:2:2","nodeType":"VariableDeclaration","scope":1310,"src":"4666:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"4666:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"ids","nameLocation":"4705:3:2","nodeType":"VariableDeclaration","scope":1310,"src":"4686:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"4686:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1301,"nodeType":"ArrayTypeName","src":"4686:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1305,"mutability":"mutable","name":"values","nameLocation":"4737:6:2","nodeType":"VariableDeclaration","scope":1310,"src":"4718:25:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"4718:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1304,"nodeType":"ArrayTypeName","src":"4718:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"data","nameLocation":"4768:4:2","nodeType":"VariableDeclaration","scope":1310,"src":"4753:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1306,"name":"bytes","nodeType":"ElementaryTypeName","src":"4753:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4634:144:2"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[],"src":"4787:0:2"},"scope":1311,"src":"4604:184:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1312,"src":"336:4454:2","usedErrors":[],"usedEvents":[1208,1223,1232,1239]}],"src":"110:4681:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1353],"IERC165":[1728]},"id":1354,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1313,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1354,"sourceUnit":1729,"src":"144:62:3","symbolAliases":[{"foreign":{"id":1314,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"152:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1317,"name":"IERC165","nameLocations":["357:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1728,"src":"357:7:3"},"id":1318,"nodeType":"InheritanceSpecifier","src":"357:7:3"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"208:118:3","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1353,"linearizedBaseContracts":[1353,1728],"name":"IERC1155Receiver","nameLocation":"337:16:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"371:826:3","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1334,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1211:17:3","nodeType":"FunctionDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"operator","nameLocation":"1246:8:3","nodeType":"VariableDeclaration","scope":1334,"src":"1238:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"1238:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"from","nameLocation":"1272:4:3","nodeType":"VariableDeclaration","scope":1334,"src":"1264:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"1264:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1325,"mutability":"mutable","name":"id","nameLocation":"1294:2:3","nodeType":"VariableDeclaration","scope":1334,"src":"1286:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"1286:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1327,"mutability":"mutable","name":"value","nameLocation":"1314:5:3","nodeType":"VariableDeclaration","scope":1334,"src":"1306:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"data","nameLocation":"1344:4:3","nodeType":"VariableDeclaration","scope":1334,"src":"1329:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1328,"name":"bytes","nodeType":"ElementaryTypeName","src":"1329:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1228:126:3"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1334,"src":"1373:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1331,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1373:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1372:8:3"},"scope":1353,"src":"1202:179:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"1387:994:3","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1352,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2395:22:3","nodeType":"FunctionDefinition","parameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"operator","nameLocation":"2435:8:3","nodeType":"VariableDeclaration","scope":1352,"src":"2427:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"2427:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"from","nameLocation":"2461:4:3","nodeType":"VariableDeclaration","scope":1352,"src":"2453:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"2453:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"ids","nameLocation":"2494:3:3","nodeType":"VariableDeclaration","scope":1352,"src":"2475:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"2475:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1341,"nodeType":"ArrayTypeName","src":"2475:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"values","nameLocation":"2526:6:3","nodeType":"VariableDeclaration","scope":1352,"src":"2507:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1343,"name":"uint256","nodeType":"ElementaryTypeName","src":"2507:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1344,"nodeType":"ArrayTypeName","src":"2507:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"data","nameLocation":"2557:4:3","nodeType":"VariableDeclaration","scope":1352,"src":"2542:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1346,"name":"bytes","nodeType":"ElementaryTypeName","src":"2542:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2417:150:3"},"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1352,"src":"2586:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1349,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2586:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2585:8:3"},"scope":1353,"src":"2386:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1354,"src":"327:2269:3","usedErrors":[],"usedEvents":[]}],"src":"118:2479:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1311],"IERC1155MetadataURI":[1369]},"id":1370,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1355,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1357,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1370,"sourceUnit":1312,"src":"158:41:4","symbolAliases":[{"foreign":{"id":1356,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"166:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1359,"name":"IERC1155","nameLocations":["399:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1311,"src":"399:8:4"},"id":1360,"nodeType":"InheritanceSpecifier","src":"399:8:4"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1358,"nodeType":"StructuredDocumentation","src":"201:164:4","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."},"fullyImplemented":false,"id":1369,"linearizedBaseContracts":[1369,1311,1728],"name":"IERC1155MetadataURI","nameLocation":"376:19:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"414:192:4","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1368,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:4","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"id","nameLocation":"632:2:4","nodeType":"VariableDeclaration","scope":1368,"src":"624:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:4"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1368,"src":"659:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1365,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:4"},"scope":1369,"src":"611:63:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1370,"src":"366:310:4","usedErrors":[],"usedEvents":[1208,1223,1232,1239]}],"src":"132:545:4"},"id":4},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[1552],"Math":[2782],"StorageSlot":[1692]},"id":1553,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1371,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1373,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1553,"sourceUnit":1693,"src":"126:46:5","symbolAliases":[{"foreign":{"id":1372,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"134:11:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1375,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1553,"sourceUnit":2783,"src":"173:37:5","symbolAliases":[{"foreign":{"id":1374,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"181:4:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"212:63:5","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":1552,"linearizedBaseContracts":[1552],"name":"Arrays","nameLocation":"284:6:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1379,"libraryName":{"id":1377,"name":"StorageSlot","nameLocations":["303:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":1692,"src":"303:11:5"},"nodeType":"UsingForDirective","src":"297:30:5","typeName":{"id":1378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"319:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":1461,"nodeType":"Block","src":"843:834:5","statements":[{"assignments":[1391],"declarations":[{"constant":false,"id":1391,"mutability":"mutable","name":"low","nameLocation":"861:3:5","nodeType":"VariableDeclaration","scope":1461,"src":"853:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1390,"name":"uint256","nodeType":"ElementaryTypeName","src":"853:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1393,"initialValue":{"hexValue":"30","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"867:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"853:15:5"},{"assignments":[1395],"declarations":[{"constant":false,"id":1395,"mutability":"mutable","name":"high","nameLocation":"886:4:5","nodeType":"VariableDeclaration","scope":1461,"src":"878:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1398,"initialValue":{"expression":{"id":1396,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"893:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"899:6:5","memberName":"length","nodeType":"MemberAccess","src":"893:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"878:27:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1399,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"920:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"928:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"920:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1405,"nodeType":"IfStatement","src":"916:48:5","trueBody":{"id":1404,"nodeType":"Block","src":"931:33:5","statements":[{"expression":{"hexValue":"30","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1389,"id":1403,"nodeType":"Return","src":"945:8:5"}]}},{"body":{"id":1437,"nodeType":"Block","src":"993:423:5","statements":[{"assignments":[1410],"declarations":[{"constant":false,"id":1410,"mutability":"mutable","name":"mid","nameLocation":"1015:3:5","nodeType":"VariableDeclaration","scope":1437,"src":"1007:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"1007:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1416,"initialValue":{"arguments":[{"id":1413,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"1034:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1414,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"1039:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1411,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"1021:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2782_$","typeString":"type(library Math)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:7:5","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"1021:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1021:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1007:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1418,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"1282:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":1419,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"1289:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1417,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[1483,1504,1525],"referencedDeclaration":1525,"src":"1269:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1597_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1269:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1597_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":1421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1294:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1596,"src":"1269:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1422,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"1302:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1269:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1435,"nodeType":"Block","src":"1360:46:5","statements":[{"expression":{"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1429,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"1378:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"1384:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1384:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1378:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1434,"nodeType":"ExpressionStatement","src":"1378:13:5"}]},"id":1436,"nodeType":"IfStatement","src":"1265:141:5","trueBody":{"id":1428,"nodeType":"Block","src":"1311:43:5","statements":[{"expression":{"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1424,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"1329:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1425,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"1336:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1427,"nodeType":"ExpressionStatement","src":"1329:10:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1406,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"981:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1407,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"987:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"981:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1438,"nodeType":"WhileStatement","src":"974:442:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1439,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"1533:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1539:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1533:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1443,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"1557:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1444,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"1564:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1570:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1564:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1442,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[1483,1504,1525],"referencedDeclaration":1525,"src":"1544:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1597_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1544:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1597_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":1448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1573:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1596,"src":"1544:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1449,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"1582:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1544:45:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1533:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1459,"nodeType":"Block","src":"1636:35:5","statements":[{"expression":{"id":1457,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"1657:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1389,"id":1458,"nodeType":"Return","src":"1650:10:5"}]},"id":1460,"nodeType":"IfStatement","src":"1529:142:5","trueBody":{"id":1456,"nodeType":"Block","src":"1591:39:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1452,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"1612:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1618:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1389,"id":1455,"nodeType":"Return","src":"1605:14:5"}]}}]},"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"333:407:5","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."},"id":1462,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"754:14:5","nodeType":"FunctionDefinition","parameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"array","nameLocation":"787:5:5","nodeType":"VariableDeclaration","scope":1462,"src":"769:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1381,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1382,"nodeType":"ArrayTypeName","src":"769:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"element","nameLocation":"802:7:5","nodeType":"VariableDeclaration","scope":1462,"src":"794:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"794:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"768:42:5"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1462,"src":"834:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"834:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"833:9:5"},"scope":1552,"src":"745:932:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1482,"nodeType":"Block","src":"1993:459:5","statements":[{"assignments":[1475],"declarations":[{"constant":false,"id":1475,"mutability":"mutable","name":"slot","nameLocation":"2011:4:5","nodeType":"VariableDeclaration","scope":1482,"src":"2003:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1476,"nodeType":"VariableDeclarationStatement","src":"2003:12:5"},{"AST":{"nativeSrc":"2316:92:5","nodeType":"YulBlock","src":"2316:92:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2337:1:5","nodeType":"YulLiteral","src":"2337:1:5","type":"","value":"0"},{"name":"arr.slot","nativeSrc":"2340:8:5","nodeType":"YulIdentifier","src":"2340:8:5"}],"functionName":{"name":"mstore","nativeSrc":"2330:6:5","nodeType":"YulIdentifier","src":"2330:6:5"},"nativeSrc":"2330:19:5","nodeType":"YulFunctionCall","src":"2330:19:5"},"nativeSrc":"2330:19:5","nodeType":"YulExpressionStatement","src":"2330:19:5"},{"nativeSrc":"2362:36:5","nodeType":"YulAssignment","src":"2362:36:5","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2384:1:5","nodeType":"YulLiteral","src":"2384:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"2387:4:5","nodeType":"YulLiteral","src":"2387:4:5","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2374:9:5","nodeType":"YulIdentifier","src":"2374:9:5"},"nativeSrc":"2374:18:5","nodeType":"YulFunctionCall","src":"2374:18:5"},{"name":"pos","nativeSrc":"2394:3:5","nodeType":"YulIdentifier","src":"2394:3:5"}],"functionName":{"name":"add","nativeSrc":"2370:3:5","nodeType":"YulIdentifier","src":"2370:3:5"},"nativeSrc":"2370:28:5","nodeType":"YulFunctionCall","src":"2370:28:5"},"variableNames":[{"name":"slot","nativeSrc":"2362:4:5","nodeType":"YulIdentifier","src":"2362:4:5"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1466,"isOffset":false,"isSlot":true,"src":"2340:8:5","suffix":"slot","valueSize":1},{"declaration":1468,"isOffset":false,"isSlot":false,"src":"2394:3:5","valueSize":1},{"declaration":1475,"isOffset":false,"isSlot":false,"src":"2362:4:5","valueSize":1}],"id":1477,"nodeType":"InlineAssembly","src":"2307:101:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1478,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"2424:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2429:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"2424:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1588_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2424:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1588_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":1473,"id":1481,"nodeType":"Return","src":"2417:28:5"}]},"documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"1683:191:5","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":1483,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"1888:12:5","nodeType":"FunctionDefinition","parameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"arr","nameLocation":"1919:3:5","nodeType":"VariableDeclaration","scope":1483,"src":"1901:21:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1464,"name":"address","nodeType":"ElementaryTypeName","src":"1901:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1465,"nodeType":"ArrayTypeName","src":"1901:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1468,"mutability":"mutable","name":"pos","nameLocation":"1932:3:5","nodeType":"VariableDeclaration","scope":1483,"src":"1924:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1900:36:5"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1483,"src":"1960:31:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1588_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1471,"nodeType":"UserDefinedTypeName","pathNode":{"id":1470,"name":"StorageSlot.AddressSlot","nameLocations":["1960:11:5","1972:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":1588,"src":"1960:23:5"},"referencedDeclaration":1588,"src":"1960:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1588_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:33:5"},"scope":1552,"src":"1879:573:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1503,"nodeType":"Block","src":"2768:459:5","statements":[{"assignments":[1496],"declarations":[{"constant":false,"id":1496,"mutability":"mutable","name":"slot","nameLocation":"2786:4:5","nodeType":"VariableDeclaration","scope":1503,"src":"2778:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2778:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1497,"nodeType":"VariableDeclarationStatement","src":"2778:12:5"},{"AST":{"nativeSrc":"3091:92:5","nodeType":"YulBlock","src":"3091:92:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3112:1:5","nodeType":"YulLiteral","src":"3112:1:5","type":"","value":"0"},{"name":"arr.slot","nativeSrc":"3115:8:5","nodeType":"YulIdentifier","src":"3115:8:5"}],"functionName":{"name":"mstore","nativeSrc":"3105:6:5","nodeType":"YulIdentifier","src":"3105:6:5"},"nativeSrc":"3105:19:5","nodeType":"YulFunctionCall","src":"3105:19:5"},"nativeSrc":"3105:19:5","nodeType":"YulExpressionStatement","src":"3105:19:5"},{"nativeSrc":"3137:36:5","nodeType":"YulAssignment","src":"3137:36:5","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3159:1:5","nodeType":"YulLiteral","src":"3159:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"3162:4:5","nodeType":"YulLiteral","src":"3162:4:5","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"3149:9:5","nodeType":"YulIdentifier","src":"3149:9:5"},"nativeSrc":"3149:18:5","nodeType":"YulFunctionCall","src":"3149:18:5"},{"name":"pos","nativeSrc":"3169:3:5","nodeType":"YulIdentifier","src":"3169:3:5"}],"functionName":{"name":"add","nativeSrc":"3145:3:5","nodeType":"YulIdentifier","src":"3145:3:5"},"nativeSrc":"3145:28:5","nodeType":"YulFunctionCall","src":"3145:28:5"},"variableNames":[{"name":"slot","nativeSrc":"3137:4:5","nodeType":"YulIdentifier","src":"3137:4:5"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1487,"isOffset":false,"isSlot":true,"src":"3115:8:5","suffix":"slot","valueSize":1},{"declaration":1489,"isOffset":false,"isSlot":false,"src":"3169:3:5","valueSize":1},{"declaration":1496,"isOffset":false,"isSlot":false,"src":"3137:4:5","valueSize":1}],"id":1498,"nodeType":"InlineAssembly","src":"3082:101:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1499,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"3199:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3204:14:5","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":1636,"src":"3199:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1594_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1594_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":1494,"id":1502,"nodeType":"Return","src":"3192:28:5"}]},"documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"2458:191:5","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":1504,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"2663:12:5","nodeType":"FunctionDefinition","parameters":{"id":1490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"arr","nameLocation":"2694:3:5","nodeType":"VariableDeclaration","scope":1504,"src":"2676:21:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2676:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1486,"nodeType":"ArrayTypeName","src":"2676:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1489,"mutability":"mutable","name":"pos","nameLocation":"2707:3:5","nodeType":"VariableDeclaration","scope":1504,"src":"2699:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2675:36:5"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1504,"src":"2735:31:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1594_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1492,"nodeType":"UserDefinedTypeName","pathNode":{"id":1491,"name":"StorageSlot.Bytes32Slot","nameLocations":["2735:11:5","2747:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"2735:23:5"},"referencedDeclaration":1594,"src":"2735:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1594_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2734:33:5"},"scope":1552,"src":"2654:573:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1524,"nodeType":"Block","src":"3543:459:5","statements":[{"assignments":[1517],"declarations":[{"constant":false,"id":1517,"mutability":"mutable","name":"slot","nameLocation":"3561:4:5","nodeType":"VariableDeclaration","scope":1524,"src":"3553:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3553:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1518,"nodeType":"VariableDeclarationStatement","src":"3553:12:5"},{"AST":{"nativeSrc":"3866:92:5","nodeType":"YulBlock","src":"3866:92:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3887:1:5","nodeType":"YulLiteral","src":"3887:1:5","type":"","value":"0"},{"name":"arr.slot","nativeSrc":"3890:8:5","nodeType":"YulIdentifier","src":"3890:8:5"}],"functionName":{"name":"mstore","nativeSrc":"3880:6:5","nodeType":"YulIdentifier","src":"3880:6:5"},"nativeSrc":"3880:19:5","nodeType":"YulFunctionCall","src":"3880:19:5"},"nativeSrc":"3880:19:5","nodeType":"YulExpressionStatement","src":"3880:19:5"},{"nativeSrc":"3912:36:5","nodeType":"YulAssignment","src":"3912:36:5","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3934:1:5","nodeType":"YulLiteral","src":"3934:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"3937:4:5","nodeType":"YulLiteral","src":"3937:4:5","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"3924:9:5","nodeType":"YulIdentifier","src":"3924:9:5"},"nativeSrc":"3924:18:5","nodeType":"YulFunctionCall","src":"3924:18:5"},{"name":"pos","nativeSrc":"3944:3:5","nodeType":"YulIdentifier","src":"3944:3:5"}],"functionName":{"name":"add","nativeSrc":"3920:3:5","nodeType":"YulIdentifier","src":"3920:3:5"},"nativeSrc":"3920:28:5","nodeType":"YulFunctionCall","src":"3920:28:5"},"variableNames":[{"name":"slot","nativeSrc":"3912:4:5","nodeType":"YulIdentifier","src":"3912:4:5"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1508,"isOffset":false,"isSlot":true,"src":"3890:8:5","suffix":"slot","valueSize":1},{"declaration":1510,"isOffset":false,"isSlot":false,"src":"3944:3:5","valueSize":1},{"declaration":1517,"isOffset":false,"isSlot":false,"src":"3912:4:5","valueSize":1}],"id":1519,"nodeType":"InlineAssembly","src":"3857:101:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1520,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"3974:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3979:14:5","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":1647,"src":"3974:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1597_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3974:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1597_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":1515,"id":1523,"nodeType":"Return","src":"3967:28:5"}]},"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"3233:191:5","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":1525,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"3438:12:5","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"arr","nameLocation":"3469:3:5","nodeType":"VariableDeclaration","scope":1525,"src":"3451:21:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"3451:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1507,"nodeType":"ArrayTypeName","src":"3451:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1510,"mutability":"mutable","name":"pos","nameLocation":"3482:3:5","nodeType":"VariableDeclaration","scope":1525,"src":"3474:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"3474:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3450:36:5"},"returnParameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1525,"src":"3510:31:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1597_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1513,"nodeType":"UserDefinedTypeName","pathNode":{"id":1512,"name":"StorageSlot.Uint256Slot","nameLocations":["3510:11:5","3522:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":1597,"src":"3510:23:5"},"referencedDeclaration":1597,"src":"3510:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1597_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"3509:33:5"},"scope":1552,"src":"3429:573:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1537,"nodeType":"Block","src":"4303:98:5","statements":[{"AST":{"nativeSrc":"4322:73:5","nodeType":"YulBlock","src":"4322:73:5","statements":[{"nativeSrc":"4336:49:5","nodeType":"YulAssignment","src":"4336:49:5","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"4357:3:5","nodeType":"YulIdentifier","src":"4357:3:5"},{"kind":"number","nativeSrc":"4362:4:5","nodeType":"YulLiteral","src":"4362:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4353:3:5","nodeType":"YulIdentifier","src":"4353:3:5"},"nativeSrc":"4353:14:5","nodeType":"YulFunctionCall","src":"4353:14:5"},{"arguments":[{"name":"pos","nativeSrc":"4373:3:5","nodeType":"YulIdentifier","src":"4373:3:5"},{"kind":"number","nativeSrc":"4378:4:5","nodeType":"YulLiteral","src":"4378:4:5","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"4369:3:5","nodeType":"YulIdentifier","src":"4369:3:5"},"nativeSrc":"4369:14:5","nodeType":"YulFunctionCall","src":"4369:14:5"}],"functionName":{"name":"add","nativeSrc":"4349:3:5","nodeType":"YulIdentifier","src":"4349:3:5"},"nativeSrc":"4349:35:5","nodeType":"YulFunctionCall","src":"4349:35:5"}],"functionName":{"name":"mload","nativeSrc":"4343:5:5","nodeType":"YulIdentifier","src":"4343:5:5"},"nativeSrc":"4343:42:5","nodeType":"YulFunctionCall","src":"4343:42:5"},"variableNames":[{"name":"res","nativeSrc":"4336:3:5","nodeType":"YulIdentifier","src":"4336:3:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1529,"isOffset":false,"isSlot":false,"src":"4357:3:5","valueSize":1},{"declaration":1531,"isOffset":false,"isSlot":false,"src":"4373:3:5","valueSize":1},{"declaration":1534,"isOffset":false,"isSlot":false,"src":"4336:3:5","valueSize":1}],"id":1536,"nodeType":"InlineAssembly","src":"4313:82:5"}]},"documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"4008:191:5","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":1538,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"4213:18:5","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"arr","nameLocation":"4249:3:5","nodeType":"VariableDeclaration","scope":1538,"src":"4232:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1528,"nodeType":"ArrayTypeName","src":"4232:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"pos","nameLocation":"4262:3:5","nodeType":"VariableDeclaration","scope":1538,"src":"4254:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"4254:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4231:35:5"},"returnParameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"res","nameLocation":"4298:3:5","nodeType":"VariableDeclaration","scope":1538,"src":"4290:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"4290:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4289:13:5"},"scope":1552,"src":"4204:197:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1550,"nodeType":"Block","src":"4702:98:5","statements":[{"AST":{"nativeSrc":"4721:73:5","nodeType":"YulBlock","src":"4721:73:5","statements":[{"nativeSrc":"4735:49:5","nodeType":"YulAssignment","src":"4735:49:5","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"4756:3:5","nodeType":"YulIdentifier","src":"4756:3:5"},{"kind":"number","nativeSrc":"4761:4:5","nodeType":"YulLiteral","src":"4761:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4752:3:5","nodeType":"YulIdentifier","src":"4752:3:5"},"nativeSrc":"4752:14:5","nodeType":"YulFunctionCall","src":"4752:14:5"},{"arguments":[{"name":"pos","nativeSrc":"4772:3:5","nodeType":"YulIdentifier","src":"4772:3:5"},{"kind":"number","nativeSrc":"4777:4:5","nodeType":"YulLiteral","src":"4777:4:5","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"4768:3:5","nodeType":"YulIdentifier","src":"4768:3:5"},"nativeSrc":"4768:14:5","nodeType":"YulFunctionCall","src":"4768:14:5"}],"functionName":{"name":"add","nativeSrc":"4748:3:5","nodeType":"YulIdentifier","src":"4748:3:5"},"nativeSrc":"4748:35:5","nodeType":"YulFunctionCall","src":"4748:35:5"}],"functionName":{"name":"mload","nativeSrc":"4742:5:5","nodeType":"YulIdentifier","src":"4742:5:5"},"nativeSrc":"4742:42:5","nodeType":"YulFunctionCall","src":"4742:42:5"},"variableNames":[{"name":"res","nativeSrc":"4735:3:5","nodeType":"YulIdentifier","src":"4735:3:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1542,"isOffset":false,"isSlot":false,"src":"4756:3:5","valueSize":1},{"declaration":1544,"isOffset":false,"isSlot":false,"src":"4772:3:5","valueSize":1},{"declaration":1547,"isOffset":false,"isSlot":false,"src":"4735:3:5","valueSize":1}],"id":1549,"nodeType":"InlineAssembly","src":"4712:82:5"}]},"documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"4407:191:5","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":1551,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"4612:18:5","nodeType":"FunctionDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"arr","nameLocation":"4648:3:5","nodeType":"VariableDeclaration","scope":1551,"src":"4631:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"4631:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1541,"nodeType":"ArrayTypeName","src":"4631:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1544,"mutability":"mutable","name":"pos","nameLocation":"4661:3:5","nodeType":"VariableDeclaration","scope":1551,"src":"4653:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"4653:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:35:5"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"res","nameLocation":"4697:3:5","nodeType":"VariableDeclaration","scope":1551,"src":"4689:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"4689:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4688:13:5"},"scope":1552,"src":"4603:197:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1553,"src":"276:4526:5","usedErrors":[],"usedEvents":[]}],"src":"100:4703:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1582]},"id":1583,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1554,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"127:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1582,"linearizedBaseContracts":[1582],"name":"Context","nameLocation":"642:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1563,"nodeType":"Block","src":"718:34:6","statements":[{"expression":{"expression":{"id":1560,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:6","memberName":"sender","nodeType":"MemberAccess","src":"735:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1559,"id":1562,"nodeType":"Return","src":"728:17:6"}]},"id":1564,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:6","nodeType":"FunctionDefinition","parameters":{"id":1556,"nodeType":"ParameterList","parameters":[],"src":"675:2:6"},"returnParameters":{"id":1559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1564,"src":"709:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1557,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:6"},"scope":1582,"src":"656:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1572,"nodeType":"Block","src":"825:32:6","statements":[{"expression":{"expression":{"id":1569,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:6","memberName":"data","nodeType":"MemberAccess","src":"842:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1568,"id":1571,"nodeType":"Return","src":"835:15:6"}]},"id":1573,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:6","nodeType":"FunctionDefinition","parameters":{"id":1565,"nodeType":"ParameterList","parameters":[],"src":"775:2:6"},"returnParameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1573,"src":"809:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1566,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:6"},"scope":1582,"src":"758:99:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1580,"nodeType":"Block","src":"935:25:6","statements":[{"expression":{"hexValue":"30","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1577,"id":1579,"nodeType":"Return","src":"945:8:6"}]},"id":1581,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:6","nodeType":"FunctionDefinition","parameters":{"id":1574,"nodeType":"ParameterList","parameters":[],"src":"892:2:6"},"returnParameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1581,"src":"926:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1575,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:6"},"scope":1582,"src":"863:97:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1583,"src":"624:338:6","usedErrors":[],"usedEvents":[]}],"src":"101:862:6"},"id":6},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1692]},"id":1693,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1584,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"219:1025:7","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":1692,"linearizedBaseContracts":[1692],"name":"StorageSlot","nameLocation":"1253:11:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1588,"members":[{"constant":false,"id":1587,"mutability":"mutable","name":"value","nameLocation":"1308:5:7","nodeType":"VariableDeclaration","scope":1588,"src":"1300:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:7","nodeType":"StructDefinition","scope":1692,"src":"1271:49:7","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1591,"members":[{"constant":false,"id":1590,"mutability":"mutable","name":"value","nameLocation":"1360:5:7","nodeType":"VariableDeclaration","scope":1591,"src":"1355:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1589,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:7","nodeType":"StructDefinition","scope":1692,"src":"1326:46:7","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1594,"members":[{"constant":false,"id":1593,"mutability":"mutable","name":"value","nameLocation":"1415:5:7","nodeType":"VariableDeclaration","scope":1594,"src":"1407:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:7","nodeType":"StructDefinition","scope":1692,"src":"1378:49:7","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1597,"members":[{"constant":false,"id":1596,"mutability":"mutable","name":"value","nameLocation":"1470:5:7","nodeType":"VariableDeclaration","scope":1597,"src":"1462:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:7","nodeType":"StructDefinition","scope":1692,"src":"1433:49:7","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1600,"members":[{"constant":false,"id":1599,"mutability":"mutable","name":"value","nameLocation":"1523:5:7","nodeType":"VariableDeclaration","scope":1600,"src":"1516:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1598,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:7","nodeType":"StructDefinition","scope":1692,"src":"1488:47:7","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1603,"members":[{"constant":false,"id":1602,"mutability":"mutable","name":"value","nameLocation":"1574:5:7","nodeType":"VariableDeclaration","scope":1603,"src":"1568:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1601,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:7","nodeType":"StructDefinition","scope":1692,"src":"1541:45:7","visibility":"public"},{"body":{"id":1613,"nodeType":"Block","src":"1768:106:7","statements":[{"AST":{"nativeSrc":"1830:38:7","nodeType":"YulBlock","src":"1830:38:7","statements":[{"nativeSrc":"1844:14:7","nodeType":"YulAssignment","src":"1844:14:7","value":{"name":"slot","nativeSrc":"1854:4:7","nodeType":"YulIdentifier","src":"1854:4:7"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:7","nodeType":"YulIdentifier","src":"1844:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1610,"isOffset":false,"isSlot":true,"src":"1844:6:7","suffix":"slot","valueSize":1},{"declaration":1606,"isOffset":false,"isSlot":false,"src":"1854:4:7","valueSize":1}],"id":1612,"nodeType":"InlineAssembly","src":"1821:47:7"}]},"documentation":{"id":1604,"nodeType":"StructuredDocumentation","src":"1592:87:7","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1614,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:7","nodeType":"FunctionDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"slot","nameLocation":"1716:4:7","nodeType":"VariableDeclaration","scope":1614,"src":"1708:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:7"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"r","nameLocation":"1765:1:7","nodeType":"VariableDeclaration","scope":1614,"src":"1745:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1588_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1609,"nodeType":"UserDefinedTypeName","pathNode":{"id":1608,"name":"AddressSlot","nameLocations":["1745:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1588,"src":"1745:11:7"},"referencedDeclaration":1588,"src":"1745:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1588_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:7"},"scope":1692,"src":"1684:190:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1624,"nodeType":"Block","src":"2056:106:7","statements":[{"AST":{"nativeSrc":"2118:38:7","nodeType":"YulBlock","src":"2118:38:7","statements":[{"nativeSrc":"2132:14:7","nodeType":"YulAssignment","src":"2132:14:7","value":{"name":"slot","nativeSrc":"2142:4:7","nodeType":"YulIdentifier","src":"2142:4:7"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:7","nodeType":"YulIdentifier","src":"2132:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1621,"isOffset":false,"isSlot":true,"src":"2132:6:7","suffix":"slot","valueSize":1},{"declaration":1617,"isOffset":false,"isSlot":false,"src":"2142:4:7","valueSize":1}],"id":1623,"nodeType":"InlineAssembly","src":"2109:47:7"}]},"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"1880:87:7","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1625,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:7","nodeType":"FunctionDefinition","parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"slot","nameLocation":"2004:4:7","nodeType":"VariableDeclaration","scope":1625,"src":"1996:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:7"},"returnParameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"r","nameLocation":"2053:1:7","nodeType":"VariableDeclaration","scope":1625,"src":"2033:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1591_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1620,"nodeType":"UserDefinedTypeName","pathNode":{"id":1619,"name":"BooleanSlot","nameLocations":["2033:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1591,"src":"2033:11:7"},"referencedDeclaration":1591,"src":"2033:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1591_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:7"},"scope":1692,"src":"1972:190:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1635,"nodeType":"Block","src":"2344:106:7","statements":[{"AST":{"nativeSrc":"2406:38:7","nodeType":"YulBlock","src":"2406:38:7","statements":[{"nativeSrc":"2420:14:7","nodeType":"YulAssignment","src":"2420:14:7","value":{"name":"slot","nativeSrc":"2430:4:7","nodeType":"YulIdentifier","src":"2430:4:7"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:7","nodeType":"YulIdentifier","src":"2420:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1632,"isOffset":false,"isSlot":true,"src":"2420:6:7","suffix":"slot","valueSize":1},{"declaration":1628,"isOffset":false,"isSlot":false,"src":"2430:4:7","valueSize":1}],"id":1634,"nodeType":"InlineAssembly","src":"2397:47:7"}]},"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"2168:87:7","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1636,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:7","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"slot","nameLocation":"2292:4:7","nodeType":"VariableDeclaration","scope":1636,"src":"2284:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:7"},"returnParameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1632,"mutability":"mutable","name":"r","nameLocation":"2341:1:7","nodeType":"VariableDeclaration","scope":1636,"src":"2321:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1594_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1631,"nodeType":"UserDefinedTypeName","pathNode":{"id":1630,"name":"Bytes32Slot","nameLocations":["2321:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"2321:11:7"},"referencedDeclaration":1594,"src":"2321:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1594_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:7"},"scope":1692,"src":"2260:190:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1646,"nodeType":"Block","src":"2632:106:7","statements":[{"AST":{"nativeSrc":"2694:38:7","nodeType":"YulBlock","src":"2694:38:7","statements":[{"nativeSrc":"2708:14:7","nodeType":"YulAssignment","src":"2708:14:7","value":{"name":"slot","nativeSrc":"2718:4:7","nodeType":"YulIdentifier","src":"2718:4:7"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:7","nodeType":"YulIdentifier","src":"2708:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1643,"isOffset":false,"isSlot":true,"src":"2708:6:7","suffix":"slot","valueSize":1},{"declaration":1639,"isOffset":false,"isSlot":false,"src":"2718:4:7","valueSize":1}],"id":1645,"nodeType":"InlineAssembly","src":"2685:47:7"}]},"documentation":{"id":1637,"nodeType":"StructuredDocumentation","src":"2456:87:7","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1647,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:7","nodeType":"FunctionDefinition","parameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1639,"mutability":"mutable","name":"slot","nameLocation":"2580:4:7","nodeType":"VariableDeclaration","scope":1647,"src":"2572:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:7"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"r","nameLocation":"2629:1:7","nodeType":"VariableDeclaration","scope":1647,"src":"2609:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1597_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1642,"nodeType":"UserDefinedTypeName","pathNode":{"id":1641,"name":"Uint256Slot","nameLocations":["2609:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1597,"src":"2609:11:7"},"referencedDeclaration":1597,"src":"2609:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1597_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:7"},"scope":1692,"src":"2548:190:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1657,"nodeType":"Block","src":"2917:106:7","statements":[{"AST":{"nativeSrc":"2979:38:7","nodeType":"YulBlock","src":"2979:38:7","statements":[{"nativeSrc":"2993:14:7","nodeType":"YulAssignment","src":"2993:14:7","value":{"name":"slot","nativeSrc":"3003:4:7","nodeType":"YulIdentifier","src":"3003:4:7"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:7","nodeType":"YulIdentifier","src":"2993:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1654,"isOffset":false,"isSlot":true,"src":"2993:6:7","suffix":"slot","valueSize":1},{"declaration":1650,"isOffset":false,"isSlot":false,"src":"3003:4:7","valueSize":1}],"id":1656,"nodeType":"InlineAssembly","src":"2970:47:7"}]},"documentation":{"id":1648,"nodeType":"StructuredDocumentation","src":"2744:86:7","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1658,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:7","nodeType":"FunctionDefinition","parameters":{"id":1651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"slot","nameLocation":"2866:4:7","nodeType":"VariableDeclaration","scope":1658,"src":"2858:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:7"},"returnParameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"r","nameLocation":"2914:1:7","nodeType":"VariableDeclaration","scope":1658,"src":"2895:20:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1600_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1653,"nodeType":"UserDefinedTypeName","pathNode":{"id":1652,"name":"StringSlot","nameLocations":["2895:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":1600,"src":"2895:10:7"},"referencedDeclaration":1600,"src":"2895:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1600_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:7"},"scope":1692,"src":"2835:188:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1668,"nodeType":"Block","src":"3225:112:7","statements":[{"AST":{"nativeSrc":"3287:44:7","nodeType":"YulBlock","src":"3287:44:7","statements":[{"nativeSrc":"3301:20:7","nodeType":"YulAssignment","src":"3301:20:7","value":{"name":"store.slot","nativeSrc":"3311:10:7","nodeType":"YulIdentifier","src":"3311:10:7"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:7","nodeType":"YulIdentifier","src":"3301:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1665,"isOffset":false,"isSlot":true,"src":"3301:6:7","suffix":"slot","valueSize":1},{"declaration":1661,"isOffset":false,"isSlot":true,"src":"3311:10:7","suffix":"slot","valueSize":1}],"id":1667,"nodeType":"InlineAssembly","src":"3278:53:7"}]},"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"3029:101:7","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:7","nodeType":"FunctionDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"store","nameLocation":"3173:5:7","nodeType":"VariableDeclaration","scope":1669,"src":"3158:20:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1660,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:7"},"returnParameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"r","nameLocation":"3222:1:7","nodeType":"VariableDeclaration","scope":1669,"src":"3203:20:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1600_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1664,"nodeType":"UserDefinedTypeName","pathNode":{"id":1663,"name":"StringSlot","nameLocations":["3203:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":1600,"src":"3203:10:7"},"referencedDeclaration":1600,"src":"3203:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1600_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:7"},"scope":1692,"src":"3135:202:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1679,"nodeType":"Block","src":"3513:106:7","statements":[{"AST":{"nativeSrc":"3575:38:7","nodeType":"YulBlock","src":"3575:38:7","statements":[{"nativeSrc":"3589:14:7","nodeType":"YulAssignment","src":"3589:14:7","value":{"name":"slot","nativeSrc":"3599:4:7","nodeType":"YulIdentifier","src":"3599:4:7"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:7","nodeType":"YulIdentifier","src":"3589:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1676,"isOffset":false,"isSlot":true,"src":"3589:6:7","suffix":"slot","valueSize":1},{"declaration":1672,"isOffset":false,"isSlot":false,"src":"3599:4:7","valueSize":1}],"id":1678,"nodeType":"InlineAssembly","src":"3566:47:7"}]},"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"3343:85:7","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1680,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:7","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"slot","nameLocation":"3463:4:7","nodeType":"VariableDeclaration","scope":1680,"src":"3455:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:7"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"r","nameLocation":"3510:1:7","nodeType":"VariableDeclaration","scope":1680,"src":"3492:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1603_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1675,"nodeType":"UserDefinedTypeName","pathNode":{"id":1674,"name":"BytesSlot","nameLocations":["3492:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1603,"src":"3492:9:7"},"referencedDeclaration":1603,"src":"3492:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1603_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:7"},"scope":1692,"src":"3433:186:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1690,"nodeType":"Block","src":"3816:112:7","statements":[{"AST":{"nativeSrc":"3878:44:7","nodeType":"YulBlock","src":"3878:44:7","statements":[{"nativeSrc":"3892:20:7","nodeType":"YulAssignment","src":"3892:20:7","value":{"name":"store.slot","nativeSrc":"3902:10:7","nodeType":"YulIdentifier","src":"3902:10:7"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:7","nodeType":"YulIdentifier","src":"3892:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1687,"isOffset":false,"isSlot":true,"src":"3892:6:7","suffix":"slot","valueSize":1},{"declaration":1683,"isOffset":false,"isSlot":true,"src":"3902:10:7","suffix":"slot","valueSize":1}],"id":1689,"nodeType":"InlineAssembly","src":"3869:53:7"}]},"documentation":{"id":1681,"nodeType":"StructuredDocumentation","src":"3625:99:7","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1691,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:7","nodeType":"FunctionDefinition","parameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"store","nameLocation":"3765:5:7","nodeType":"VariableDeclaration","scope":1691,"src":"3751:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1682,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:7"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"r","nameLocation":"3813:1:7","nodeType":"VariableDeclaration","scope":1691,"src":"3795:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1603_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1686,"nodeType":"UserDefinedTypeName","pathNode":{"id":1685,"name":"BytesSlot","nameLocations":["3795:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1603,"src":"3795:9:7"},"referencedDeclaration":1603,"src":"3795:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1603_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:7"},"scope":1692,"src":"3729:199:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1693,"src":"1245:2685:7","usedErrors":[],"usedEvents":[]}],"src":"193:3738:7"},"id":7},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1716],"IERC165":[1728]},"id":1717,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1694,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1696,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1717,"sourceUnit":1729,"src":"140:38:8","symbolAliases":[{"foreign":{"id":1695,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"148:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1698,"name":"IERC165","nameLocations":["687:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1728,"src":"687:7:8"},"id":1699,"nodeType":"InheritanceSpecifier","src":"687:7:8"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"180:478:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1716,"linearizedBaseContracts":[1716,1728],"name":"ERC165","nameLocation":"677:6:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1727],"body":{"id":1714,"nodeType":"Block","src":"844:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1707,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"861:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1709,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"881:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1728_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1728_$","typeString":"type(contract IERC165)"}],"id":1708,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1728","typeString":"type(contract IERC165)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1706,"id":1713,"nodeType":"Return","src":"854:47:8"}]},"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"701:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1715,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:8","nodeType":"FunctionDefinition","parameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:8","nodeType":"VariableDeclaration","scope":1715,"src":"789:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1701,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:8"},"returnParameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1715,"src":"838:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1704,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:8"},"scope":1716,"src":"762:146:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1717,"src":"659:251:8","usedErrors":[],"usedEvents":[]}],"src":"114:797:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1728]},"id":1729,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1718,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"141:279:9","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1728,"linearizedBaseContracts":[1728],"name":"IERC165","nameLocation":"431:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1720,"nodeType":"StructuredDocumentation","src":"445:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1727,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:9","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1722,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:9","nodeType":"VariableDeclaration","scope":1727,"src":"817:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1721,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:9"},"returnParameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1727,"src":"860:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1724,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:9"},"scope":1728,"src":"790:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1729,"src":"421:447:9","usedErrors":[],"usedEvents":[]}],"src":"115:754:9"},"id":9},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2782]},"id":2783,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1730,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"129:73:10","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2782,"linearizedBaseContracts":[2782],"name":"Math","nameLocation":"211:4:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1732,"nodeType":"StructuredDocumentation","src":"222:50:10","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":1734,"name":"MathOverflowedMulDiv","nameLocation":"283:20:10","nodeType":"ErrorDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[],"src":"303:2:10"},"src":"277:29:10"},{"canonicalName":"Math.Rounding","id":1739,"members":[{"id":1735,"name":"Floor","nameLocation":"336:5:10","nodeType":"EnumValue","src":"336:5:10"},{"id":1736,"name":"Ceil","nameLocation":"379:4:10","nodeType":"EnumValue","src":"379:4:10"},{"id":1737,"name":"Trunc","nameLocation":"421:5:10","nodeType":"EnumValue","src":"421:5:10"},{"id":1738,"name":"Expand","nameLocation":"451:6:10","nodeType":"EnumValue","src":"451:6:10"}],"name":"Rounding","nameLocation":"317:8:10","nodeType":"EnumDefinition","src":"312:169:10"},{"body":{"id":1770,"nodeType":"Block","src":"661:140:10","statements":[{"id":1769,"nodeType":"UncheckedBlock","src":"671:124:10","statements":[{"assignments":[1752],"declarations":[{"constant":false,"id":1752,"mutability":"mutable","name":"c","nameLocation":"703:1:10","nodeType":"VariableDeclaration","scope":1769,"src":"695:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1751,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1756,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1753,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"707:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1754,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"711:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1757,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"730:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1758,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"734:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1764,"nodeType":"IfStatement","src":"726:28:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1750,"id":1763,"nodeType":"Return","src":"737:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1766,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"782:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1750,"id":1768,"nodeType":"Return","src":"768:16:10"}]}]},"documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"487:93:10","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":1771,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:10","nodeType":"FunctionDefinition","parameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"a","nameLocation":"609:1:10","nodeType":"VariableDeclaration","scope":1771,"src":"601:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"mutable","name":"b","nameLocation":"620:1:10","nodeType":"VariableDeclaration","scope":1771,"src":"612:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:10"},"returnParameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1771,"src":"646:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1746,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1771,"src":"652:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:10"},"scope":2782,"src":"585:216:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1798,"nodeType":"Block","src":"984:113:10","statements":[{"id":1797,"nodeType":"UncheckedBlock","src":"994:97:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1783,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1022:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1784,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"1026:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1790,"nodeType":"IfStatement","src":"1018:28:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1788,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1782,"id":1789,"nodeType":"Return","src":"1029:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1792,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"1074:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1793,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1078:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1795,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1782,"id":1796,"nodeType":"Return","src":"1060:20:10"}]}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"807:96:10","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":1799,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:10","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"a","nameLocation":"932:1:10","nodeType":"VariableDeclaration","scope":1799,"src":"924:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1773,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"b","nameLocation":"943:1:10","nodeType":"VariableDeclaration","scope":1799,"src":"935:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:10"},"returnParameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1799,"src":"969:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1778,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1799,"src":"975:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:10"},"scope":2782,"src":"908:189:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1840,"nodeType":"Block","src":"1283:417:10","statements":[{"id":1839,"nodeType":"UncheckedBlock","src":"1293:401:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1811,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"1551:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1818,"nodeType":"IfStatement","src":"1547:28:10","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1816,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1810,"id":1817,"nodeType":"Return","src":"1559:16:10"}},{"assignments":[1820],"declarations":[{"constant":false,"id":1820,"mutability":"mutable","name":"c","nameLocation":"1597:1:10","nodeType":"VariableDeclaration","scope":1839,"src":"1589:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1824,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1821,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"1601:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1822,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"1605:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1825,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"1624:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1826,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"1628:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1828,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"1633:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1834,"nodeType":"IfStatement","src":"1620:33:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1810,"id":1833,"nodeType":"Return","src":"1636:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1836,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"1681:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1837,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1810,"id":1838,"nodeType":"Return","src":"1667:16:10"}]}]},"documentation":{"id":1800,"nodeType":"StructuredDocumentation","src":"1103:99:10","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":1841,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:10","nodeType":"FunctionDefinition","parameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"a","nameLocation":"1231:1:10","nodeType":"VariableDeclaration","scope":1841,"src":"1223:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1804,"mutability":"mutable","name":"b","nameLocation":"1242:1:10","nodeType":"VariableDeclaration","scope":1841,"src":"1234:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:10"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1841,"src":"1268:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1806,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1841,"src":"1274:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:10"},"scope":2782,"src":"1207:493:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1868,"nodeType":"Block","src":"1887:114:10","statements":[{"id":1867,"nodeType":"UncheckedBlock","src":"1897:98:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1853,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"1925:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1860,"nodeType":"IfStatement","src":"1921:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1852,"id":1859,"nodeType":"Return","src":"1933:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1862,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"1978:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1863,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"1982:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1852,"id":1866,"nodeType":"Return","src":"1964:20:10"}]}]},"documentation":{"id":1842,"nodeType":"StructuredDocumentation","src":"1706:100:10","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":1869,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:10","nodeType":"FunctionDefinition","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"a","nameLocation":"1835:1:10","nodeType":"VariableDeclaration","scope":1869,"src":"1827:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"b","nameLocation":"1846:1:10","nodeType":"VariableDeclaration","scope":1869,"src":"1838:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:10"},"returnParameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1869,"src":"1872:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1848,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1869,"src":"1878:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:10"},"scope":2782,"src":"1811:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1896,"nodeType":"Block","src":"2198:114:10","statements":[{"id":1895,"nodeType":"UncheckedBlock","src":"2208:98:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1881,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"2236:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1888,"nodeType":"IfStatement","src":"2232:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1880,"id":1887,"nodeType":"Return","src":"2244:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1890,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"2289:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1891,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"2293:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1880,"id":1894,"nodeType":"Return","src":"2275:20:10"}]}]},"documentation":{"id":1870,"nodeType":"StructuredDocumentation","src":"2007:110:10","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":1897,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:10","nodeType":"FunctionDefinition","parameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"a","nameLocation":"2146:1:10","nodeType":"VariableDeclaration","scope":1897,"src":"2138:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1874,"mutability":"mutable","name":"b","nameLocation":"2157:1:10","nodeType":"VariableDeclaration","scope":1897,"src":"2149:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:10"},"returnParameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1897,"src":"2183:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1876,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1897,"src":"2189:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:10"},"scope":2782,"src":"2122:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1914,"nodeType":"Block","src":"2449:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1907,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"2466:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1908,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"2470:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1911,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"2478:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:10","trueExpression":{"id":1910,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"2474:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1906,"id":1913,"nodeType":"Return","src":"2459:20:10"}]},"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"2318:59:10","text":" @dev Returns the largest of two numbers."},"id":1915,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:10","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"a","nameLocation":"2403:1:10","nodeType":"VariableDeclaration","scope":1915,"src":"2395:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"b","nameLocation":"2414:1:10","nodeType":"VariableDeclaration","scope":1915,"src":"2406:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1901,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:10"},"returnParameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1915,"src":"2440:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1904,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:10"},"scope":2782,"src":"2382:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1932,"nodeType":"Block","src":"2624:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"2641:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1926,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"2645:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1929,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"2653:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:10","trueExpression":{"id":1928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"2649:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1924,"id":1931,"nodeType":"Return","src":"2634:20:10"}]},"documentation":{"id":1916,"nodeType":"StructuredDocumentation","src":"2492:60:10","text":" @dev Returns the smallest of two numbers."},"id":1933,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:10","nodeType":"FunctionDefinition","parameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"a","nameLocation":"2578:1:10","nodeType":"VariableDeclaration","scope":1933,"src":"2570:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1917,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1920,"mutability":"mutable","name":"b","nameLocation":"2589:1:10","nodeType":"VariableDeclaration","scope":1933,"src":"2581:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:10"},"returnParameters":{"id":1924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1933,"src":"2615:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:10"},"scope":2782,"src":"2557:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1955,"nodeType":"Block","src":"2845:82:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1943,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"2900:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1944,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"2904:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1946,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1947,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"2910:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1948,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"2914:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1942,"id":1954,"nodeType":"Return","src":"2892:28:10"}]},"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"2667:102:10","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1956,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:10","nodeType":"FunctionDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"a","nameLocation":"2799:1:10","nodeType":"VariableDeclaration","scope":1956,"src":"2791:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"b","nameLocation":"2810:1:10","nodeType":"VariableDeclaration","scope":1956,"src":"2802:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:10"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1956,"src":"2836:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:10"},"scope":2782,"src":"2774:153:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1989,"nodeType":"Block","src":"3219:260:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"3233:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1974,"nodeType":"IfStatement","src":"3229:127:10","trueBody":{"id":1973,"nodeType":"Block","src":"3241:115:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1969,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"3340:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1970,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"3344:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1965,"id":1972,"nodeType":"Return","src":"3333:12:10"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1975,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"3444:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"3458:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1983,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"3467:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:10","trueExpression":{"hexValue":"30","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1965,"id":1988,"nodeType":"Return","src":"3437:35:10"}]},"documentation":{"id":1957,"nodeType":"StructuredDocumentation","src":"2933:210:10","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":1990,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:10","nodeType":"FunctionDefinition","parameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"a","nameLocation":"3173:1:10","nodeType":"VariableDeclaration","scope":1990,"src":"3165:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1958,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1961,"mutability":"mutable","name":"b","nameLocation":"3184:1:10","nodeType":"VariableDeclaration","scope":1990,"src":"3176:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:10"},"returnParameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1990,"src":"3210:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:10"},"scope":2782,"src":"3148:331:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2115,"nodeType":"Block","src":"3901:4018:10","statements":[{"id":2114,"nodeType":"UncheckedBlock","src":"3911:4002:10","statements":[{"assignments":[2003],"declarations":[{"constant":false,"id":2003,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:10","nodeType":"VariableDeclaration","scope":2114,"src":"4232:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2002,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2007,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2004,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"4248:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2005,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"4252:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:10"},{"assignments":[2009],"declarations":[{"constant":false,"id":2009,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:10","nodeType":"VariableDeclaration","scope":2114,"src":"4312:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2010,"nodeType":"VariableDeclarationStatement","src":"4312:13:10"},{"AST":{"nativeSrc":"4392:122:10","nodeType":"YulBlock","src":"4392:122:10","statements":[{"nativeSrc":"4410:30:10","nodeType":"YulVariableDeclaration","src":"4410:30:10","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:10","nodeType":"YulIdentifier","src":"4427:1:10"},{"name":"y","nativeSrc":"4430:1:10","nodeType":"YulIdentifier","src":"4430:1:10"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:10","nodeType":"YulLiteral","src":"4437:1:10","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:10","nodeType":"YulIdentifier","src":"4433:3:10"},"nativeSrc":"4433:6:10","nodeType":"YulFunctionCall","src":"4433:6:10"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:10","nodeType":"YulIdentifier","src":"4420:6:10"},"nativeSrc":"4420:20:10","nodeType":"YulFunctionCall","src":"4420:20:10"},"variables":[{"name":"mm","nativeSrc":"4414:2:10","nodeType":"YulTypedName","src":"4414:2:10","type":""}]},{"nativeSrc":"4457:43:10","nodeType":"YulAssignment","src":"4457:43:10","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:10","nodeType":"YulIdentifier","src":"4474:2:10"},{"name":"prod0","nativeSrc":"4478:5:10","nodeType":"YulIdentifier","src":"4478:5:10"}],"functionName":{"name":"sub","nativeSrc":"4470:3:10","nodeType":"YulIdentifier","src":"4470:3:10"},"nativeSrc":"4470:14:10","nodeType":"YulFunctionCall","src":"4470:14:10"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:10","nodeType":"YulIdentifier","src":"4489:2:10"},{"name":"prod0","nativeSrc":"4493:5:10","nodeType":"YulIdentifier","src":"4493:5:10"}],"functionName":{"name":"lt","nativeSrc":"4486:2:10","nodeType":"YulIdentifier","src":"4486:2:10"},"nativeSrc":"4486:13:10","nodeType":"YulFunctionCall","src":"4486:13:10"}],"functionName":{"name":"sub","nativeSrc":"4466:3:10","nodeType":"YulIdentifier","src":"4466:3:10"},"nativeSrc":"4466:34:10","nodeType":"YulFunctionCall","src":"4466:34:10"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:10","nodeType":"YulIdentifier","src":"4457:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2003,"isOffset":false,"isSlot":false,"src":"4478:5:10","valueSize":1},{"declaration":2003,"isOffset":false,"isSlot":false,"src":"4493:5:10","valueSize":1},{"declaration":2009,"isOffset":false,"isSlot":false,"src":"4457:5:10","valueSize":1},{"declaration":1993,"isOffset":false,"isSlot":false,"src":"4427:1:10","valueSize":1},{"declaration":1995,"isOffset":false,"isSlot":false,"src":"4430:1:10","valueSize":1}],"id":2011,"nodeType":"InlineAssembly","src":"4383:131:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2012,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"4595:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2020,"nodeType":"IfStatement","src":"4591:368:10","trueBody":{"id":2019,"nodeType":"Block","src":"4607:352:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2015,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"4925:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2016,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"4933:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2001,"id":2018,"nodeType":"Return","src":"4918:26:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2021,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"5065:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2022,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"5080:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2028,"nodeType":"IfStatement","src":"5061:88:10","trueBody":{"id":2027,"nodeType":"Block","src":"5087:62:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2024,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"5112:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2026,"nodeType":"RevertStatement","src":"5105:29:10"}]}},{"assignments":[2030],"declarations":[{"constant":false,"id":2030,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:10","nodeType":"VariableDeclaration","scope":2114,"src":"5404:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2031,"nodeType":"VariableDeclarationStatement","src":"5404:17:10"},{"AST":{"nativeSrc":"5444:291:10","nodeType":"YulBlock","src":"5444:291:10","statements":[{"nativeSrc":"5513:38:10","nodeType":"YulAssignment","src":"5513:38:10","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:10","nodeType":"YulIdentifier","src":"5533:1:10"},{"name":"y","nativeSrc":"5536:1:10","nodeType":"YulIdentifier","src":"5536:1:10"},{"name":"denominator","nativeSrc":"5539:11:10","nodeType":"YulIdentifier","src":"5539:11:10"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:10","nodeType":"YulIdentifier","src":"5526:6:10"},"nativeSrc":"5526:25:10","nodeType":"YulFunctionCall","src":"5526:25:10"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:10","nodeType":"YulIdentifier","src":"5513:9:10"}]},{"nativeSrc":"5633:41:10","nodeType":"YulAssignment","src":"5633:41:10","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:10","nodeType":"YulIdentifier","src":"5646:5:10"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:10","nodeType":"YulIdentifier","src":"5656:9:10"},{"name":"prod0","nativeSrc":"5667:5:10","nodeType":"YulIdentifier","src":"5667:5:10"}],"functionName":{"name":"gt","nativeSrc":"5653:2:10","nodeType":"YulIdentifier","src":"5653:2:10"},"nativeSrc":"5653:20:10","nodeType":"YulFunctionCall","src":"5653:20:10"}],"functionName":{"name":"sub","nativeSrc":"5642:3:10","nodeType":"YulIdentifier","src":"5642:3:10"},"nativeSrc":"5642:32:10","nodeType":"YulFunctionCall","src":"5642:32:10"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:10","nodeType":"YulIdentifier","src":"5633:5:10"}]},{"nativeSrc":"5691:30:10","nodeType":"YulAssignment","src":"5691:30:10","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:10","nodeType":"YulIdentifier","src":"5704:5:10"},{"name":"remainder","nativeSrc":"5711:9:10","nodeType":"YulIdentifier","src":"5711:9:10"}],"functionName":{"name":"sub","nativeSrc":"5700:3:10","nodeType":"YulIdentifier","src":"5700:3:10"},"nativeSrc":"5700:21:10","nodeType":"YulFunctionCall","src":"5700:21:10"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:10","nodeType":"YulIdentifier","src":"5691:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1997,"isOffset":false,"isSlot":false,"src":"5539:11:10","valueSize":1},{"declaration":2003,"isOffset":false,"isSlot":false,"src":"5667:5:10","valueSize":1},{"declaration":2003,"isOffset":false,"isSlot":false,"src":"5691:5:10","valueSize":1},{"declaration":2003,"isOffset":false,"isSlot":false,"src":"5704:5:10","valueSize":1},{"declaration":2009,"isOffset":false,"isSlot":false,"src":"5633:5:10","valueSize":1},{"declaration":2009,"isOffset":false,"isSlot":false,"src":"5646:5:10","valueSize":1},{"declaration":2030,"isOffset":false,"isSlot":false,"src":"5513:9:10","valueSize":1},{"declaration":2030,"isOffset":false,"isSlot":false,"src":"5656:9:10","valueSize":1},{"declaration":2030,"isOffset":false,"isSlot":false,"src":"5711:9:10","valueSize":1},{"declaration":1993,"isOffset":false,"isSlot":false,"src":"5533:1:10","valueSize":1},{"declaration":1995,"isOffset":false,"isSlot":false,"src":"5536:1:10","valueSize":1}],"id":2032,"nodeType":"InlineAssembly","src":"5435:300:10"},{"assignments":[2034],"declarations":[{"constant":false,"id":2034,"mutability":"mutable","name":"twos","nameLocation":"5947:4:10","nodeType":"VariableDeclaration","scope":2114,"src":"5939:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2041,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2035,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"5954:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2037,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"5973:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2039,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:10"},{"AST":{"nativeSrc":"6008:362:10","nodeType":"YulBlock","src":"6008:362:10","statements":[{"nativeSrc":"6073:37:10","nodeType":"YulAssignment","src":"6073:37:10","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:10","nodeType":"YulIdentifier","src":"6092:11:10"},{"name":"twos","nativeSrc":"6105:4:10","nodeType":"YulIdentifier","src":"6105:4:10"}],"functionName":{"name":"div","nativeSrc":"6088:3:10","nodeType":"YulIdentifier","src":"6088:3:10"},"nativeSrc":"6088:22:10","nodeType":"YulFunctionCall","src":"6088:22:10"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:10","nodeType":"YulIdentifier","src":"6073:11:10"}]},{"nativeSrc":"6177:25:10","nodeType":"YulAssignment","src":"6177:25:10","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:10","nodeType":"YulIdentifier","src":"6190:5:10"},{"name":"twos","nativeSrc":"6197:4:10","nodeType":"YulIdentifier","src":"6197:4:10"}],"functionName":{"name":"div","nativeSrc":"6186:3:10","nodeType":"YulIdentifier","src":"6186:3:10"},"nativeSrc":"6186:16:10","nodeType":"YulFunctionCall","src":"6186:16:10"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:10","nodeType":"YulIdentifier","src":"6177:5:10"}]},{"nativeSrc":"6317:39:10","nodeType":"YulAssignment","src":"6317:39:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:10","nodeType":"YulLiteral","src":"6337:1:10","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:10","nodeType":"YulIdentifier","src":"6340:4:10"}],"functionName":{"name":"sub","nativeSrc":"6333:3:10","nodeType":"YulIdentifier","src":"6333:3:10"},"nativeSrc":"6333:12:10","nodeType":"YulFunctionCall","src":"6333:12:10"},{"name":"twos","nativeSrc":"6347:4:10","nodeType":"YulIdentifier","src":"6347:4:10"}],"functionName":{"name":"div","nativeSrc":"6329:3:10","nodeType":"YulIdentifier","src":"6329:3:10"},"nativeSrc":"6329:23:10","nodeType":"YulFunctionCall","src":"6329:23:10"},{"kind":"number","nativeSrc":"6354:1:10","nodeType":"YulLiteral","src":"6354:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:10","nodeType":"YulIdentifier","src":"6325:3:10"},"nativeSrc":"6325:31:10","nodeType":"YulFunctionCall","src":"6325:31:10"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:10","nodeType":"YulIdentifier","src":"6317:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1997,"isOffset":false,"isSlot":false,"src":"6073:11:10","valueSize":1},{"declaration":1997,"isOffset":false,"isSlot":false,"src":"6092:11:10","valueSize":1},{"declaration":2003,"isOffset":false,"isSlot":false,"src":"6177:5:10","valueSize":1},{"declaration":2003,"isOffset":false,"isSlot":false,"src":"6190:5:10","valueSize":1},{"declaration":2034,"isOffset":false,"isSlot":false,"src":"6105:4:10","valueSize":1},{"declaration":2034,"isOffset":false,"isSlot":false,"src":"6197:4:10","valueSize":1},{"declaration":2034,"isOffset":false,"isSlot":false,"src":"6317:4:10","valueSize":1},{"declaration":2034,"isOffset":false,"isSlot":false,"src":"6340:4:10","valueSize":1},{"declaration":2034,"isOffset":false,"isSlot":false,"src":"6347:4:10","valueSize":1}],"id":2042,"nodeType":"InlineAssembly","src":"5999:371:10"},{"expression":{"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2043,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"6436:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2044,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"6445:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2045,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"6453:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2048,"nodeType":"ExpressionStatement","src":"6436:21:10"},{"assignments":[2050],"declarations":[{"constant":false,"id":2050,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:10","nodeType":"VariableDeclaration","scope":2114,"src":"6775:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2057,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2052,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"6798:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:10"},{"expression":{"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2058,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7031:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2060,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"7046:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2061,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7060:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2065,"nodeType":"ExpressionStatement","src":"7031:36:10"},{"expression":{"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2066,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7100:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2068,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"7115:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2069,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7129:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2073,"nodeType":"ExpressionStatement","src":"7100:36:10"},{"expression":{"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2074,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7170:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2076,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"7185:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2077,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7199:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2081,"nodeType":"ExpressionStatement","src":"7170:36:10"},{"expression":{"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2082,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7240:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2084,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"7255:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2085,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7269:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2089,"nodeType":"ExpressionStatement","src":"7240:36:10"},{"expression":{"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2090,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7310:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2092,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"7325:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2093,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7339:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2097,"nodeType":"ExpressionStatement","src":"7310:36:10"},{"expression":{"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2098,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7381:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2100,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"7396:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2101,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7410:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2105,"nodeType":"ExpressionStatement","src":"7381:36:10"},{"expression":{"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"7851:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2107,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"7860:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2108,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7868:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2111,"nodeType":"ExpressionStatement","src":"7851:24:10"},{"expression":{"id":2112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"7896:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2001,"id":2113,"nodeType":"Return","src":"7889:13:10"}]}]},"documentation":{"id":1991,"nodeType":"StructuredDocumentation","src":"3485:313:10","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2116,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:10","nodeType":"FunctionDefinition","parameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"x","nameLocation":"3827:1:10","nodeType":"VariableDeclaration","scope":2116,"src":"3819:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1992,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1995,"mutability":"mutable","name":"y","nameLocation":"3838:1:10","nodeType":"VariableDeclaration","scope":2116,"src":"3830:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1994,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1997,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:10","nodeType":"VariableDeclaration","scope":2116,"src":"3841:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:10"},"returnParameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"result","nameLocation":"3893:6:10","nodeType":"VariableDeclaration","scope":2116,"src":"3885:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1999,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:10"},"scope":2782,"src":"3803:4116:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2158,"nodeType":"Block","src":"8161:192:10","statements":[{"assignments":[2132],"declarations":[{"constant":false,"id":2132,"mutability":"mutable","name":"result","nameLocation":"8179:6:10","nodeType":"VariableDeclaration","scope":2158,"src":"8171:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2138,"initialValue":{"arguments":[{"id":2134,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"8195:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2135,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"8198:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2136,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"8201:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2133,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2116,2159],"referencedDeclaration":2116,"src":"8188:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2140,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"8244:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}],"id":2139,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"8227:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1739_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2143,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"8264:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2144,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"8267:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2145,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"8270:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2142,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2155,"nodeType":"IfStatement","src":"8223:101:10","trueBody":{"id":2154,"nodeType":"Block","src":"8288:36:10","statements":[{"expression":{"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2150,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"8302:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2153,"nodeType":"ExpressionStatement","src":"8302:11:10"}]}},{"expression":{"id":2156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"8340:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2130,"id":2157,"nodeType":"Return","src":"8333:13:10"}]},"documentation":{"id":2117,"nodeType":"StructuredDocumentation","src":"7925:121:10","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2159,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:10","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"x","nameLocation":"8075:1:10","nodeType":"VariableDeclaration","scope":2159,"src":"8067:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2118,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2121,"mutability":"mutable","name":"y","nameLocation":"8086:1:10","nodeType":"VariableDeclaration","scope":2159,"src":"8078:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:10","nodeType":"VariableDeclaration","scope":2159,"src":"8089:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:10","nodeType":"VariableDeclaration","scope":2159,"src":"8110:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"},"typeName":{"id":2125,"nodeType":"UserDefinedTypeName","pathNode":{"id":2124,"name":"Rounding","nameLocations":["8110:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1739,"src":"8110:8:10"},"referencedDeclaration":1739,"src":"8110:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:10"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2159,"src":"8152:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:10"},"scope":2782,"src":"8051:302:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2270,"nodeType":"Block","src":"8644:1585:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2167,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"8658:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2173,"nodeType":"IfStatement","src":"8654:45:10","trueBody":{"id":2172,"nodeType":"Block","src":"8666:33:10","statements":[{"expression":{"hexValue":"30","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2166,"id":2171,"nodeType":"Return","src":"8680:8:10"}]}},{"assignments":[2175],"declarations":[{"constant":false,"id":2175,"mutability":"mutable","name":"result","nameLocation":"9386:6:10","nodeType":"VariableDeclaration","scope":2270,"src":"9378:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2174,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2184,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2178,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"9406:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2177,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2438,2473],"referencedDeclaration":2438,"src":"9401:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:10"},{"id":2269,"nodeType":"UncheckedBlock","src":"9815:408:10","statements":[{"expression":{"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2185,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"9839:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2186,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"9849:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2187,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"9858:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2188,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"9862:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2191,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2195,"nodeType":"ExpressionStatement","src":"9839:35:10"},{"expression":{"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2196,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"9888:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"9898:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2198,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"9907:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2199,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"9911:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2206,"nodeType":"ExpressionStatement","src":"9888:35:10"},{"expression":{"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2207,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"9937:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"9947:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2209,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"9956:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2210,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"9960:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2217,"nodeType":"ExpressionStatement","src":"9937:35:10"},{"expression":{"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2218,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"9986:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2219,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"9996:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2220,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"10005:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2221,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"10009:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2228,"nodeType":"ExpressionStatement","src":"9986:35:10"},{"expression":{"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"10035:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"10045:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"10054:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"10058:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2239,"nodeType":"ExpressionStatement","src":"10035:35:10"},{"expression":{"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"10084:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"10094:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2242,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"10103:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2243,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"10107:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2250,"nodeType":"ExpressionStatement","src":"10084:35:10"},{"expression":{"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2251,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"10133:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"10143:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2253,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"10152:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"10156:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2261,"nodeType":"ExpressionStatement","src":"10133:35:10"},{"expression":{"arguments":[{"id":2263,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"10193:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2264,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"10201:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2265,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"10205:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2262,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"10189:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2166,"id":2268,"nodeType":"Return","src":"10182:30:10"}]}]},"documentation":{"id":2160,"nodeType":"StructuredDocumentation","src":"8359:223:10","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2271,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:10","nodeType":"FunctionDefinition","parameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"a","nameLocation":"8609:1:10","nodeType":"VariableDeclaration","scope":2271,"src":"8601:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:10"},"returnParameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2271,"src":"8635:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:10"},"scope":2782,"src":"8587:1642:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2305,"nodeType":"Block","src":"10405:164:10","statements":[{"id":2304,"nodeType":"UncheckedBlock","src":"10415:148:10","statements":[{"assignments":[2283],"declarations":[{"constant":false,"id":2283,"mutability":"mutable","name":"result","nameLocation":"10447:6:10","nodeType":"VariableDeclaration","scope":2304,"src":"10439:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2287,"initialValue":{"arguments":[{"id":2285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"10461:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2284,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2271,2306],"referencedDeclaration":2271,"src":"10456:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2288,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"10484:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2290,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"10511:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}],"id":2289,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"10494:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1739_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2292,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"10524:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"10533:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"10542:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:10","trueExpression":{"hexValue":"31","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2281,"id":2303,"nodeType":"Return","src":"10477:75:10"}]}]},"documentation":{"id":2272,"nodeType":"StructuredDocumentation","src":"10235:89:10","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2306,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:10","nodeType":"FunctionDefinition","parameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"a","nameLocation":"10351:1:10","nodeType":"VariableDeclaration","scope":2306,"src":"10343:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:10","nodeType":"VariableDeclaration","scope":2306,"src":"10354:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"},"typeName":{"id":2276,"nodeType":"UserDefinedTypeName","pathNode":{"id":2275,"name":"Rounding","nameLocations":["10354:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1739,"src":"10354:8:10"},"referencedDeclaration":1739,"src":"10354:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:10"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2306,"src":"10396:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:10"},"scope":2782,"src":"10329:240:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2437,"nodeType":"Block","src":"10760:922:10","statements":[{"assignments":[2315],"declarations":[{"constant":false,"id":2315,"mutability":"mutable","name":"result","nameLocation":"10778:6:10","nodeType":"VariableDeclaration","scope":2437,"src":"10770:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2317,"initialValue":{"hexValue":"30","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:10"},{"id":2434,"nodeType":"UncheckedBlock","src":"10798:855:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"10826:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2332,"nodeType":"IfStatement","src":"10822:99:10","trueBody":{"id":2331,"nodeType":"Block","src":"10844:77:10","statements":[{"expression":{"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"10862:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2326,"nodeType":"ExpressionStatement","src":"10862:13:10"},{"expression":{"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2327,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"10893:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2330,"nodeType":"ExpressionStatement","src":"10893:13:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"10938:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2347,"nodeType":"IfStatement","src":"10934:96:10","trueBody":{"id":2346,"nodeType":"Block","src":"10955:75:10","statements":[{"expression":{"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"10973:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2341,"nodeType":"ExpressionStatement","src":"10973:12:10"},{"expression":{"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2342,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"11003:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2345,"nodeType":"ExpressionStatement","src":"11003:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11047:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2362,"nodeType":"IfStatement","src":"11043:96:10","trueBody":{"id":2361,"nodeType":"Block","src":"11064:75:10","statements":[{"expression":{"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11082:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2356,"nodeType":"ExpressionStatement","src":"11082:12:10"},{"expression":{"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2357,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"11112:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2360,"nodeType":"ExpressionStatement","src":"11112:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11156:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2377,"nodeType":"IfStatement","src":"11152:96:10","trueBody":{"id":2376,"nodeType":"Block","src":"11173:75:10","statements":[{"expression":{"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11191:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2371,"nodeType":"ExpressionStatement","src":"11191:12:10"},{"expression":{"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"11221:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2375,"nodeType":"ExpressionStatement","src":"11221:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11265:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2392,"nodeType":"IfStatement","src":"11261:93:10","trueBody":{"id":2391,"nodeType":"Block","src":"11281:73:10","statements":[{"expression":{"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11299:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2386,"nodeType":"ExpressionStatement","src":"11299:11:10"},{"expression":{"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2387,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"11328:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2390,"nodeType":"ExpressionStatement","src":"11328:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11371:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2407,"nodeType":"IfStatement","src":"11367:93:10","trueBody":{"id":2406,"nodeType":"Block","src":"11387:73:10","statements":[{"expression":{"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11405:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2401,"nodeType":"ExpressionStatement","src":"11405:11:10"},{"expression":{"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2402,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"11434:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2405,"nodeType":"ExpressionStatement","src":"11434:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11477:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2422,"nodeType":"IfStatement","src":"11473:93:10","trueBody":{"id":2421,"nodeType":"Block","src":"11493:73:10","statements":[{"expression":{"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11511:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2416,"nodeType":"ExpressionStatement","src":"11511:11:10"},{"expression":{"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2417,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"11540:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2420,"nodeType":"ExpressionStatement","src":"11540:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11583:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2433,"nodeType":"IfStatement","src":"11579:64:10","trueBody":{"id":2432,"nodeType":"Block","src":"11599:44:10","statements":[{"expression":{"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"11617:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2431,"nodeType":"ExpressionStatement","src":"11617:11:10"}]}}]},{"expression":{"id":2435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"11669:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2313,"id":2436,"nodeType":"Return","src":"11662:13:10"}]},"documentation":{"id":2307,"nodeType":"StructuredDocumentation","src":"10575:119:10","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2438,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:10","nodeType":"FunctionDefinition","parameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"value","nameLocation":"10721:5:10","nodeType":"VariableDeclaration","scope":2438,"src":"10713:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:10"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2438,"src":"10751:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:10"},"scope":2782,"src":"10699:983:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2472,"nodeType":"Block","src":"11915:168:10","statements":[{"id":2471,"nodeType":"UncheckedBlock","src":"11925:152:10","statements":[{"assignments":[2450],"declarations":[{"constant":false,"id":2450,"mutability":"mutable","name":"result","nameLocation":"11957:6:10","nodeType":"VariableDeclaration","scope":2471,"src":"11949:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2449,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2454,"initialValue":{"arguments":[{"id":2452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"11971:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2451,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2438,2473],"referencedDeclaration":2438,"src":"11966:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2455,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"11998:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2457,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"12025:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}],"id":2456,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"12008:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1739_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"12043:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"12052:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:10","trueExpression":{"hexValue":"31","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2468,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2448,"id":2470,"nodeType":"Return","src":"11991:75:10"}]}]},"documentation":{"id":2439,"nodeType":"StructuredDocumentation","src":"11688:142:10","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2473,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:10","nodeType":"FunctionDefinition","parameters":{"id":2445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"value","nameLocation":"11857:5:10","nodeType":"VariableDeclaration","scope":2473,"src":"11849:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2444,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:10","nodeType":"VariableDeclaration","scope":2473,"src":"11864:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"},"typeName":{"id":2443,"nodeType":"UserDefinedTypeName","pathNode":{"id":2442,"name":"Rounding","nameLocations":["11864:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1739,"src":"11864:8:10"},"referencedDeclaration":1739,"src":"11864:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:10"},"returnParameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2473,"src":"11906:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:10"},"scope":2782,"src":"11835:248:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2601,"nodeType":"Block","src":"12276:854:10","statements":[{"assignments":[2482],"declarations":[{"constant":false,"id":2482,"mutability":"mutable","name":"result","nameLocation":"12294:6:10","nodeType":"VariableDeclaration","scope":2601,"src":"12286:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2484,"initialValue":{"hexValue":"30","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:10"},{"id":2598,"nodeType":"UncheckedBlock","src":"12314:787:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"12342:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2501,"nodeType":"IfStatement","src":"12338:103:10","trueBody":{"id":2500,"nodeType":"Block","src":"12361:80:10","statements":[{"expression":{"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"12379:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2495,"nodeType":"ExpressionStatement","src":"12379:17:10"},{"expression":{"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2496,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"12414:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2499,"nodeType":"ExpressionStatement","src":"12414:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"12458:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2518,"nodeType":"IfStatement","src":"12454:103:10","trueBody":{"id":2517,"nodeType":"Block","src":"12477:80:10","statements":[{"expression":{"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"12495:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2512,"nodeType":"ExpressionStatement","src":"12495:17:10"},{"expression":{"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"12530:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2516,"nodeType":"ExpressionStatement","src":"12530:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"12574:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2535,"nodeType":"IfStatement","src":"12570:103:10","trueBody":{"id":2534,"nodeType":"Block","src":"12593:80:10","statements":[{"expression":{"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"12611:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2529,"nodeType":"ExpressionStatement","src":"12611:17:10"},{"expression":{"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2530,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"12646:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2533,"nodeType":"ExpressionStatement","src":"12646:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"12690:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2552,"nodeType":"IfStatement","src":"12686:100:10","trueBody":{"id":2551,"nodeType":"Block","src":"12708:78:10","statements":[{"expression":{"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"12726:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2546,"nodeType":"ExpressionStatement","src":"12726:16:10"},{"expression":{"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2547,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"12760:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2550,"nodeType":"ExpressionStatement","src":"12760:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"12803:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2569,"nodeType":"IfStatement","src":"12799:100:10","trueBody":{"id":2568,"nodeType":"Block","src":"12821:78:10","statements":[{"expression":{"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"12839:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2563,"nodeType":"ExpressionStatement","src":"12839:16:10"},{"expression":{"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"12873:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2567,"nodeType":"ExpressionStatement","src":"12873:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"12916:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2586,"nodeType":"IfStatement","src":"12912:100:10","trueBody":{"id":2585,"nodeType":"Block","src":"12934:78:10","statements":[{"expression":{"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"12952:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2580,"nodeType":"ExpressionStatement","src":"12952:16:10"},{"expression":{"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"12986:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2584,"nodeType":"ExpressionStatement","src":"12986:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"13029:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2597,"nodeType":"IfStatement","src":"13025:66:10","trueBody":{"id":2596,"nodeType":"Block","src":"13047:44:10","statements":[{"expression":{"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"13065:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2595,"nodeType":"ExpressionStatement","src":"13065:11:10"}]}}]},{"expression":{"id":2599,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"13117:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2480,"id":2600,"nodeType":"Return","src":"13110:13:10"}]},"documentation":{"id":2474,"nodeType":"StructuredDocumentation","src":"12089:120:10","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2602,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:10","nodeType":"FunctionDefinition","parameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"value","nameLocation":"12237:5:10","nodeType":"VariableDeclaration","scope":2602,"src":"12229:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:10"},"returnParameters":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2602,"src":"12267:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:10"},"scope":2782,"src":"12214:916:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2636,"nodeType":"Block","src":"13365:170:10","statements":[{"id":2635,"nodeType":"UncheckedBlock","src":"13375:154:10","statements":[{"assignments":[2614],"declarations":[{"constant":false,"id":2614,"mutability":"mutable","name":"result","nameLocation":"13407:6:10","nodeType":"VariableDeclaration","scope":2635,"src":"13399:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2613,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2618,"initialValue":{"arguments":[{"id":2616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"13422:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2615,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2602,2637],"referencedDeclaration":2602,"src":"13416:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2619,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"13449:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2621,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"13476:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}],"id":2620,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"13459:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1739_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2624,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"13495:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"13504:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:10","trueExpression":{"hexValue":"31","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2612,"id":2634,"nodeType":"Return","src":"13442:76:10"}]}]},"documentation":{"id":2603,"nodeType":"StructuredDocumentation","src":"13136:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2637,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:10","nodeType":"FunctionDefinition","parameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"value","nameLocation":"13307:5:10","nodeType":"VariableDeclaration","scope":2637,"src":"13299:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2608,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:10","nodeType":"VariableDeclaration","scope":2637,"src":"13314:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"},"typeName":{"id":2607,"nodeType":"UserDefinedTypeName","pathNode":{"id":2606,"name":"Rounding","nameLocations":["13314:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1739,"src":"13314:8:10"},"referencedDeclaration":1739,"src":"13314:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:10"},"returnParameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2637,"src":"13356:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:10"},"scope":2782,"src":"13284:251:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2723,"nodeType":"Block","src":"13855:600:10","statements":[{"assignments":[2646],"declarations":[{"constant":false,"id":2646,"mutability":"mutable","name":"result","nameLocation":"13873:6:10","nodeType":"VariableDeclaration","scope":2723,"src":"13865:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2645,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2648,"initialValue":{"hexValue":"30","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:10"},{"id":2720,"nodeType":"UncheckedBlock","src":"13893:533:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"13921:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2663,"nodeType":"IfStatement","src":"13917:98:10","trueBody":{"id":2662,"nodeType":"Block","src":"13939:76:10","statements":[{"expression":{"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"13957:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2657,"nodeType":"ExpressionStatement","src":"13957:13:10"},{"expression":{"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2658,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"13988:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2661,"nodeType":"ExpressionStatement","src":"13988:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"14032:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2678,"nodeType":"IfStatement","src":"14028:95:10","trueBody":{"id":2677,"nodeType":"Block","src":"14049:74:10","statements":[{"expression":{"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"14067:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2672,"nodeType":"ExpressionStatement","src":"14067:12:10"},{"expression":{"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2673,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"14097:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2676,"nodeType":"ExpressionStatement","src":"14097:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"14140:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2693,"nodeType":"IfStatement","src":"14136:95:10","trueBody":{"id":2692,"nodeType":"Block","src":"14157:74:10","statements":[{"expression":{"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"14175:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2687,"nodeType":"ExpressionStatement","src":"14175:12:10"},{"expression":{"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2688,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"14205:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2691,"nodeType":"ExpressionStatement","src":"14205:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"14248:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2708,"nodeType":"IfStatement","src":"14244:95:10","trueBody":{"id":2707,"nodeType":"Block","src":"14265:74:10","statements":[{"expression":{"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"14283:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2702,"nodeType":"ExpressionStatement","src":"14283:12:10"},{"expression":{"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2703,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"14313:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2706,"nodeType":"ExpressionStatement","src":"14313:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"14356:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2719,"nodeType":"IfStatement","src":"14352:64:10","trueBody":{"id":2718,"nodeType":"Block","src":"14372:44:10","statements":[{"expression":{"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"14390:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2717,"nodeType":"ExpressionStatement","src":"14390:11:10"}]}}]},{"expression":{"id":2721,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"14442:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2644,"id":2722,"nodeType":"Return","src":"14435:13:10"}]},"documentation":{"id":2638,"nodeType":"StructuredDocumentation","src":"13541:246:10","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2724,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:10","nodeType":"FunctionDefinition","parameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"value","nameLocation":"13816:5:10","nodeType":"VariableDeclaration","scope":2724,"src":"13808:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:10"},"returnParameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2724,"src":"13846:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:10"},"scope":2782,"src":"13792:663:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2761,"nodeType":"Block","src":"14692:177:10","statements":[{"id":2760,"nodeType":"UncheckedBlock","src":"14702:161:10","statements":[{"assignments":[2736],"declarations":[{"constant":false,"id":2736,"mutability":"mutable","name":"result","nameLocation":"14734:6:10","nodeType":"VariableDeclaration","scope":2760,"src":"14726:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2740,"initialValue":{"arguments":[{"id":2738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"14750:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2737,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2724,2762],"referencedDeclaration":2724,"src":"14743:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2741,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"14777:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2743,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"14804:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}],"id":2742,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"14787:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1739_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2746,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"14823:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"14838:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:10","trueExpression":{"hexValue":"31","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2734,"id":2759,"nodeType":"Return","src":"14770:82:10"}]}]},"documentation":{"id":2725,"nodeType":"StructuredDocumentation","src":"14461:144:10","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2762,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:10","nodeType":"FunctionDefinition","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2727,"mutability":"mutable","name":"value","nameLocation":"14634:5:10","nodeType":"VariableDeclaration","scope":2762,"src":"14626:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2726,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2730,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:10","nodeType":"VariableDeclaration","scope":2762,"src":"14641:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"},"typeName":{"id":2729,"nodeType":"UserDefinedTypeName","pathNode":{"id":2728,"name":"Rounding","nameLocations":["14641:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1739,"src":"14641:8:10"},"referencedDeclaration":1739,"src":"14641:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:10"},"returnParameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2762,"src":"14683:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:10"},"scope":2782,"src":"14610:259:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2780,"nodeType":"Block","src":"15067:48:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2773,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"15090:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}],"id":2772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2771,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:10","typeDescriptions":{}}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2770,"id":2779,"nodeType":"Return","src":"15077:31:10"}]},"documentation":{"id":2763,"nodeType":"StructuredDocumentation","src":"14875:113:10","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":2781,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:10","nodeType":"FunctionDefinition","parameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:10","nodeType":"VariableDeclaration","scope":2781,"src":"15019:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"},"typeName":{"id":2765,"nodeType":"UserDefinedTypeName","pathNode":{"id":2764,"name":"Rounding","nameLocations":["15019:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1739,"src":"15019:8:10"},"referencedDeclaration":1739,"src":"15019:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1739","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:10"},"returnParameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2781,"src":"15061:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2768,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:10"},"scope":2782,"src":"14993:122:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2783,"src":"203:14914:10","usedErrors":[1734],"usedEvents":[]}],"src":"103:15015:10"},"id":10},"contracts/Tokens/Token.sol":{"ast":{"absolutePath":"contracts/Tokens/Token.sol","exportedSymbols":{"ERC1155":[1188],"Token":[2836]},"id":2837,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2784,"literals":["solidity","^","0.8",".14"],"nodeType":"PragmaDirective","src":"32:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":2786,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2837,"sourceUnit":1189,"src":"58:74:11","symbolAliases":[{"foreign":{"id":2785,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"66:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2787,"name":"ERC1155","nameLocations":["152:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1188,"src":"152:7:11"},"id":2788,"nodeType":"InheritanceSpecifier","src":"152:7:11"}],"canonicalName":"Token","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2836,"linearizedBaseContracts":[2836,1188,136,1369,1311,1716,1728,1582],"name":"Token","nameLocation":"143:5:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2796,"nodeType":"Block","src":"208:2:11","statements":[]},"id":2797,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2793,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"204:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":2794,"kind":"baseConstructorSpecifier","modifierName":{"id":2792,"name":"ERC1155","nameLocations":["196:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1188,"src":"196:7:11"},"nodeType":"ModifierInvocation","src":"196:12:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2790,"mutability":"mutable","name":"uri","nameLocation":"191:3:11","nodeType":"VariableDeclaration","scope":2797,"src":"177:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2789,"name":"string","nodeType":"ElementaryTypeName","src":"177:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"176:19:11"},"returnParameters":{"id":2795,"nodeType":"ParameterList","parameters":[],"src":"208:0:11"},"scope":2836,"src":"165:45:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2814,"nodeType":"Block","src":"355:50:11","statements":[{"expression":{"arguments":[{"expression":{"id":2807,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"371:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"375:6:11","memberName":"sender","nodeType":"MemberAccess","src":"371:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2809,"name":"bin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"382:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2810,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"386:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2811,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"393:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2806,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"365:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"365:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2813,"nodeType":"ExpressionStatement","src":"365:33:11"}]},"functionSelector":"f737e496","id":2815,"implemented":true,"kind":"function","modifiers":[],"name":"recharge","nameLocation":"252:8:11","nodeType":"FunctionDefinition","parameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"bin","nameLocation":"278:3:11","nodeType":"VariableDeclaration","scope":2815,"src":"270:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2798,"name":"uint256","nodeType":"ElementaryTypeName","src":"270:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2801,"mutability":"mutable","name":"amount","nameLocation":"299:6:11","nodeType":"VariableDeclaration","scope":2815,"src":"291:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2800,"name":"uint256","nodeType":"ElementaryTypeName","src":"291:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2803,"mutability":"mutable","name":"data","nameLocation":"338:4:11","nodeType":"VariableDeclaration","scope":2815,"src":"325:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2802,"name":"bytes","nodeType":"ElementaryTypeName","src":"325:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"260:88:11"},"returnParameters":{"id":2805,"nodeType":"ParameterList","parameters":[],"src":"355:0:11"},"scope":2836,"src":"243:162:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2834,"nodeType":"Block","src":"580:55:11","statements":[{"expression":{"arguments":[{"expression":{"id":2827,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"601:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"605:6:11","memberName":"sender","nodeType":"MemberAccess","src":"601:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2829,"name":"bin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"612:3:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2830,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"616:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2831,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"623:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2826,"name":"_mintBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"590:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"590:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2833,"nodeType":"ExpressionStatement","src":"590:38:11"}]},"functionSelector":"efaa5018","id":2835,"implemented":true,"kind":"function","modifiers":[],"name":"rechargeBatch","nameLocation":"456:13:11","nodeType":"FunctionDefinition","parameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"mutability":"mutable","name":"bin","nameLocation":"496:3:11","nodeType":"VariableDeclaration","scope":2835,"src":"479:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2816,"name":"uint256","nodeType":"ElementaryTypeName","src":"479:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2817,"nodeType":"ArrayTypeName","src":"479:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2821,"mutability":"mutable","name":"amount","nameLocation":"526:6:11","nodeType":"VariableDeclaration","scope":2835,"src":"509:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2819,"name":"uint256","nodeType":"ElementaryTypeName","src":"509:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2820,"nodeType":"ArrayTypeName","src":"509:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2823,"mutability":"mutable","name":"data","nameLocation":"563:4:11","nodeType":"VariableDeclaration","scope":2835,"src":"550:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2822,"name":"bytes","nodeType":"ElementaryTypeName","src":"550:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"469:104:11"},"returnParameters":{"id":2825,"nodeType":"ParameterList","parameters":[],"src":"580:0:11"},"scope":2836,"src":"447:188:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2837,"src":"134:504:11","usedErrors":[101,106,111,118,123,128,135],"usedEvents":[1208,1223,1232,1239]}],"src":"32:606:11"},"id":11}},"contracts":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.  admin => manager\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}. \"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"stateVariables\":{\"_balances\":{\"details\":\"mint\\u548ctransfer\\u7684\\u533a\\u522b\\uff1a mint\\u662f _balances[to]+=value transfer\\u662f _balances[to]+=value , _balances[from]-=value \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x3b4293fa6f4694fd08fb2317d18460c86611b655a0a42a71b3ea2017bf85d3ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76df19bdaf09155ffe8a2e648c8687c4eed84e386a796d86a8fe3fdec0caac24\",\"dweb:/ipfs/Qmdwys5EWPr1tus2JSFuyUzzEoJrLzHSisWa5YM8GaHrDa\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea264697066735822122043286e1fd6b40e2d5c6f2f64dc2581f30a806bb2fc458fb2ac2148228aeba13a64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x28 PUSH15 0x1FD6B40E2D5C6F2F64DC2581F30A80 PUSH12 0xB2FC458FB2AC2148228AEBA1 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"276:4526:5:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122043286e1fd6b40e2d5c6f2f64dc2581f30a806bb2fc458fb2ac2148228aeba13a64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x28 PUSH15 0x1FD6B40E2D5C6F2F64DC2581F30A80 PUSH12 0xB2FC458FB2AC2148228AEBA1 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"276:4526:5:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea264697066735822122089b9c5b72d034b44c52c06422cb811c2009fd107b4cc46e12ba29a35c35120a264736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xB9 0xC5 0xB7 0x2D SUB 0x4B PREVRANDAO 0xC5 0x2C MOD TIMESTAMP 0x2C 0xB8 GT 0xC2 STOP SWAP16 0xD1 SMOD 0xB4 0xCC CHAINID 0xE1 0x2B LOG2 SWAP11 CALLDATALOAD 0xC3 MLOAD KECCAK256 LOG2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:7:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122089b9c5b72d034b44c52c06422cb811c2009fd107b4cc46e12ba29a35c35120a264736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xB9 0xC5 0xB7 0x2D SUB 0x4B PREVRANDAO 0xC5 0x2C MOD TIMESTAMP 0x2C 0xB8 GT 0xC2 STOP SWAP16 0xD1 SMOD 0xB4 0xCC CHAINID 0xE1 0x2B LOG2 SWAP11 CALLDATALOAD 0xC3 MLOAD KECCAK256 LOG2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:7:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea264697066735822122002f1b3331e5600b32311c7baa03e3e489f2856c1ba53e3fe9e277f4e791e7d5964736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL CALL 0xB3 CALLER 0x1E JUMP STOP 0xB3 0x23 GT 0xC7 0xBA LOG0 RETURNDATACOPY RETURNDATACOPY BASEFEE SWAP16 0x28 JUMP 0xC1 0xBA MSTORE8 0xE3 INVALID SWAP15 0x27 PUSH32 0x4E791E7D5964736F6C6343000818003300000000000000000000000000000000 ","sourceMap":"203:14914:10:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122002f1b3331e5600b32311c7baa03e3e489f2856c1ba53e3fe9e277f4e791e7d5964736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL CALL 0xB3 CALLER 0x1E JUMP STOP 0xB3 0x23 GT 0xC7 0xBA LOG0 RETURNDATACOPY RETURNDATACOPY BASEFEE SWAP16 0x28 JUMP 0xC1 0xBA MSTORE8 0xE3 INVALID SWAP15 0x27 PUSH32 0x4E791E7D5964736F6C6343000818003300000000000000000000000000000000 ","sourceMap":"203:14914:10:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"contracts/Tokens/Token.sol":{"Token":{"abi":[{"inputs":[{"internalType":"string","name":"uri","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"bin","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"recharge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"bin","type":"uint256[]"},{"internalType":"uint256[]","name":"amount","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"rechargeBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_available_length_string_fromMemory":{"entryPoint":206,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_memory_ptr_fromMemory":{"entryPoint":260,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":115,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_string":{"entryPoint":140,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":566,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":531,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_ERC1155":{"entryPoint":null,"id":198,"parameterSlots":1,"returnSlots":0},"constructor_Token":{"entryPoint":368,"id":2797,"parameterSlots":1,"returnSlots":0},"convert_uint256_to_uint256":{"entryPoint":452,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_Token":{"entryPoint":333,"id":null,"parameterSlots":0,"returnSlots":1},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":649,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":169,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_ceil":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":406,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":75,"id":null,"parameterSlots":2,"returnSlots":0},"fun_setURI":{"entryPoint":886,"id":811,"parameterSlots":1,"returnSlots":0},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":384,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":53,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_uint256":{"entryPoint":517,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_offsett_string_to_string":{"entryPoint":874,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":468,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040523462000030576200001e620000186200014d565b62000170565b60405161147262000384823961147290f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200006d57604052565b62000035565b906200008a6200008260405190565b92836200004b565b565b6001600160401b0381116200006d57602090601f01601f19160190565b60005b838110620000bd5750506000910152565b8181015183820152602001620000ac565b90929192620000e7620000e1826200008c565b62000073565b938185528183011162000030576200008a916020850190620000a9565b9080601f83011215620000305781516200012192602001620000ce565b90565b90602082820312620000305781516001600160401b038111620000305762000121920162000104565b62000121620017f680380380620001648162000073565b92833981019062000124565b6200008a906200008a9062000376565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015620001b9575b6020831014620001b357565b62000180565b91607f1691620001a7565b6200012162000121620001219290565b9190620001e9620001216200020193620001c4565b90835460001960089290920291821b191691901b1790565b9055565b6200008a91600091620001d4565b8181106200021f575050565b806200022f600060019362000205565b0162000213565b9190601f81116200024657505050565b6200025a6200008a93600052602060002090565b906020601f8401819004830193106200027e575b6020601f90910104019062000213565b90915081906200026e565b9062000293815190565b906001600160401b0382116200006d57620002bb82620002b4855462000196565b8562000236565b602090601f8311600114620002fa5762000201929160009183620002ee575b5050600019600883021c1916906002021790565b015190503880620002da565b601f198316916200031085600052602060002090565b9260005b818110620003515750916002939185600196941062000337575b50505002019055565b01516000196008601f8516021c191690553880806200032e565b9193602060018192878701518155019501920162000314565b906200008a9162000289565b6200008a9060026200036a56fe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e146100b157806301ffc9a7146100ac5780630e89341c146100a75780632eb2c2d6146100a25780634e1273f41461009d578063a22cb46514610098578063e985e9c514610093578063efaa50181461008e578063f242432a146100895763f737e496036100d757610713565b6106d4565b61067a565b6105f6565b6105ba565b61055a565b610421565b610230565b610182565b610121565b6001600160a01b031690565b90565b6001600160a01b0381165b036100d757565b600080fd5b905035906100e9826100c5565b565b806100d0565b905035906100e9826100eb565b91906040838203126100d7576100c290602061011a82866100dc565b94016100f1565b346100d75761014d61013d6101373660046100fe565b90610792565b6040519182918290815260200190565b0390f35b6001600160e01b031981166100d0565b905035906100e982610151565b906020828203126100d7576100c291610161565b346100d75761014d61019d61019836600461016e565b6107b7565b6040515b91829182901515815260200190565b906020828203126100d7576100c2916100f1565b60005b8381106101d75750506000910152565b81810151838201526020016101c7565b61020861021160209361021b936101fc815190565b80835293849260200190565b958691016101c4565b601f01601f191690565b0190565b60208082526100c2929101906101e7565b346100d75761014d61024b6102463660046101b0565b6108fa565b6040519182918261021f565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761028f57604052565b610257565b906100e96102a160405190565b928361026d565b67ffffffffffffffff811161028f5760208091020190565b909291926102d56102d0826102a8565b610294565b93818552602080860192028301928184116100d757915b8383106102f95750505050565b6020809161030784866100f1565b8152019201916102ec565b9080601f830112156100d7578160206100c2933591016102c0565b67ffffffffffffffff811161028f57602090601f01601f19160190565b90826000939282370152565b909291926103666102d08261032d565b93818552818301116100d7576100e991602085019061034a565b9080601f830112156100d7578160206100c293359101610356565b91909160a0818403126100d7576103b283826100dc565b926103c081602084016100dc565b92604083013567ffffffffffffffff81116100d757826103e1918501610312565b92606081013567ffffffffffffffff81116100d75783610402918301610312565b92608082013567ffffffffffffffff81116100d7576100c29201610380565b346100d75761043d61043436600461039b565b9392909261091f565b604051005b909291926104526102d0826102a8565b93818552602080860192028301928184116100d757915b8383106104765750505050565b6020809161048484866100dc565b815201920191610469565b9080601f830112156100d7578160206100c293359101610442565b9190916040818403126100d757803567ffffffffffffffff81116100d757836104d491830161048f565b92602082013567ffffffffffffffff81116100d7576100c29201610312565b9061051361050c610502845190565b8084529260200190565b9260200190565b9060005b8181106105245750505090565b90919261054161053a6001928651815260200190565b9460200190565b929101610517565b60208082526100c2929101906104f3565b346100d75761014d6105766105703660046104aa565b90610a0c565b60405191829182610549565b8015156100d0565b905035906100e982610582565b91906040838203126100d7576100c29060206105b382866100dc565b940161058a565b346100d75761043d6105cd366004610597565b90610abf565b91906040838203126100d7576100c29060206105ef82866100dc565b94016100dc565b346100d75761014d61019d61060c3660046105d3565b90610aca565b916060838303126100d757823567ffffffffffffffff81116100d7578261063a918501610312565b92602081013567ffffffffffffffff81116100d7578361065b918301610312565b92604082013567ffffffffffffffff81116100d7576100c29201610380565b346100d75761043d61068d366004610612565b91610aec565b91909160a0818403126100d7576106aa83826100dc565b926106b881602084016100dc565b926106c682604085016100f1565b9261040283606083016100f1565b346100d75761043d6106e7366004610693565b93929092610af8565b916060838303126100d75761070582846100f1565b9261065b83602083016100f1565b346100d75761043d6107263660046106f0565b91610b33565b6100c26100c26100c29290565b906107439061072c565b600052602052604060002090565b6100c2906100b6906001600160a01b031682565b6100c290610751565b6100c290610765565b906107439061076e565b6100c29081565b6100c29054610781565b6107b2906107ad6100c2936107a5600090565b506000610739565b610777565b610788565b636cdb3d1360e11b6001600160e01b03198216149081156107e7575b81156107dd575090565b6100c29150610b3f565b6001600160e01b031981166303a24d0760e21b1491506107d3565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610838575b602083101461083357565b610802565b91607f1691610828565b8054600093929161085f61085583610818565b8085529360200190565b91600181169081156108b1575060011461087857505050565b61088b9192939450600052602060002090565b916000925b81841061089d5750500190565b805484840152602090930192600101610890565b92949550505060ff1916825215156020020190565b906100c291610842565b906100e96108ea926108e160405190565b938480926108c6565b038361026d565b6100c2906108d0565b506100c260026108f1565b6001600160a01b0391821681529116602082015260400190565b9493929190336001600160a01b0387168114158061096f575b61094757506100e99495610b73565b869061096b61095560405190565b63711bec9160e11b815292839260048401610905565b0390fd5b5061098161097d8289610aca565b1590565b610938565b9081526040810192916100e99160200152565b0152565b906109aa6102d0836102a8565b918252565b369037565b906100e96109ca6109c48461099d565b936102a8565b601f1901602084016109af565b634e487b7160e01b600052603260045260246000fd5b906109f6825190565b811015610a07576020809102010190565b6109d7565b908151610a21610a1d6100c2845190565b9190565b03610a8f57610a36610a31835190565b6109b4565b91610a41600061072c565b610a4c6100c2835190565b811015610a895780610a7e610a71610a67610a849486610c21565b6101378488610c21565b610a7b83886109ed565b52565b60010190565b610a41565b50505090565b519051610a9c565b915190565b9061096b610aa960405190565b635b05999160e01b815292839260048401610986565b6100e9919033610c61565b6100c2916107ad610ae592610add600090565b506001610777565b5460ff1690565b906100e9929133610d12565b9493929190336001600160a01b03871681141580610b20575b61094757506100e99495610d51565b50610b2e61097d8289610aca565b610b11565b906100e9929133610de2565b610b596301ffc9a760e01b5b916001600160e01b03191690565b1490565b6100b66100c26100c29290565b6100c290610b5d565b9493929190610b826000610b6a565b956001600160a01b0387166001600160a01b03831614610bf0576001600160a01b0387166001600160a01b03821614610bc0576100e9959650610e37565b61096b87610bcd60405190565b626a0d4560e21b8152918291600483016001600160a01b03909116815260200190565b61096b87610bfd60405190565b632bfa23e760e11b8152918291600483016001600160a01b03909116815260200190565b9060208091610c2e600090565b50029101015190565b9060ff905b9181191691161790565b90610c566100c2610c5d92151590565b8254610c37565b9055565b610c6b6000610b6a565b6001600160a01b0381166001600160a01b03841614610ce25750610cdd610cd3610ccd83610cc887610cc3886107ad7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31996001610777565b610c46565b61076e565b9361076e565b936101a160405190565b0390a3565b61096b90610cef60405190565b62ced3e160e81b8152918291600483016001600160a01b03909116815260200190565b93929190610d206000610b6a565b946001600160a01b0386166001600160a01b03821614610d44576100e99495610e37565b61096b86610bfd60405190565b909194939294610d616000610b6a565b6001600160a01b0381166001600160a01b03851614610dd5576001600160a01b0381166001600160a01b03841614610dc857506100e99495610dc060405192600184526020840152604083019160018352602083015260408201604052565b929091610e37565b61096b90610bcd60405190565b61096b90610bfd60405190565b90939291610df06000610b6a565b946001600160a01b0386166001600160a01b03841614610d44576100e9949591610dc060405192600184526020840152604083019160018352602083015260408201604052565b91939290610e4782868386610f6e565b610e546100b66000610b6a565b6001600160a01b03821603610e6b575b5050505050565b3392610e75865190565b610e82610a1d600161072c565b03610eb857610ea8610eae96610ea2610e9b600061072c565b8092610c21565b94610c21565b9361139b565b3880808080610e64565b610ec3959293611243565b610eae565b6109996100e994610ef9606094989795610ef2608086019a60008701906001600160a01b03169052565b6020850152565b6040830152565b9060001990610c3c565b90610f1a6100c2610c5d9261072c565b8254610f00565b634e487b7160e01b600052601160045260246000fd5b91908201809211610f4457565b610f21565b60408082526100c2939192610f60918401906104f3565b9160208184039101526104f3565b9392909192610f7b845190565b610f89610a1d6100c2855190565b03611185573393600091610f9c8361072c565b610fa76100c2845190565b8110156110bc57610fb88184610c21565b90610fc38187610c21565b91610fcd86610b6a565b92886001600160a01b0385166001600160a01b038d1603611046575b611010946001600160a01b03165b6001600160a01b03821603611015575b50505060010190565b610f9c565b611029611038916107ad61103e958b610739565b9161103383610788565b610f37565b90610f0a565b388088611007565b5090919261105b6107b28c6107ad868b610739565b82811061109757610ff7839261108f8a8f61108a908f968a6110846110109d9c9b6107ad930390565b94610739565b610f0a565b955050610fe9565b8b61096b85856110a660405190565b6303dee4c560e01b815294859460048601610ec8565b50959294916110c9825190565b6110d6610a1d600161072c565b0361113d5761111c61111c610ccd7fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629594611116610e9b6111229661072c565b99610c21565b9461076e565b9461113861112f60405190565b92839283610986565b0390a4565b509361116f61111c61111c7f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb9461076e565b9461113861117c60405190565b92839283610f49565b50610a9c610a97845190565b905051906100e982610151565b906020828203126100d7576100c291611191565b93906111fb906100c296946111ee611209956111de60a08a019460008b01906001600160a01b03169052565b6001600160a01b03166020890152565b86820360408801526104f3565b9084820360608601526104f3565b9160808184039101526101e7565b906109aa6102d08361032d565b3d1561123e576112333d611217565b903d6000602084013e565b606090565b92919490853b611256610a1d600061072c565b11611264575b505050505050565b600060209461129c611278610cc88a61076e565b9461128260405190565b9889978896879563bc197c8160e01b8752600487016111b2565b03925af160009181611313575b506112f857506112bf565b38808080808061125c565b6112c7611224565b906112d0825190565b6112dd610a1d600061072c565b036112ef5761096b90610bfd60405190565b50805190602001fd5b61130863bc197c8160e01b610b4b565b03610dd557506112b4565b61133691925060203d60201161133d575b61132e818361026d565b81019061119e565b90386112a9565b503d611324565b91936113876100c2969461138061138e949761137060a088019960008901906001600160a01b03169052565b6001600160a01b03166020870152565b6040850152565b6060830152565b60808184039101526101e7565b92919490853b6113ae610a1d600061072c565b116113bb57505050505050565b60006020946113f36113cf610cc88a61076e565b946113d960405190565b9889978896879563f23a6e6160e01b875260048701611344565b03925af16000918161141b575b5061140b57506112bf565b61130863f23a6e6160e01b610b4b565b61143591925060203d60201161133d5761132e818361026d565b903861140056fea2646970667358221220e41d19fac3dab63b8d215fa6e7a991e831a1c34df426d9b532f80ec55faa460364736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x30 JUMPI PUSH3 0x1E PUSH3 0x18 PUSH3 0x14D JUMP JUMPDEST PUSH3 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1472 PUSH3 0x384 DUP3 CODECOPY PUSH2 0x1472 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x6D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x35 JUMP JUMPDEST SWAP1 PUSH3 0x8A PUSH3 0x82 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x4B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x6D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0xBD JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xAC JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH3 0xE7 PUSH3 0xE1 DUP3 PUSH3 0x8C JUMP JUMPDEST PUSH3 0x73 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH3 0x30 JUMPI PUSH3 0x8A SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0xA9 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH3 0x30 JUMPI DUP2 MLOAD PUSH3 0x121 SWAP3 PUSH1 0x20 ADD PUSH3 0xCE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH3 0x30 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x30 JUMPI PUSH3 0x121 SWAP3 ADD PUSH3 0x104 JUMP JUMPDEST PUSH3 0x121 PUSH3 0x17F6 DUP1 CODESIZE SUB DUP1 PUSH3 0x164 DUP2 PUSH3 0x73 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0x124 JUMP JUMPDEST PUSH3 0x8A SWAP1 PUSH3 0x8A SWAP1 PUSH3 0x376 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH3 0x1B9 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x1B3 JUMPI JUMP JUMPDEST PUSH3 0x180 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x1A7 JUMP JUMPDEST PUSH3 0x121 PUSH3 0x121 PUSH3 0x121 SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0x1E9 PUSH3 0x121 PUSH3 0x201 SWAP4 PUSH3 0x1C4 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL NOT AND SWAP2 SWAP1 SHL OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x8A SWAP2 PUSH1 0x0 SWAP2 PUSH3 0x1D4 JUMP JUMPDEST DUP2 DUP2 LT PUSH3 0x21F JUMPI POP POP JUMP JUMPDEST DUP1 PUSH3 0x22F PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH3 0x205 JUMP JUMPDEST ADD PUSH3 0x213 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH3 0x246 JUMPI POP POP POP JUMP JUMPDEST PUSH3 0x25A PUSH3 0x8A SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH3 0x27E JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH3 0x213 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x26E JUMP JUMPDEST SWAP1 PUSH3 0x293 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x6D JUMPI PUSH3 0x2BB DUP3 PUSH3 0x2B4 DUP6 SLOAD PUSH3 0x196 JUMP JUMPDEST DUP6 PUSH3 0x236 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x2FA JUMPI PUSH3 0x201 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH3 0x2EE JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x2DA JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH3 0x310 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x351 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH3 0x337 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x32E JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH3 0x314 JUMP JUMPDEST SWAP1 PUSH3 0x8A SWAP2 PUSH3 0x289 JUMP JUMPDEST PUSH3 0x8A SWAP1 PUSH1 0x2 PUSH3 0x36A JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0xEFAA5018 EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x89 JUMPI PUSH4 0xF737E496 SUB PUSH2 0xD7 JUMPI PUSH2 0x713 JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x55A JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH2 0x230 JUMP JUMPDEST PUSH2 0x182 JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH2 0xD7 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE9 DUP3 PUSH2 0xC5 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0xD0 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE9 DUP3 PUSH2 0xEB JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP1 PUSH1 0x20 PUSH2 0x11A DUP3 DUP7 PUSH2 0xDC JUMP JUMPDEST SWAP5 ADD PUSH2 0xF1 JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x14D PUSH2 0x13D PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0xFE JUMP JUMPDEST SWAP1 PUSH2 0x792 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH2 0xD0 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE9 DUP3 PUSH2 0x151 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP2 PUSH2 0x161 JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x14D PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x16E JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP2 PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1D7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x211 PUSH1 0x20 SWAP4 PUSH2 0x21B SWAP4 PUSH2 0x1FC DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0xC2 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1E7 JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x14D PUSH2 0x24B PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B0 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x21F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x28F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x257 JUMP JUMPDEST SWAP1 PUSH2 0xE9 PUSH2 0x2A1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x26D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x28F JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2D5 PUSH2 0x2D0 DUP3 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0xD7 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2F9 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x307 DUP5 DUP7 PUSH2 0xF1 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x2EC JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xD7 JUMPI DUP2 PUSH1 0x20 PUSH2 0xC2 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x2C0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x28F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x366 PUSH2 0x2D0 DUP3 PUSH2 0x32D JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0xD7 JUMPI PUSH2 0xE9 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x34A JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xD7 JUMPI DUP2 PUSH1 0x20 PUSH2 0xC2 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x356 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0xA0 DUP2 DUP5 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0x3B2 DUP4 DUP3 PUSH2 0xDC JUMP JUMPDEST SWAP3 PUSH2 0x3C0 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0xDC JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD7 JUMPI DUP3 PUSH2 0x3E1 SWAP2 DUP6 ADD PUSH2 0x312 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD7 JUMPI DUP4 PUSH2 0x402 SWAP2 DUP4 ADD PUSH2 0x312 JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP3 ADD PUSH2 0x380 JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x43D PUSH2 0x434 CALLDATASIZE PUSH1 0x4 PUSH2 0x39B JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x91F JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x452 PUSH2 0x2D0 DUP3 PUSH2 0x2A8 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0xD7 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x476 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x484 DUP5 DUP7 PUSH2 0xDC JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x469 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xD7 JUMPI DUP2 PUSH1 0x20 PUSH2 0xC2 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x442 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0xD7 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD7 JUMPI DUP4 PUSH2 0x4D4 SWAP2 DUP4 ADD PUSH2 0x48F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP3 ADD PUSH2 0x312 JUMP JUMPDEST SWAP1 PUSH2 0x513 PUSH2 0x50C PUSH2 0x502 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x524 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x541 PUSH2 0x53A PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0xC2 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x4F3 JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x14D PUSH2 0x576 PUSH2 0x570 CALLDATASIZE PUSH1 0x4 PUSH2 0x4AA JUMP JUMPDEST SWAP1 PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x549 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0xD0 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE9 DUP3 PUSH2 0x582 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP1 PUSH1 0x20 PUSH2 0x5B3 DUP3 DUP7 PUSH2 0xDC JUMP JUMPDEST SWAP5 ADD PUSH2 0x58A JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x43D PUSH2 0x5CD CALLDATASIZE PUSH1 0x4 PUSH2 0x597 JUMP JUMPDEST SWAP1 PUSH2 0xABF JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP1 PUSH1 0x20 PUSH2 0x5EF DUP3 DUP7 PUSH2 0xDC JUMP JUMPDEST SWAP5 ADD PUSH2 0xDC JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x14D PUSH2 0x19D PUSH2 0x60C CALLDATASIZE PUSH1 0x4 PUSH2 0x5D3 JUMP JUMPDEST SWAP1 PUSH2 0xACA JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0xD7 JUMPI DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD7 JUMPI DUP3 PUSH2 0x63A SWAP2 DUP6 ADD PUSH2 0x312 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD7 JUMPI DUP4 PUSH2 0x65B SWAP2 DUP4 ADD PUSH2 0x312 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP3 ADD PUSH2 0x380 JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x43D PUSH2 0x68D CALLDATASIZE PUSH1 0x4 PUSH2 0x612 JUMP JUMPDEST SWAP2 PUSH2 0xAEC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0xA0 DUP2 DUP5 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0x6AA DUP4 DUP3 PUSH2 0xDC JUMP JUMPDEST SWAP3 PUSH2 0x6B8 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0xDC JUMP JUMPDEST SWAP3 PUSH2 0x6C6 DUP3 PUSH1 0x40 DUP6 ADD PUSH2 0xF1 JUMP JUMPDEST SWAP3 PUSH2 0x402 DUP4 PUSH1 0x60 DUP4 ADD PUSH2 0xF1 JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x43D PUSH2 0x6E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x693 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0xAF8 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0x705 DUP3 DUP5 PUSH2 0xF1 JUMP JUMPDEST SWAP3 PUSH2 0x65B DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0xF1 JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x43D PUSH2 0x726 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST SWAP2 PUSH2 0xB33 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0xC2 PUSH2 0xC2 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x743 SWAP1 PUSH2 0x72C JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0xB6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x751 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 PUSH2 0x743 SWAP1 PUSH2 0x76E JUMP JUMPDEST PUSH2 0xC2 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0xC2 SWAP1 SLOAD PUSH2 0x781 JUMP JUMPDEST PUSH2 0x7B2 SWAP1 PUSH2 0x7AD PUSH2 0xC2 SWAP4 PUSH2 0x7A5 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x777 JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x7E7 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x7DD JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP2 POP PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ SWAP2 POP PUSH2 0x7D3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x838 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x833 JUMPI JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x828 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x85F PUSH2 0x855 DUP4 PUSH2 0x818 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x8B1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x878 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x88B SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x89D JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x890 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC2 SWAP2 PUSH2 0x842 JUMP JUMPDEST SWAP1 PUSH2 0xE9 PUSH2 0x8EA SWAP3 PUSH2 0x8E1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x8C6 JUMP JUMPDEST SUB DUP4 PUSH2 0x26D JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x8D0 JUMP JUMPDEST POP PUSH2 0xC2 PUSH1 0x2 PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 EQ ISZERO DUP1 PUSH2 0x96F JUMPI JUMPDEST PUSH2 0x947 JUMPI POP PUSH2 0xE9 SWAP5 SWAP6 PUSH2 0xB73 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x96B PUSH2 0x955 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x905 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x981 PUSH2 0x97D DUP3 DUP10 PUSH2 0xACA JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0xE9 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x9AA PUSH2 0x2D0 DUP4 PUSH2 0x2A8 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0xE9 PUSH2 0x9CA PUSH2 0x9C4 DUP5 PUSH2 0x99D JUMP JUMPDEST SWAP4 PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x9AF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x9F6 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xA07 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x9D7 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH2 0xA21 PUSH2 0xA1D PUSH2 0xC2 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SUB PUSH2 0xA8F JUMPI PUSH2 0xA36 PUSH2 0xA31 DUP4 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST SWAP2 PUSH2 0xA41 PUSH1 0x0 PUSH2 0x72C JUMP JUMPDEST PUSH2 0xA4C PUSH2 0xC2 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xA89 JUMPI DUP1 PUSH2 0xA7E PUSH2 0xA71 PUSH2 0xA67 PUSH2 0xA84 SWAP5 DUP7 PUSH2 0xC21 JUMP JUMPDEST PUSH2 0x137 DUP5 DUP9 PUSH2 0xC21 JUMP JUMPDEST PUSH2 0xA7B DUP4 DUP9 PUSH2 0x9ED JUMP JUMPDEST MSTORE JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST MLOAD SWAP1 MLOAD PUSH2 0xA9C JUMP JUMPDEST SWAP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x96B PUSH2 0xAA9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x986 JUMP JUMPDEST PUSH2 0xE9 SWAP2 SWAP1 CALLER PUSH2 0xC61 JUMP JUMPDEST PUSH2 0xC2 SWAP2 PUSH2 0x7AD PUSH2 0xAE5 SWAP3 PUSH2 0xADD PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x777 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xE9 SWAP3 SWAP2 CALLER PUSH2 0xD12 JUMP JUMPDEST SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 EQ ISZERO DUP1 PUSH2 0xB20 JUMPI JUMPDEST PUSH2 0x947 JUMPI POP PUSH2 0xE9 SWAP5 SWAP6 PUSH2 0xD51 JUMP JUMPDEST POP PUSH2 0xB2E PUSH2 0x97D DUP3 DUP10 PUSH2 0xACA JUMP JUMPDEST PUSH2 0xB11 JUMP JUMPDEST SWAP1 PUSH2 0xE9 SWAP3 SWAP2 CALLER PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0xB59 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0xC2 PUSH2 0xC2 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0xB5D JUMP JUMPDEST SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB82 PUSH1 0x0 PUSH2 0xB6A JUMP JUMPDEST SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0xBF0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xBC0 JUMPI PUSH2 0xE9 SWAP6 SWAP7 POP PUSH2 0xE37 JUMP JUMPDEST PUSH2 0x96B DUP8 PUSH2 0xBCD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x96B DUP8 PUSH2 0xBFD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 SWAP2 PUSH2 0xC2E PUSH1 0x0 SWAP1 JUMP JUMPDEST POP MUL SWAP2 ADD ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC56 PUSH2 0xC2 PUSH2 0xC5D SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xC37 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC6B PUSH1 0x0 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0xCE2 JUMPI POP PUSH2 0xCDD PUSH2 0xCD3 PUSH2 0xCCD DUP4 PUSH2 0xCC8 DUP8 PUSH2 0xCC3 DUP9 PUSH2 0x7AD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP10 PUSH1 0x1 PUSH2 0x777 JUMP JUMPDEST PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST SWAP4 PUSH2 0x76E JUMP JUMPDEST SWAP4 PUSH2 0x1A1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x96B SWAP1 PUSH2 0xCEF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD20 PUSH1 0x0 PUSH2 0xB6A JUMP JUMPDEST SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xD44 JUMPI PUSH2 0xE9 SWAP5 SWAP6 PUSH2 0xE37 JUMP JUMPDEST PUSH2 0x96B DUP7 PUSH2 0xBFD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH2 0xD61 PUSH1 0x0 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0xDD5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0xDC8 JUMPI POP PUSH2 0xE9 SWAP5 SWAP6 PUSH2 0xDC0 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0xE37 JUMP JUMPDEST PUSH2 0x96B SWAP1 PUSH2 0xBCD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x96B SWAP1 PUSH2 0xBFD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 SWAP4 SWAP3 SWAP2 PUSH2 0xDF0 PUSH1 0x0 PUSH2 0xB6A JUMP JUMPDEST SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0xD44 JUMPI PUSH2 0xE9 SWAP5 SWAP6 SWAP2 PUSH2 0xDC0 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0xE47 DUP3 DUP7 DUP4 DUP7 PUSH2 0xF6E JUMP JUMPDEST PUSH2 0xE54 PUSH2 0xB6 PUSH1 0x0 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xE6B JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER SWAP3 PUSH2 0xE75 DUP7 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE82 PUSH2 0xA1D PUSH1 0x1 PUSH2 0x72C JUMP JUMPDEST SUB PUSH2 0xEB8 JUMPI PUSH2 0xEA8 PUSH2 0xEAE SWAP7 PUSH2 0xEA2 PUSH2 0xE9B PUSH1 0x0 PUSH2 0x72C JUMP JUMPDEST DUP1 SWAP3 PUSH2 0xC21 JUMP JUMPDEST SWAP5 PUSH2 0xC21 JUMP JUMPDEST SWAP4 PUSH2 0x139B JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0xEC3 SWAP6 SWAP3 SWAP4 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0xEAE JUMP JUMPDEST PUSH2 0x999 PUSH2 0xE9 SWAP5 PUSH2 0xEF9 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0xEF2 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xC3C JUMP JUMPDEST SWAP1 PUSH2 0xF1A PUSH2 0xC2 PUSH2 0xC5D SWAP3 PUSH2 0x72C JUMP JUMPDEST DUP3 SLOAD PUSH2 0xF00 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xF44 JUMPI JUMP JUMPDEST PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE PUSH2 0xC2 SWAP4 SWAP2 SWAP3 PUSH2 0xF60 SWAP2 DUP5 ADD SWAP1 PUSH2 0x4F3 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x4F3 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0xF7B DUP5 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF89 PUSH2 0xA1D PUSH2 0xC2 DUP6 MLOAD SWAP1 JUMP JUMPDEST SUB PUSH2 0x1185 JUMPI CALLER SWAP4 PUSH1 0x0 SWAP2 PUSH2 0xF9C DUP4 PUSH2 0x72C JUMP JUMPDEST PUSH2 0xFA7 PUSH2 0xC2 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x10BC JUMPI PUSH2 0xFB8 DUP2 DUP5 PUSH2 0xC21 JUMP JUMPDEST SWAP1 PUSH2 0xFC3 DUP2 DUP8 PUSH2 0xC21 JUMP JUMPDEST SWAP2 PUSH2 0xFCD DUP7 PUSH2 0xB6A JUMP JUMPDEST SWAP3 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND SUB PUSH2 0x1046 JUMPI JUMPDEST PUSH2 0x1010 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1015 JUMPI JUMPDEST POP POP POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x1029 PUSH2 0x1038 SWAP2 PUSH2 0x7AD PUSH2 0x103E SWAP6 DUP12 PUSH2 0x739 JUMP JUMPDEST SWAP2 PUSH2 0x1033 DUP4 PUSH2 0x788 JUMP JUMPDEST PUSH2 0xF37 JUMP JUMPDEST SWAP1 PUSH2 0xF0A JUMP JUMPDEST CODESIZE DUP1 DUP9 PUSH2 0x1007 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP3 PUSH2 0x105B PUSH2 0x7B2 DUP13 PUSH2 0x7AD DUP7 DUP12 PUSH2 0x739 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0x1097 JUMPI PUSH2 0xFF7 DUP4 SWAP3 PUSH2 0x108F DUP11 DUP16 PUSH2 0x108A SWAP1 DUP16 SWAP7 DUP11 PUSH2 0x1084 PUSH2 0x1010 SWAP14 SWAP13 SWAP12 PUSH2 0x7AD SWAP4 SUB SWAP1 JUMP JUMPDEST SWAP5 PUSH2 0x739 JUMP JUMPDEST PUSH2 0xF0A JUMP JUMPDEST SWAP6 POP POP PUSH2 0xFE9 JUMP JUMPDEST DUP12 PUSH2 0x96B DUP6 DUP6 PUSH2 0x10A6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 DUP6 SWAP5 PUSH1 0x4 DUP7 ADD PUSH2 0xEC8 JUMP JUMPDEST POP SWAP6 SWAP3 SWAP5 SWAP2 PUSH2 0x10C9 DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10D6 PUSH2 0xA1D PUSH1 0x1 PUSH2 0x72C JUMP JUMPDEST SUB PUSH2 0x113D JUMPI PUSH2 0x111C PUSH2 0x111C PUSH2 0xCCD PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP6 SWAP5 PUSH2 0x1116 PUSH2 0xE9B PUSH2 0x1122 SWAP7 PUSH2 0x72C JUMP JUMPDEST SWAP10 PUSH2 0xC21 JUMP JUMPDEST SWAP5 PUSH2 0x76E JUMP JUMPDEST SWAP5 PUSH2 0x1138 PUSH2 0x112F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x986 JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST POP SWAP4 PUSH2 0x116F PUSH2 0x111C PUSH2 0x111C PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP5 PUSH2 0x76E JUMP JUMPDEST SWAP5 PUSH2 0x1138 PUSH2 0x117C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xF49 JUMP JUMPDEST POP PUSH2 0xA9C PUSH2 0xA97 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE9 DUP3 PUSH2 0x151 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP2 PUSH2 0x1191 JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x11FB SWAP1 PUSH2 0xC2 SWAP7 SWAP5 PUSH2 0x11EE PUSH2 0x1209 SWAP6 PUSH2 0x11DE PUSH1 0xA0 DUP11 ADD SWAP5 PUSH1 0x0 DUP12 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x4F3 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x4F3 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1E7 JUMP JUMPDEST SWAP1 PUSH2 0x9AA PUSH2 0x2D0 DUP4 PUSH2 0x32D JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x123E JUMPI PUSH2 0x1233 RETURNDATASIZE PUSH2 0x1217 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP5 SWAP1 DUP6 EXTCODESIZE PUSH2 0x1256 PUSH2 0xA1D PUSH1 0x0 PUSH2 0x72C JUMP JUMPDEST GT PUSH2 0x1264 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP5 PUSH2 0x129C PUSH2 0x1278 PUSH2 0xCC8 DUP11 PUSH2 0x76E JUMP JUMPDEST SWAP5 PUSH2 0x1282 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x11B2 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1313 JUMPI JUMPDEST POP PUSH2 0x12F8 JUMPI POP PUSH2 0x12BF JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x12C7 PUSH2 0x1224 JUMP JUMPDEST SWAP1 PUSH2 0x12D0 DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x12DD PUSH2 0xA1D PUSH1 0x0 PUSH2 0x72C JUMP JUMPDEST SUB PUSH2 0x12EF JUMPI PUSH2 0x96B SWAP1 PUSH2 0xBFD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x1308 PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH2 0xB4B JUMP JUMPDEST SUB PUSH2 0xDD5 JUMPI POP PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x1336 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x133D JUMPI JUMPDEST PUSH2 0x132E DUP2 DUP4 PUSH2 0x26D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x119E JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x12A9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1324 JUMP JUMPDEST SWAP2 SWAP4 PUSH2 0x1387 PUSH2 0xC2 SWAP7 SWAP5 PUSH2 0x1380 PUSH2 0x138E SWAP5 SWAP8 PUSH2 0x1370 PUSH1 0xA0 DUP9 ADD SWAP10 PUSH1 0x0 DUP10 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 SWAP5 SWAP1 DUP6 EXTCODESIZE PUSH2 0x13AE PUSH2 0xA1D PUSH1 0x0 PUSH2 0x72C JUMP JUMPDEST GT PUSH2 0x13BB JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP5 PUSH2 0x13F3 PUSH2 0x13CF PUSH2 0xCC8 DUP11 PUSH2 0x76E JUMP JUMPDEST SWAP5 PUSH2 0x13D9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x1344 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x141B JUMPI JUMPDEST POP PUSH2 0x140B JUMPI POP PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x1308 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH2 0xB4B JUMP JUMPDEST PUSH2 0x1435 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x133D JUMPI PUSH2 0x132E DUP2 DUP4 PUSH2 0x26D JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1400 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 SAR NOT STATICCALL 0xC3 0xDA 0xB6 EXTCODESIZE DUP14 0x21 PUSH0 0xA6 0xE7 0xA9 SWAP2 0xE8 BALANCE LOG1 0xC3 0x4D DELEGATECALL 0x26 0xD9 0xB5 ORIGIN 0xF8 0xE 0xC5 PUSH0 0xAA CHAINID SUB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"134:504:11:-:0;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;134:504:11;;;;;;-1:-1:-1;;;;;134:504:11;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;134:504:11;;;;;;;;-1:-1:-1;;134:504:11;;;:::o;:::-;;;;;;;;-1:-1:-1;;134:504:11;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;134:504:11;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;165:45::-;;;1463:4:1;1413:62;1463:4;:::i;134:504:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;134:504:11;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;134:504:11;;;;;;;;;;;;;-1:-1:-1;;;;;134:504:11;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;134:504:11;;;;;;;;;;;;;;;;-1:-1:-1;134:504:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;134:504:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;10611:86:1:-;10677:13;10611:86;10677:13;;:::i"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":220,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_address":{"entryPoint":1491,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_addresst_array_uint256_dynt_array_uint256_dynt_bytes":{"entryPoint":923,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_addresst_addresst_uint256t_uint256t_bytes":{"entryPoint":1683,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_addresst_bool":{"entryPoint":1431,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_uint256":{"entryPoint":254,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_address_dyn":{"entryPoint":1167,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_address_dynt_array_uint256_dyn":{"entryPoint":1194,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_uint256_dyn":{"entryPoint":786,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dynt_array_uint256_dynt_bytes":{"entryPoint":1554,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_available_length_array_address_dyn":{"entryPoint":1090,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_array_uint256_dyn":{"entryPoint":704,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":854,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":1418,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":896,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4":{"entryPoint":366,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":4497,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_bytes4_fromMemory":{"entryPoint":4510,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":432,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":241,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_uint256t_bytes":{"entryPoint":1776,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_string_storage":{"entryPoint":2246,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address":{"entryPoint":2309,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes":{"entryPoint":4530,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_address_uint256_uint256_bytes":{"entryPoint":4932,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_uint256_uint256_uint256":{"entryPoint":3784,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":1353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_array_uint256_dyn":{"entryPoint":3913,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":1267,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":543,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":487,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":2114,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_to_uint256_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_uint256":{"entryPoint":2438,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":2484,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":660,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_uint256_dyn":{"entryPoint":2461,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_bytes":{"entryPoint":4631,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":680,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":813,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_array_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_bytes":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":3895,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":182,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_address":{"entryPoint":1902,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_IERC1155Receiver":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_string_storage_to_string":{"entryPoint":2289,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IERC1155Receiver_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":2922,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":2909,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":1893,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_IERC1155Receiver":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":1873,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":1836,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":2256,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":842,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":452,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOfBatch":{"entryPoint":1370,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":1526,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_recharge":{"entryPoint":1811,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_rechargeBatch":{"entryPoint":1658,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeBatchTransferFrom":{"entryPoint":1057,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":1748,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":1466,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":386,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_uri":{"entryPoint":560,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2072,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint256":{"entryPoint":1921,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":4644,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":621,"id":null,"parameterSlots":2,"returnSlots":0},"fun__setApprovalForAll":{"entryPoint":3169,"id":1033,"parameterSlots":3,"returnSlots":0},"fun_asSingletonArrays":{"entryPoint":null,"id":1187,"parameterSlots":2,"returnSlots":2},"fun_balanceOf":{"entryPoint":1938,"id":257,"parameterSlots":2,"returnSlots":1},"fun_balanceOfBatch":{"entryPoint":2572,"id":327,"parameterSlots":2,"returnSlots":1},"fun_doSafeBatchTransferAcceptanceCheck":{"entryPoint":4675,"id":1171,"parameterSlots":6,"returnSlots":0},"fun_doSafeTransferAcceptanceCheck":{"entryPoint":5019,"id":1101,"parameterSlots":6,"returnSlots":0},"fun_isApprovedForAll":{"entryPoint":2762,"id":360,"parameterSlots":2,"returnSlots":1},"fun_mint":{"entryPoint":3554,"id":863,"parameterSlots":4,"returnSlots":0},"fun_mintBatch":{"entryPoint":3346,"id":904,"parameterSlots":4,"returnSlots":0},"fun_msgSender":{"entryPoint":null,"id":1564,"parameterSlots":0,"returnSlots":1},"fun_recharge":{"entryPoint":2867,"id":2815,"parameterSlots":3,"returnSlots":0},"fun_rechargeBatch":{"entryPoint":2796,"id":2835,"parameterSlots":3,"returnSlots":0},"fun_safeBatchTransferFrom":{"entryPoint":2931,"id":800,"parameterSlots":5,"returnSlots":0},"fun_safeBatchTransferFrom_450":{"entryPoint":2335,"id":450,"parameterSlots":5,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":3409,"id":745,"parameterSlots":5,"returnSlots":0},"fun_safeTransferFrom_404":{"entryPoint":2808,"id":404,"parameterSlots":5,"returnSlots":0},"fun_setApprovalForAll":{"entryPoint":2751,"id":343,"parameterSlots":2,"returnSlots":0},"fun_supportsInterface":{"entryPoint":2879,"id":1715,"parameterSlots":1,"returnSlots":1},"fun_supportsInterface_229":{"entryPoint":1975,"id":229,"parameterSlots":1,"returnSlots":1},"fun_unsafeMemoryAccess":{"entryPoint":null,"id":1538,"parameterSlots":2,"returnSlots":1},"fun_unsafeMemoryAccess_1551":{"entryPoint":3105,"id":1551,"parameterSlots":2,"returnSlots":1},"fun_update":{"entryPoint":3950,"id":603,"parameterSlots":4,"returnSlots":0},"fun_updateWithAcceptanceCheck":{"entryPoint":3639,"id":679,"parameterSlots":5,"returnSlots":0},"fun_uri":{"entryPoint":2298,"id":240,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"increment_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_mapping_address_bool_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":1911,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_mapping_address_uint256_of_uint256":{"entryPoint":1849,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":2541,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3873,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2050,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2519,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":599,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"prepare_store_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":1928,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":3840,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":3127,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offsett_bool_to_bool":{"entryPoint":3142,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":3850,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":197,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":1410,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":337,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":235,"id":null,"parameterSlots":1,"returnSlots":0},"wrapping_sub_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_memory_chunk_uint256":{"entryPoint":2479,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_array_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bytes":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_string":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8062fdd58e146100b157806301ffc9a7146100ac5780630e89341c146100a75780632eb2c2d6146100a25780634e1273f41461009d578063a22cb46514610098578063e985e9c514610093578063efaa50181461008e578063f242432a146100895763f737e496036100d757610713565b6106d4565b61067a565b6105f6565b6105ba565b61055a565b610421565b610230565b610182565b610121565b6001600160a01b031690565b90565b6001600160a01b0381165b036100d757565b600080fd5b905035906100e9826100c5565b565b806100d0565b905035906100e9826100eb565b91906040838203126100d7576100c290602061011a82866100dc565b94016100f1565b346100d75761014d61013d6101373660046100fe565b90610792565b6040519182918290815260200190565b0390f35b6001600160e01b031981166100d0565b905035906100e982610151565b906020828203126100d7576100c291610161565b346100d75761014d61019d61019836600461016e565b6107b7565b6040515b91829182901515815260200190565b906020828203126100d7576100c2916100f1565b60005b8381106101d75750506000910152565b81810151838201526020016101c7565b61020861021160209361021b936101fc815190565b80835293849260200190565b958691016101c4565b601f01601f191690565b0190565b60208082526100c2929101906101e7565b346100d75761014d61024b6102463660046101b0565b6108fa565b6040519182918261021f565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761028f57604052565b610257565b906100e96102a160405190565b928361026d565b67ffffffffffffffff811161028f5760208091020190565b909291926102d56102d0826102a8565b610294565b93818552602080860192028301928184116100d757915b8383106102f95750505050565b6020809161030784866100f1565b8152019201916102ec565b9080601f830112156100d7578160206100c2933591016102c0565b67ffffffffffffffff811161028f57602090601f01601f19160190565b90826000939282370152565b909291926103666102d08261032d565b93818552818301116100d7576100e991602085019061034a565b9080601f830112156100d7578160206100c293359101610356565b91909160a0818403126100d7576103b283826100dc565b926103c081602084016100dc565b92604083013567ffffffffffffffff81116100d757826103e1918501610312565b92606081013567ffffffffffffffff81116100d75783610402918301610312565b92608082013567ffffffffffffffff81116100d7576100c29201610380565b346100d75761043d61043436600461039b565b9392909261091f565b604051005b909291926104526102d0826102a8565b93818552602080860192028301928184116100d757915b8383106104765750505050565b6020809161048484866100dc565b815201920191610469565b9080601f830112156100d7578160206100c293359101610442565b9190916040818403126100d757803567ffffffffffffffff81116100d757836104d491830161048f565b92602082013567ffffffffffffffff81116100d7576100c29201610312565b9061051361050c610502845190565b8084529260200190565b9260200190565b9060005b8181106105245750505090565b90919261054161053a6001928651815260200190565b9460200190565b929101610517565b60208082526100c2929101906104f3565b346100d75761014d6105766105703660046104aa565b90610a0c565b60405191829182610549565b8015156100d0565b905035906100e982610582565b91906040838203126100d7576100c29060206105b382866100dc565b940161058a565b346100d75761043d6105cd366004610597565b90610abf565b91906040838203126100d7576100c29060206105ef82866100dc565b94016100dc565b346100d75761014d61019d61060c3660046105d3565b90610aca565b916060838303126100d757823567ffffffffffffffff81116100d7578261063a918501610312565b92602081013567ffffffffffffffff81116100d7578361065b918301610312565b92604082013567ffffffffffffffff81116100d7576100c29201610380565b346100d75761043d61068d366004610612565b91610aec565b91909160a0818403126100d7576106aa83826100dc565b926106b881602084016100dc565b926106c682604085016100f1565b9261040283606083016100f1565b346100d75761043d6106e7366004610693565b93929092610af8565b916060838303126100d75761070582846100f1565b9261065b83602083016100f1565b346100d75761043d6107263660046106f0565b91610b33565b6100c26100c26100c29290565b906107439061072c565b600052602052604060002090565b6100c2906100b6906001600160a01b031682565b6100c290610751565b6100c290610765565b906107439061076e565b6100c29081565b6100c29054610781565b6107b2906107ad6100c2936107a5600090565b506000610739565b610777565b610788565b636cdb3d1360e11b6001600160e01b03198216149081156107e7575b81156107dd575090565b6100c29150610b3f565b6001600160e01b031981166303a24d0760e21b1491506107d3565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610838575b602083101461083357565b610802565b91607f1691610828565b8054600093929161085f61085583610818565b8085529360200190565b91600181169081156108b1575060011461087857505050565b61088b9192939450600052602060002090565b916000925b81841061089d5750500190565b805484840152602090930192600101610890565b92949550505060ff1916825215156020020190565b906100c291610842565b906100e96108ea926108e160405190565b938480926108c6565b038361026d565b6100c2906108d0565b506100c260026108f1565b6001600160a01b0391821681529116602082015260400190565b9493929190336001600160a01b0387168114158061096f575b61094757506100e99495610b73565b869061096b61095560405190565b63711bec9160e11b815292839260048401610905565b0390fd5b5061098161097d8289610aca565b1590565b610938565b9081526040810192916100e99160200152565b0152565b906109aa6102d0836102a8565b918252565b369037565b906100e96109ca6109c48461099d565b936102a8565b601f1901602084016109af565b634e487b7160e01b600052603260045260246000fd5b906109f6825190565b811015610a07576020809102010190565b6109d7565b908151610a21610a1d6100c2845190565b9190565b03610a8f57610a36610a31835190565b6109b4565b91610a41600061072c565b610a4c6100c2835190565b811015610a895780610a7e610a71610a67610a849486610c21565b6101378488610c21565b610a7b83886109ed565b52565b60010190565b610a41565b50505090565b519051610a9c565b915190565b9061096b610aa960405190565b635b05999160e01b815292839260048401610986565b6100e9919033610c61565b6100c2916107ad610ae592610add600090565b506001610777565b5460ff1690565b906100e9929133610d12565b9493929190336001600160a01b03871681141580610b20575b61094757506100e99495610d51565b50610b2e61097d8289610aca565b610b11565b906100e9929133610de2565b610b596301ffc9a760e01b5b916001600160e01b03191690565b1490565b6100b66100c26100c29290565b6100c290610b5d565b9493929190610b826000610b6a565b956001600160a01b0387166001600160a01b03831614610bf0576001600160a01b0387166001600160a01b03821614610bc0576100e9959650610e37565b61096b87610bcd60405190565b626a0d4560e21b8152918291600483016001600160a01b03909116815260200190565b61096b87610bfd60405190565b632bfa23e760e11b8152918291600483016001600160a01b03909116815260200190565b9060208091610c2e600090565b50029101015190565b9060ff905b9181191691161790565b90610c566100c2610c5d92151590565b8254610c37565b9055565b610c6b6000610b6a565b6001600160a01b0381166001600160a01b03841614610ce25750610cdd610cd3610ccd83610cc887610cc3886107ad7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31996001610777565b610c46565b61076e565b9361076e565b936101a160405190565b0390a3565b61096b90610cef60405190565b62ced3e160e81b8152918291600483016001600160a01b03909116815260200190565b93929190610d206000610b6a565b946001600160a01b0386166001600160a01b03821614610d44576100e99495610e37565b61096b86610bfd60405190565b909194939294610d616000610b6a565b6001600160a01b0381166001600160a01b03851614610dd5576001600160a01b0381166001600160a01b03841614610dc857506100e99495610dc060405192600184526020840152604083019160018352602083015260408201604052565b929091610e37565b61096b90610bcd60405190565b61096b90610bfd60405190565b90939291610df06000610b6a565b946001600160a01b0386166001600160a01b03841614610d44576100e9949591610dc060405192600184526020840152604083019160018352602083015260408201604052565b91939290610e4782868386610f6e565b610e546100b66000610b6a565b6001600160a01b03821603610e6b575b5050505050565b3392610e75865190565b610e82610a1d600161072c565b03610eb857610ea8610eae96610ea2610e9b600061072c565b8092610c21565b94610c21565b9361139b565b3880808080610e64565b610ec3959293611243565b610eae565b6109996100e994610ef9606094989795610ef2608086019a60008701906001600160a01b03169052565b6020850152565b6040830152565b9060001990610c3c565b90610f1a6100c2610c5d9261072c565b8254610f00565b634e487b7160e01b600052601160045260246000fd5b91908201809211610f4457565b610f21565b60408082526100c2939192610f60918401906104f3565b9160208184039101526104f3565b9392909192610f7b845190565b610f89610a1d6100c2855190565b03611185573393600091610f9c8361072c565b610fa76100c2845190565b8110156110bc57610fb88184610c21565b90610fc38187610c21565b91610fcd86610b6a565b92886001600160a01b0385166001600160a01b038d1603611046575b611010946001600160a01b03165b6001600160a01b03821603611015575b50505060010190565b610f9c565b611029611038916107ad61103e958b610739565b9161103383610788565b610f37565b90610f0a565b388088611007565b5090919261105b6107b28c6107ad868b610739565b82811061109757610ff7839261108f8a8f61108a908f968a6110846110109d9c9b6107ad930390565b94610739565b610f0a565b955050610fe9565b8b61096b85856110a660405190565b6303dee4c560e01b815294859460048601610ec8565b50959294916110c9825190565b6110d6610a1d600161072c565b0361113d5761111c61111c610ccd7fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629594611116610e9b6111229661072c565b99610c21565b9461076e565b9461113861112f60405190565b92839283610986565b0390a4565b509361116f61111c61111c7f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb9461076e565b9461113861117c60405190565b92839283610f49565b50610a9c610a97845190565b905051906100e982610151565b906020828203126100d7576100c291611191565b93906111fb906100c296946111ee611209956111de60a08a019460008b01906001600160a01b03169052565b6001600160a01b03166020890152565b86820360408801526104f3565b9084820360608601526104f3565b9160808184039101526101e7565b906109aa6102d08361032d565b3d1561123e576112333d611217565b903d6000602084013e565b606090565b92919490853b611256610a1d600061072c565b11611264575b505050505050565b600060209461129c611278610cc88a61076e565b9461128260405190565b9889978896879563bc197c8160e01b8752600487016111b2565b03925af160009181611313575b506112f857506112bf565b38808080808061125c565b6112c7611224565b906112d0825190565b6112dd610a1d600061072c565b036112ef5761096b90610bfd60405190565b50805190602001fd5b61130863bc197c8160e01b610b4b565b03610dd557506112b4565b61133691925060203d60201161133d575b61132e818361026d565b81019061119e565b90386112a9565b503d611324565b91936113876100c2969461138061138e949761137060a088019960008901906001600160a01b03169052565b6001600160a01b03166020870152565b6040850152565b6060830152565b60808184039101526101e7565b92919490853b6113ae610a1d600061072c565b116113bb57505050505050565b60006020946113f36113cf610cc88a61076e565b946113d960405190565b9889978896879563f23a6e6160e01b875260048701611344565b03925af16000918161141b575b5061140b57506112bf565b61130863f23a6e6160e01b610b4b565b61143591925060203d60201161133d5761132e818361026d565b903861140056fea2646970667358221220e41d19fac3dab63b8d215fa6e7a991e831a1c34df426d9b532f80ec55faa460364736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0xEFAA5018 EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x89 JUMPI PUSH4 0xF737E496 SUB PUSH2 0xD7 JUMPI PUSH2 0x713 JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x55A JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH2 0x230 JUMP JUMPDEST PUSH2 0x182 JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH2 0xD7 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE9 DUP3 PUSH2 0xC5 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0xD0 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE9 DUP3 PUSH2 0xEB JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP1 PUSH1 0x20 PUSH2 0x11A DUP3 DUP7 PUSH2 0xDC JUMP JUMPDEST SWAP5 ADD PUSH2 0xF1 JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x14D PUSH2 0x13D PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0xFE JUMP JUMPDEST SWAP1 PUSH2 0x792 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH2 0xD0 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE9 DUP3 PUSH2 0x151 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP2 PUSH2 0x161 JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x14D PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x16E JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP2 PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1D7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x211 PUSH1 0x20 SWAP4 PUSH2 0x21B SWAP4 PUSH2 0x1FC DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0xC2 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1E7 JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x14D PUSH2 0x24B PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B0 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x21F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x28F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x257 JUMP JUMPDEST SWAP1 PUSH2 0xE9 PUSH2 0x2A1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x26D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x28F JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2D5 PUSH2 0x2D0 DUP3 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0xD7 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2F9 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x307 DUP5 DUP7 PUSH2 0xF1 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x2EC JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xD7 JUMPI DUP2 PUSH1 0x20 PUSH2 0xC2 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x2C0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x28F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x366 PUSH2 0x2D0 DUP3 PUSH2 0x32D JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0xD7 JUMPI PUSH2 0xE9 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x34A JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xD7 JUMPI DUP2 PUSH1 0x20 PUSH2 0xC2 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x356 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0xA0 DUP2 DUP5 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0x3B2 DUP4 DUP3 PUSH2 0xDC JUMP JUMPDEST SWAP3 PUSH2 0x3C0 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0xDC JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD7 JUMPI DUP3 PUSH2 0x3E1 SWAP2 DUP6 ADD PUSH2 0x312 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD7 JUMPI DUP4 PUSH2 0x402 SWAP2 DUP4 ADD PUSH2 0x312 JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP3 ADD PUSH2 0x380 JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x43D PUSH2 0x434 CALLDATASIZE PUSH1 0x4 PUSH2 0x39B JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x91F JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x452 PUSH2 0x2D0 DUP3 PUSH2 0x2A8 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0xD7 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x476 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x484 DUP5 DUP7 PUSH2 0xDC JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x469 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xD7 JUMPI DUP2 PUSH1 0x20 PUSH2 0xC2 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x442 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0xD7 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD7 JUMPI DUP4 PUSH2 0x4D4 SWAP2 DUP4 ADD PUSH2 0x48F JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP3 ADD PUSH2 0x312 JUMP JUMPDEST SWAP1 PUSH2 0x513 PUSH2 0x50C PUSH2 0x502 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x524 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x541 PUSH2 0x53A PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0xC2 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x4F3 JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x14D PUSH2 0x576 PUSH2 0x570 CALLDATASIZE PUSH1 0x4 PUSH2 0x4AA JUMP JUMPDEST SWAP1 PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x549 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0xD0 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE9 DUP3 PUSH2 0x582 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP1 PUSH1 0x20 PUSH2 0x5B3 DUP3 DUP7 PUSH2 0xDC JUMP JUMPDEST SWAP5 ADD PUSH2 0x58A JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x43D PUSH2 0x5CD CALLDATASIZE PUSH1 0x4 PUSH2 0x597 JUMP JUMPDEST SWAP1 PUSH2 0xABF JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP1 PUSH1 0x20 PUSH2 0x5EF DUP3 DUP7 PUSH2 0xDC JUMP JUMPDEST SWAP5 ADD PUSH2 0xDC JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x14D PUSH2 0x19D PUSH2 0x60C CALLDATASIZE PUSH1 0x4 PUSH2 0x5D3 JUMP JUMPDEST SWAP1 PUSH2 0xACA JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0xD7 JUMPI DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD7 JUMPI DUP3 PUSH2 0x63A SWAP2 DUP6 ADD PUSH2 0x312 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD7 JUMPI DUP4 PUSH2 0x65B SWAP2 DUP4 ADD PUSH2 0x312 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP3 ADD PUSH2 0x380 JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x43D PUSH2 0x68D CALLDATASIZE PUSH1 0x4 PUSH2 0x612 JUMP JUMPDEST SWAP2 PUSH2 0xAEC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0xA0 DUP2 DUP5 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0x6AA DUP4 DUP3 PUSH2 0xDC JUMP JUMPDEST SWAP3 PUSH2 0x6B8 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0xDC JUMP JUMPDEST SWAP3 PUSH2 0x6C6 DUP3 PUSH1 0x40 DUP6 ADD PUSH2 0xF1 JUMP JUMPDEST SWAP3 PUSH2 0x402 DUP4 PUSH1 0x60 DUP4 ADD PUSH2 0xF1 JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x43D PUSH2 0x6E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x693 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0xAF8 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0x705 DUP3 DUP5 PUSH2 0xF1 JUMP JUMPDEST SWAP3 PUSH2 0x65B DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0xF1 JUMP JUMPDEST CALLVALUE PUSH2 0xD7 JUMPI PUSH2 0x43D PUSH2 0x726 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST SWAP2 PUSH2 0xB33 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0xC2 PUSH2 0xC2 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x743 SWAP1 PUSH2 0x72C JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0xB6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x751 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x765 JUMP JUMPDEST SWAP1 PUSH2 0x743 SWAP1 PUSH2 0x76E JUMP JUMPDEST PUSH2 0xC2 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0xC2 SWAP1 SLOAD PUSH2 0x781 JUMP JUMPDEST PUSH2 0x7B2 SWAP1 PUSH2 0x7AD PUSH2 0xC2 SWAP4 PUSH2 0x7A5 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x777 JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x7E7 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x7DD JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP2 POP PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ SWAP2 POP PUSH2 0x7D3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x838 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x833 JUMPI JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x828 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x85F PUSH2 0x855 DUP4 PUSH2 0x818 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x8B1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x878 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x88B SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x89D JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x890 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC2 SWAP2 PUSH2 0x842 JUMP JUMPDEST SWAP1 PUSH2 0xE9 PUSH2 0x8EA SWAP3 PUSH2 0x8E1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x8C6 JUMP JUMPDEST SUB DUP4 PUSH2 0x26D JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x8D0 JUMP JUMPDEST POP PUSH2 0xC2 PUSH1 0x2 PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 EQ ISZERO DUP1 PUSH2 0x96F JUMPI JUMPDEST PUSH2 0x947 JUMPI POP PUSH2 0xE9 SWAP5 SWAP6 PUSH2 0xB73 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x96B PUSH2 0x955 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x905 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x981 PUSH2 0x97D DUP3 DUP10 PUSH2 0xACA JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0xE9 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x9AA PUSH2 0x2D0 DUP4 PUSH2 0x2A8 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0xE9 PUSH2 0x9CA PUSH2 0x9C4 DUP5 PUSH2 0x99D JUMP JUMPDEST SWAP4 PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x9AF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x9F6 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xA07 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x9D7 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH2 0xA21 PUSH2 0xA1D PUSH2 0xC2 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SUB PUSH2 0xA8F JUMPI PUSH2 0xA36 PUSH2 0xA31 DUP4 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST SWAP2 PUSH2 0xA41 PUSH1 0x0 PUSH2 0x72C JUMP JUMPDEST PUSH2 0xA4C PUSH2 0xC2 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xA89 JUMPI DUP1 PUSH2 0xA7E PUSH2 0xA71 PUSH2 0xA67 PUSH2 0xA84 SWAP5 DUP7 PUSH2 0xC21 JUMP JUMPDEST PUSH2 0x137 DUP5 DUP9 PUSH2 0xC21 JUMP JUMPDEST PUSH2 0xA7B DUP4 DUP9 PUSH2 0x9ED JUMP JUMPDEST MSTORE JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST MLOAD SWAP1 MLOAD PUSH2 0xA9C JUMP JUMPDEST SWAP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x96B PUSH2 0xAA9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x986 JUMP JUMPDEST PUSH2 0xE9 SWAP2 SWAP1 CALLER PUSH2 0xC61 JUMP JUMPDEST PUSH2 0xC2 SWAP2 PUSH2 0x7AD PUSH2 0xAE5 SWAP3 PUSH2 0xADD PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x777 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xE9 SWAP3 SWAP2 CALLER PUSH2 0xD12 JUMP JUMPDEST SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 EQ ISZERO DUP1 PUSH2 0xB20 JUMPI JUMPDEST PUSH2 0x947 JUMPI POP PUSH2 0xE9 SWAP5 SWAP6 PUSH2 0xD51 JUMP JUMPDEST POP PUSH2 0xB2E PUSH2 0x97D DUP3 DUP10 PUSH2 0xACA JUMP JUMPDEST PUSH2 0xB11 JUMP JUMPDEST SWAP1 PUSH2 0xE9 SWAP3 SWAP2 CALLER PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0xB59 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0xC2 PUSH2 0xC2 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0xB5D JUMP JUMPDEST SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB82 PUSH1 0x0 PUSH2 0xB6A JUMP JUMPDEST SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0xBF0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xBC0 JUMPI PUSH2 0xE9 SWAP6 SWAP7 POP PUSH2 0xE37 JUMP JUMPDEST PUSH2 0x96B DUP8 PUSH2 0xBCD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x96B DUP8 PUSH2 0xBFD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 SWAP2 PUSH2 0xC2E PUSH1 0x0 SWAP1 JUMP JUMPDEST POP MUL SWAP2 ADD ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC56 PUSH2 0xC2 PUSH2 0xC5D SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xC37 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC6B PUSH1 0x0 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0xCE2 JUMPI POP PUSH2 0xCDD PUSH2 0xCD3 PUSH2 0xCCD DUP4 PUSH2 0xCC8 DUP8 PUSH2 0xCC3 DUP9 PUSH2 0x7AD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP10 PUSH1 0x1 PUSH2 0x777 JUMP JUMPDEST PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST SWAP4 PUSH2 0x76E JUMP JUMPDEST SWAP4 PUSH2 0x1A1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x96B SWAP1 PUSH2 0xCEF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD20 PUSH1 0x0 PUSH2 0xB6A JUMP JUMPDEST SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xD44 JUMPI PUSH2 0xE9 SWAP5 SWAP6 PUSH2 0xE37 JUMP JUMPDEST PUSH2 0x96B DUP7 PUSH2 0xBFD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH2 0xD61 PUSH1 0x0 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0xDD5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0xDC8 JUMPI POP PUSH2 0xE9 SWAP5 SWAP6 PUSH2 0xDC0 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0xE37 JUMP JUMPDEST PUSH2 0x96B SWAP1 PUSH2 0xBCD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x96B SWAP1 PUSH2 0xBFD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 SWAP4 SWAP3 SWAP2 PUSH2 0xDF0 PUSH1 0x0 PUSH2 0xB6A JUMP JUMPDEST SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0xD44 JUMPI PUSH2 0xE9 SWAP5 SWAP6 SWAP2 PUSH2 0xDC0 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0xE47 DUP3 DUP7 DUP4 DUP7 PUSH2 0xF6E JUMP JUMPDEST PUSH2 0xE54 PUSH2 0xB6 PUSH1 0x0 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xE6B JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER SWAP3 PUSH2 0xE75 DUP7 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE82 PUSH2 0xA1D PUSH1 0x1 PUSH2 0x72C JUMP JUMPDEST SUB PUSH2 0xEB8 JUMPI PUSH2 0xEA8 PUSH2 0xEAE SWAP7 PUSH2 0xEA2 PUSH2 0xE9B PUSH1 0x0 PUSH2 0x72C JUMP JUMPDEST DUP1 SWAP3 PUSH2 0xC21 JUMP JUMPDEST SWAP5 PUSH2 0xC21 JUMP JUMPDEST SWAP4 PUSH2 0x139B JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0xEC3 SWAP6 SWAP3 SWAP4 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0xEAE JUMP JUMPDEST PUSH2 0x999 PUSH2 0xE9 SWAP5 PUSH2 0xEF9 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0xEF2 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xC3C JUMP JUMPDEST SWAP1 PUSH2 0xF1A PUSH2 0xC2 PUSH2 0xC5D SWAP3 PUSH2 0x72C JUMP JUMPDEST DUP3 SLOAD PUSH2 0xF00 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xF44 JUMPI JUMP JUMPDEST PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE PUSH2 0xC2 SWAP4 SWAP2 SWAP3 PUSH2 0xF60 SWAP2 DUP5 ADD SWAP1 PUSH2 0x4F3 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x4F3 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0xF7B DUP5 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF89 PUSH2 0xA1D PUSH2 0xC2 DUP6 MLOAD SWAP1 JUMP JUMPDEST SUB PUSH2 0x1185 JUMPI CALLER SWAP4 PUSH1 0x0 SWAP2 PUSH2 0xF9C DUP4 PUSH2 0x72C JUMP JUMPDEST PUSH2 0xFA7 PUSH2 0xC2 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x10BC JUMPI PUSH2 0xFB8 DUP2 DUP5 PUSH2 0xC21 JUMP JUMPDEST SWAP1 PUSH2 0xFC3 DUP2 DUP8 PUSH2 0xC21 JUMP JUMPDEST SWAP2 PUSH2 0xFCD DUP7 PUSH2 0xB6A JUMP JUMPDEST SWAP3 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND SUB PUSH2 0x1046 JUMPI JUMPDEST PUSH2 0x1010 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1015 JUMPI JUMPDEST POP POP POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x1029 PUSH2 0x1038 SWAP2 PUSH2 0x7AD PUSH2 0x103E SWAP6 DUP12 PUSH2 0x739 JUMP JUMPDEST SWAP2 PUSH2 0x1033 DUP4 PUSH2 0x788 JUMP JUMPDEST PUSH2 0xF37 JUMP JUMPDEST SWAP1 PUSH2 0xF0A JUMP JUMPDEST CODESIZE DUP1 DUP9 PUSH2 0x1007 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP3 PUSH2 0x105B PUSH2 0x7B2 DUP13 PUSH2 0x7AD DUP7 DUP12 PUSH2 0x739 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0x1097 JUMPI PUSH2 0xFF7 DUP4 SWAP3 PUSH2 0x108F DUP11 DUP16 PUSH2 0x108A SWAP1 DUP16 SWAP7 DUP11 PUSH2 0x1084 PUSH2 0x1010 SWAP14 SWAP13 SWAP12 PUSH2 0x7AD SWAP4 SUB SWAP1 JUMP JUMPDEST SWAP5 PUSH2 0x739 JUMP JUMPDEST PUSH2 0xF0A JUMP JUMPDEST SWAP6 POP POP PUSH2 0xFE9 JUMP JUMPDEST DUP12 PUSH2 0x96B DUP6 DUP6 PUSH2 0x10A6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 DUP6 SWAP5 PUSH1 0x4 DUP7 ADD PUSH2 0xEC8 JUMP JUMPDEST POP SWAP6 SWAP3 SWAP5 SWAP2 PUSH2 0x10C9 DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10D6 PUSH2 0xA1D PUSH1 0x1 PUSH2 0x72C JUMP JUMPDEST SUB PUSH2 0x113D JUMPI PUSH2 0x111C PUSH2 0x111C PUSH2 0xCCD PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP6 SWAP5 PUSH2 0x1116 PUSH2 0xE9B PUSH2 0x1122 SWAP7 PUSH2 0x72C JUMP JUMPDEST SWAP10 PUSH2 0xC21 JUMP JUMPDEST SWAP5 PUSH2 0x76E JUMP JUMPDEST SWAP5 PUSH2 0x1138 PUSH2 0x112F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x986 JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST POP SWAP4 PUSH2 0x116F PUSH2 0x111C PUSH2 0x111C PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP5 PUSH2 0x76E JUMP JUMPDEST SWAP5 PUSH2 0x1138 PUSH2 0x117C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xF49 JUMP JUMPDEST POP PUSH2 0xA9C PUSH2 0xA97 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE9 DUP3 PUSH2 0x151 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xD7 JUMPI PUSH2 0xC2 SWAP2 PUSH2 0x1191 JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x11FB SWAP1 PUSH2 0xC2 SWAP7 SWAP5 PUSH2 0x11EE PUSH2 0x1209 SWAP6 PUSH2 0x11DE PUSH1 0xA0 DUP11 ADD SWAP5 PUSH1 0x0 DUP12 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x4F3 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x4F3 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1E7 JUMP JUMPDEST SWAP1 PUSH2 0x9AA PUSH2 0x2D0 DUP4 PUSH2 0x32D JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x123E JUMPI PUSH2 0x1233 RETURNDATASIZE PUSH2 0x1217 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP5 SWAP1 DUP6 EXTCODESIZE PUSH2 0x1256 PUSH2 0xA1D PUSH1 0x0 PUSH2 0x72C JUMP JUMPDEST GT PUSH2 0x1264 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP5 PUSH2 0x129C PUSH2 0x1278 PUSH2 0xCC8 DUP11 PUSH2 0x76E JUMP JUMPDEST SWAP5 PUSH2 0x1282 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x11B2 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1313 JUMPI JUMPDEST POP PUSH2 0x12F8 JUMPI POP PUSH2 0x12BF JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x12C7 PUSH2 0x1224 JUMP JUMPDEST SWAP1 PUSH2 0x12D0 DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x12DD PUSH2 0xA1D PUSH1 0x0 PUSH2 0x72C JUMP JUMPDEST SUB PUSH2 0x12EF JUMPI PUSH2 0x96B SWAP1 PUSH2 0xBFD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x1308 PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH2 0xB4B JUMP JUMPDEST SUB PUSH2 0xDD5 JUMPI POP PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x1336 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x133D JUMPI JUMPDEST PUSH2 0x132E DUP2 DUP4 PUSH2 0x26D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x119E JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x12A9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1324 JUMP JUMPDEST SWAP2 SWAP4 PUSH2 0x1387 PUSH2 0xC2 SWAP7 SWAP5 PUSH2 0x1380 PUSH2 0x138E SWAP5 SWAP8 PUSH2 0x1370 PUSH1 0xA0 DUP9 ADD SWAP10 PUSH1 0x0 DUP10 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 SWAP5 SWAP1 DUP6 EXTCODESIZE PUSH2 0x13AE PUSH2 0xA1D PUSH1 0x0 PUSH2 0x72C JUMP JUMPDEST GT PUSH2 0x13BB JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP5 PUSH2 0x13F3 PUSH2 0x13CF PUSH2 0xCC8 DUP11 PUSH2 0x76E JUMP JUMPDEST SWAP5 PUSH2 0x13D9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x1344 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x141B JUMPI JUMPDEST POP PUSH2 0x140B JUMPI POP PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x1308 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH2 0xB4B JUMP JUMPDEST PUSH2 0x1435 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x133D JUMPI PUSH2 0x132E DUP2 DUP4 PUSH2 0x26D JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1400 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 SAR NOT STATICCALL 0xC3 0xDA 0xB6 EXTCODESIZE DUP14 0x21 PUSH0 0xA6 0xE7 0xA9 SWAP2 0xE8 BALANCE LOG1 0xC3 0x4D DELEGATECALL 0x26 0xD9 0xB5 ORIGIN 0xF8 0xE 0xC5 PUSH0 0xAA CHAINID SUB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"134:504:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;134:504:11;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;134:504:11;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;134:504:11;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;134:504:11;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;134:504:11;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;134:504:11;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;134:504:11;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;-1:-1:-1;134:504:11;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;134:504:11;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;2409:132:1:-;2512:22;2409:132;2512:13;:22;2409:132;2486:7;134:504:11;;;2486:7:1;2512:13;:9;:13;:::i;:::-;:22;:::i;:::-;;:::i;1542:305::-;-1:-1:-1;;;;;;;;;134:504:11;;1679:41:1;:109;;;;;1542:305;1679:161;;;;1660:180;1542:305;:::o;1679:161::-;1804:36;;;;:::i;1679:109::-;-1:-1:-1;;;;;;134:504:11;;-1:-1:-1;;;1736:52:1;;-1:-1:-1;1679:109:1;;134:504:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;2246:103:1:-;-1:-1:-1;2331:11:1;2338:4;2331:11;:::i;134:504:11:-;-1:-1:-1;;;;;134:504:11;;;;;;;;;;;;;;:::o;4216:429:1:-;;;;;;735:10:6;-1:-1:-1;;;;;134:504:11;;4453:14:1;;;;:49;;4216:429;4449:129;;4633:4;;;;;:::i;4449:129::-;4525:42;;;;134:504:11;;;;4525:42:1;-1:-1:-1;;;4525:42:1;;;;;;;;;:::i;:::-;;;;4453:49;4472:30;4471:31;4472:30;;;;:::i;:::-;4471:31;;134:504:11;4471:31:1;4453:49;;134:504:11;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;134:504:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;2698:552:1:-;;134:504:11;;2854:29:1;;2873:10;;134:504:11;;;2854:29:1;;134:504:11;;2854:29:1;;2850:121;;3014:30;3028:15;;134:504:11;;;3028:15:1;3014:30;:::i;:::-;3060:13;;3072:1;3060:13;:::i;:::-;3075:19;3079:15;;134:504:11;;;3075:19:1;;;;;;3144:30;3115:87;3134:68;3144:30;3096:3;3144:30;;;:::i;:::-;3176:25;;;;:::i;3134:68::-;3115:87;;;;:::i;:::-;134:504:11;;3115:87:1;134:504:11;;;;3096:3:1;3060:13;;3075:19;;;;2698:552;:::o;2850:121::-;134:504:11;;;2944:15:1;134:504:11;2932:10:1;2944:15;134:504:11;;;2944:15:1;2906:54;;;134:504:11;;;;2906:54:1;-1:-1:-1;;;2906:54:1;;;;;;;;;:::i;3326:144::-;3454:8;;3326:144;735:10:6;3454:8:1;:::i;3569:157::-;3682:37;3569:157;3682:27;:37;3569:157;3659:4;134:504:11;;;3659:4:1;3682:27;:18;:27;:::i;:37::-;134:504:11;;;;;447:188;;623:4;447:188;;601:10;623:4;:::i;3793:351:1:-;;;;;;735:10:6;-1:-1:-1;;;;;134:504:11;;3959:14:1;;;;:49;;3793:351;3955:129;;4132:4;;;;;:::i;3959:49::-;3978:30;3977:31;3978:30;;;;:::i;3977:31::-;3959:49;;243:162:11;;393:4;243:162;;371:10;393:4;:::i;762:146:8:-;861:40;-1:-1:-1;;;861:40:8;;-1:-1:-1;;;;;;134:504:11;;;861:40:8;;762:146;:::o;134:504:11:-;;;;;;;;;;;:::i;9344:445:1:-;;;;;;9543:10;9551:1;9543:10;:::i;:::-;9537:16;-1:-1:-1;;;;;134:504:11;;-1:-1:-1;;;;;134:504:11;;9537:16:1;9533:88;;-1:-1:-1;;;;;134:504:11;;-1:-1:-1;;;;;134:504:11;;9634:18:1;9630:88;;9777:4;;;;;:::i;9630:88::-;9675:32;;;134:504:11;;;;9675:32:1;-1:-1:-1;;;9675:32:1;;;;;;;;-1:-1:-1;;;;;134:504:11;;;;;;;;;9533:88:1;9576:34;;;134:504:11;;;;9576:34:1;-1:-1:-1;;;9576:34:1;;;;;;;;-1:-1:-1;;;;;134:504:11;;;;;;;;;4603:197:5;;4712:82;4603:197;;4689:11;134:504:11;;;4689:11:5;4712:82;;;;;;4603:197;:::o;134:504:11:-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::o;13597:315:1:-;13716:10;13724:1;13716:10;:::i;:::-;-1:-1:-1;;;;;134:504:11;;-1:-1:-1;;;;;134:504:11;;13704:22:1;13700:94;;13803:25;13864:41;;;13803:25;:46;:25;:35;:25;;13864:41;13803:25;:18;:25;:::i;:35::-;:46;:::i;:::-;13864:41;:::i;:::-;;;:::i;:::-;;;134:504:11;;;;13864:41:1;;;;13597:315::o;13700:94::-;13749:34;;;134:504:11;;;;13749:34:1;-1:-1:-1;;;13749:34:1;;;;;;;;-1:-1:-1;;;;;134:504:11;;;;;;;;;11852:282:1;;;;;11979:10;11987:1;11979:10;:::i;:::-;11973:16;-1:-1:-1;;;;;134:504:11;;-1:-1:-1;;;;;134:504:11;;11973:16:1;11969:88;;12122:4;;;;:::i;11969:88::-;12012:34;;;134:504:11;;;;8429:514:1;;;;;;;8557:10;8565:1;8557:10;:::i;:::-;-1:-1:-1;;;;;134:504:11;;-1:-1:-1;;;;;134:504:11;;8551:16:1;8547:88;;-1:-1:-1;;;;;134:504:11;;-1:-1:-1;;;;;134:504:11;;8648:18:1;8644:88;;8791:29;8931:4;8791:29;;;16620:632;;;;;;;;;;;;;;;;;;;;;;;;;;16409:849;8791:29;8931:4;;;;:::i;8644:88::-;8689:32;;;134:504:11;;;;8547:88:1;8590:34;;;134:504:11;;;;11075:346:1;;;;;11177:10;11185:1;11177:10;:::i;:::-;11171:16;-1:-1:-1;;;;;134:504:11;;-1:-1:-1;;;;;134:504:11;;11171:16:1;11167:88;;11409:4;11314:29;;;;16620:632;;;;;;;;;;;;;;;;;;;;;;;;;;16409:849;7206:766;;;;;7463:6;;;;;;:::i;:::-;7527:16;7533:10;7541:1;7533:10;:::i;7527:16::-;-1:-1:-1;;;;;134:504:11;;7527:16:1;7523:443;;7206:766;;;;;;:::o;7523:443::-;735:10:6;7608::1;;;134:504:11;;;7608:10:1;:15;;7622:1;7608:15;:::i;:::-;;7604:352;;7715:28;7823:4;7656:25;;;7541:1;7656:25;:::i;:::-;;;;:::i;:::-;7715:28;;:::i;:::-;7823:4;;:::i;:::-;7523:443;;;;;;;7604:352;7936:4;;;;;:::i;:::-;7604:352;;134:504:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;134:504:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;134:504:11;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;5346:1281:1:-;;;;;;5467:10;;134:504:11;;;5467:10:1;:27;;5481:13;;134:504:11;;;5467:27:1;;5463:117;;735:10:6;5649:1:1;;5637:13;;;;:::i;:::-;5652:14;5656:10;;134:504:11;;;5652:14:1;;;;;;5700:25;;;;:::i;:::-;5755:28;;;;;:::i;:::-;5810:10;;;;:::i;:::-;5802:18;;-1:-1:-1;;;;;134:504:11;;-1:-1:-1;;;;;134:504:11;;5802:18:1;5798:420;;5668:3;;;-1:-1:-1;;;;;134:504:11;6236:16:1;-1:-1:-1;;;;;134:504:11;;6236:16:1;6232:81;;5668:3;;;;134:504:11;;;;5668:3:1;5637:13;;6232:81;6272:17;:26;:13;;:26;:13;;;:::i;:17::-;:26;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6232:81;;;;;5798:420;5862:13;;;;:19;;:13;;;;;:::i;:19::-;5903;;;5899:129;;6236:16;6166:19;;6144:41;6166:19;;6144;6166;;;;;5668:3;6166:19;;;6144:13;6166:19;134:504:11;;;6166:19:1;6144:13;;:::i;:19::-;:41;:::i;:::-;5798:420;;;;;5899:129;5953:56;;;;;134:504:11;;;;5953:56:1;-1:-1:-1;;;5953:56:1;;;;;;;;;:::i;5652:14::-;;;;;;6337:10;;134:504:11;;;6337:10:1;:15;;6351:1;6337:15;:::i;:::-;;6333:288;;6483:45;;6436:28;6483:45;6381:25;;;;6483:45;6381:25;;:::i;:::-;6436:28;;:::i;6483:45::-;;;:::i;:::-;;;;134:504:11;;;;6483:45:1;;;;;;:::i;:::-;;;;5346:1281::o;6333:288::-;6564:46;;;;;;;;:::i;:::-;;;;134:504:11;;;;6564:46:1;;;;;;:::i;5463:117::-;5543:10;5555:13;5543:10;;134:504:11;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;134:504:11;;;;;-1:-1:-1;;;;;134:504:11;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;:::o;15252:1041:1:-;;;;;15483:14;;:18;;15500:1;15483:18;:::i;:::-;;15479:808;;15252:1041;;;;;;;:::o;15479:808::-;15500:1;15521:78;:20;:78;:43;:20;;;:::i;:43::-;:78;;134:504:11;;;;15521:78:1;;;;;;;;-1:-1:-1;;;15521:78:1;;;;;;:::i;:::-;;;;;;;;;;15479:808;-1:-1:-1;15517:760:1;;-1:-1:-1;15517:760:1;;;15479:808;;;;;;;;15517:760;15868:409;;:::i;:::-;15918:13;;;134:504:11;;;15918:13:1;:18;;15500:1;15918:18;:::i;:::-;;15914:349;;16022:26;;;134:504:11;;;;15914:349:1;16150:95;;;;;;;15517:760;15678:60;-1:-1:-1;;;15678:60:1;134:504:11;15678:60:1;;15674:179;;15517:760;;;15521:78;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;134:504:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;134:504:11;;;;;-1:-1:-1;;;;;134:504:11;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;14090:974:1:-;;;;;14296:14;;:18;;14313:1;14296:18;:::i;:::-;;14292:766;;14090:974;;;;;;:::o;14292:766::-;14313:1;14334:71;:20;:71;:38;:20;;;:::i;:38::-;:71;;134:504:11;;;;14334:71:1;;;;;;;;-1:-1:-1;;;14334:71:1;;;;;;:::i;:::-;;;;;;;;;;14292:766;-1:-1:-1;14330:718:1;;-1:-1:-1;14330:718:1;;;14454:55;-1:-1:-1;;;14454:55:1;134:504:11;14334:71:1;;;;;;;;;;;;;;;:::i;:::-;;;;"},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","recharge(uint256,uint256,bytes)":"f737e496","rechargeBatch(uint256[],uint256[],bytes)":"efaa5018","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"recharge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"bin\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"rechargeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.  admin => manager\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}. \"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Tokens/Token.sol\":\"Token\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x3b4293fa6f4694fd08fb2317d18460c86611b655a0a42a71b3ea2017bf85d3ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76df19bdaf09155ffe8a2e648c8687c4eed84e386a796d86a8fe3fdec0caac24\",\"dweb:/ipfs/Qmdwys5EWPr1tus2JSFuyUzzEoJrLzHSisWa5YM8GaHrDa\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/Tokens/Token.sol\":{\"keccak256\":\"0xc41d532109e3bfa4475664df80dd4414b3e10249a60866aa55e235e8cb2e6cdc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9f67a04386f2451f8537c0b2cc70572ebf01138b686db8b44625df222d068cb\",\"dweb:/ipfs/Qmf7dq2KQAfMfj5AqmA2ydwFgG4VvCyWazZncHip4iimde\"]}},\"version\":1}"}}}}}